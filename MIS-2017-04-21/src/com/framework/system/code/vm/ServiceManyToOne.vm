package ${requestMap.entityInfo.bussiPackage}.service.$requestMap.entityInfo.entityPackage;

import java.math.BigDecimal;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import org.apache.log4j.Logger;

#foreach( $relation in $requestMap.relationList)
import ${requestMap.entityInfo.bussiPackage}.entity.${relation.joinColumn}.${relation.joinColumnFirstUpper}Entity;
#end
import ${requestMap.entityInfo.bussiPackage}.entity.${requestMap.entityInfo.entityPackage}.${requestMap.entityInfo.entityName}Entity;
import com.framework.system.db.connect.DbUtils;
import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.PageList;
import com.framework.system.db.query.QueryCondition;
import com.framework.system.db.transaction.TransactionManager;



/**   
 * @Title: Service
 * @Description: $requestMap.entityInfo.tableDescription服务类
 * @author feng.gu
 * @date $requestMap.entityInfo.createTime
 * @version V1.0   
 *
 */
public class ${requestMap.entityInfo.entityName}Service {
	   private static Logger logger = Logger.getLogger(${requestMap.entityInfo.entityName}Service.class);
	   private DBManager dbManager = DBManager.getInstance();
    		
	   private static ${requestMap.entityInfo.entityName}Service ${requestMap.entityInfo.entityPackage}Service;
	   /**
	    * 获取实例	
	    * @return
	    */
	   public static ${requestMap.entityInfo.entityName}Service getInstance(){
		if(${requestMap.entityInfo.entityPackage}Service==null){
			${requestMap.entityInfo.entityPackage}Service = new ${requestMap.entityInfo.entityName}Service();
		}
		return ${requestMap.entityInfo.entityPackage}Service;
	   }
	 
	   /**
		 * 保存记录
		 * 
		 * @param obj
		 */
		public boolean save(${requestMap.entityInfo.entityName}Entity ${requestMap.entityInfo.entityPackage}) {			
			boolean result =false;
			if(${requestMap.entityInfo.entityPackage}!=null){
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					 tx.beginTransaction();					 
					 dbManager.saveNoTransaction(${requestMap.entityInfo.entityPackage});
					 #foreach( $relation in $requestMap.relationList)
					 //关联信息保存
					 if(${requestMap.entityInfo.entityPackage}.get${relation.joinColumnFirstUpper}()!=null){						   
						 dbManager.saveNoTransaction(${requestMap.entityInfo.entityPackage}.get${relation.joinColumnFirstUpper}());
					 }
					 #end
					 tx.commitAndClose();   
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {				    
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  			
			}	
			return result;
		}
		
		/**
		 * 批量保存记录
		 * 
		 * @param list
		 */
		public boolean saveList(List<${requestMap.entityInfo.entityName}Entity> ${requestMap.entityInfo.entityPackage}List) {
			boolean result = false;
			if (${requestMap.entityInfo.entityPackage}List != null && ${requestMap.entityInfo.entityPackage}List.size() > 0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 
					for(${requestMap.entityInfo.entityName}Entity ${requestMap.entityInfo.entityPackage}:${requestMap.entityInfo.entityPackage}List){
						if(${requestMap.entityInfo.entityPackage}!=null){												  
								 dbManager.saveNoTransaction(${requestMap.entityInfo.entityPackage});
								 //关联信息保存
								 #foreach( $relation in $requestMap.relationList)
								 if(${requestMap.entityInfo.entityPackage}.get${relation.joinColumnFirstUpper}()!=null){						   
									 dbManager.saveNoTransaction(${requestMap.entityInfo.entityPackage}.get${relation.joinColumnFirstUpper}());
								 }	
								 #end						 			
						}	
					}
				    tx.commitAndClose();   
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		/**
		 * 根据id读取记录
		 * @param id 主键
		 #foreach( $relation in $requestMap.relationList)
		 * @param ${relation.joinColumn}Show 是否查询关联信息
		 #end
		 * @param obj
		 */
		public ${requestMap.entityInfo.entityName}Entity getById(Integer id#foreach( $relation in $requestMap.relationList),Boolean ${relation.joinColumn}Show#end) {
			${requestMap.entityInfo.entityName}Entity obj = null;
			if (id!=null) {
				obj = (${requestMap.entityInfo.entityName}Entity)dbManager.getById(id, ${requestMap.entityInfo.entityName}Entity.class);
				#foreach( $relation in $requestMap.relationList)
				//查询关联内容
				if(${relation.joinColumn}Show!=null&&${relation.joinColumn}Show.booleanValue()&&obj!=null&&obj.get${relation.joinColumnFirstUpper}Id()>0){
					${relation.joinColumnFirstUpper}Entity ${relation.joinColumn} = (${relation.joinColumnFirstUpper}Entity)dbManager.getById(obj.get${relation.joinColumnFirstUpper}Id(), ${relation.joinColumnFirstUpper}Entity.class);
					obj.set${relation.joinColumnFirstUpper}(${relation.joinColumn});        	  	  
				}
				#end
				
			}
			return obj;
		}
		
		/**
		 * 根据id读取记录集合
		 * @param queryMap 查询条件集合
		 * @param pageno
		 * @param pagesize
		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,int pageno,int pagesize) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
			#foreach( $column in $requestMap.columntList)
				#if("Long"==$column.fieldType||"Integer"==$column.fieldType||"Float"==$column.fieldType||"BigDecimal"==$column.fieldType)
					Object ${column.fieldName}=queryMap.get("${column.fieldName}");
					Object ${column.fieldName}_gt=queryMap.get("${column.fieldName}_gt");
					Object ${column.fieldName}_ge=queryMap.get("${column.fieldName}_ge");
					Object ${column.fieldName}_lt=queryMap.get("${column.fieldName}_lt");
					Object ${column.fieldName}_le=queryMap.get("${column.fieldName}_le");
					Object ${column.fieldName}_in=queryMap.get("${column.fieldName}_in");
				#else
					Object ${column.fieldName}=queryMap.get("${column.fieldName}");
					Object ${column.fieldName}_like=queryMap.get("${column.fieldName}_like");
					Object ${column.fieldName}_isNull=queryMap.get("${column.fieldName}_isNull");
					Object ${column.fieldName}_isNotNull=queryMap.get("${column.fieldName}_isNotNull");
				#end
			#end
			
			QueryCondition qc = new QueryCondition(${requestMap.entityInfo.entityName}Entity.ID, QueryCondition.gt, "0");				
			#foreach( $column in $requestMap.columntList)
				#if("Long"==$column.fieldType||"Integer"==$column.fieldType||"Float"==$column.fieldType||"BigDecimal"==$column.fieldType)
					if(${column.fieldName}!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.in, ${column.fieldName}));}
					if(${column.fieldName}_gt!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.gt, ${column.fieldName}_gt));}
					if(${column.fieldName}_ge!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.ge, ${column.fieldName}_ge));}
					if(${column.fieldName}_lt!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.lt, ${column.fieldName}_lt));}
					if(${column.fieldName}_le!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.le, ${column.fieldName}_le));}
					if(${column.fieldName}_in!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.in, ${column.fieldName}_in));}
				#else
					if(${column.fieldName}!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.eq, ${column.fieldName}));}
		            if(${column.fieldName}_like!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.like, ${column.fieldName}_like));}
		            if(${column.fieldName}_isNull!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.isNull, ${column.fieldName}_isNull));}
		            if(${column.fieldName}_isNotNull!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.isNotNull, ${column.fieldName}_isNotNull));}
				#end
			#end

            pagelist = dbManager.queryByCondition(${requestMap.entityInfo.entityName}Entity.class,qc,pageno,pagesize);						
			return pagelist;
		}
		
		/**
		 * 删除记录
		 * 
		 * @param id 主键
		 * @param obj
		 */
		public boolean del(Integer id#foreach( $relation in $requestMap.relationList),Boolean del${relation.joinColumnFirstUpper}#end) {
			boolean result = false;
			if (id !=null&&id>0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 
					result = dbManager.delNoTransaction(id, ${requestMap.entityInfo.entityName}Entity.class);
					#foreach( $relation in $requestMap.relationList)
					//删除关联信息
					if(del${relation.joinColumnFirstUpper}!=null&&del${relation.joinColumnFirstUpper}.booleanValue()){	
						${requestMap.entityInfo.entityName}Entity ${requestMap.entityInfo.entityPackage} = (${requestMap.entityInfo.entityName}Entity)dbManager.getById(id, ${requestMap.entityInfo.entityName}Entity.class);
						if(${requestMap.entityInfo.entityPackage}.get${relation.joinColumnFirstUpper}Id()!=null){
							dbManager.delNoTransaction(${requestMap.entityInfo.entityPackage}.get${relation.joinColumnFirstUpper}Id(), ${relation.joinColumnFirstUpper}Entity.class);
						}						
					}
					#end
					tx.commitAndClose();   
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}

		/**
		 * 批量条件删除记录
		 * @param queryMap 查询条件集合
		 #foreach( $relation in $requestMap.relationList)
		 * @param del${relation.joinColumnFirstUpper}List 是否删除关联信息
		 #end
		 */
		public boolean delList(Map<String,Object> queryMap#foreach( $relation in $requestMap.relationList),Boolean del${relation.joinColumnFirstUpper}List#end) {
			boolean result = false;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
			#foreach( $column in $requestMap.columntList)
				#if("Long"==$column.fieldType||"Integer"==$column.fieldType||"Float"==$column.fieldType||"BigDecimal"==$column.fieldType)
					Object ${column.fieldName}=queryMap.get("${column.fieldName}");
					Object ${column.fieldName}_gt=queryMap.get("${column.fieldName}_gt");
					Object ${column.fieldName}_ge=queryMap.get("${column.fieldName}_ge");
					Object ${column.fieldName}_lt=queryMap.get("${column.fieldName}_lt");
					Object ${column.fieldName}_le=queryMap.get("${column.fieldName}_le");
					Object ${column.fieldName}_in=queryMap.get("${column.fieldName}_in");
				#else
					Object ${column.fieldName}=queryMap.get("${column.fieldName}");
					Object ${column.fieldName}_like=queryMap.get("${column.fieldName}_like");
					Object ${column.fieldName}_isNull=queryMap.get("${column.fieldName}_isNull");
					Object ${column.fieldName}_isNotNull=queryMap.get("${column.fieldName}_isNotNull");
				#end
			#end
			
			QueryCondition qc = new QueryCondition(${requestMap.entityInfo.entityName}Entity.ID, QueryCondition.gt, "0");		
			#foreach( $column in $requestMap.columntList)
				#if("Long"==$column.fieldType||"Integer"==$column.fieldType||"Float"==$column.fieldType||"BigDecimal"==$column.fieldType)
					if(${column.fieldName}!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.in, ${column.fieldName}));}
					if(${column.fieldName}_gt!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.gt, ${column.fieldName}_gt));}
					if(${column.fieldName}_ge!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.ge, ${column.fieldName}_ge));}
					if(${column.fieldName}_lt!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.lt, ${column.fieldName}_lt));}
					if(${column.fieldName}_le!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.le, ${column.fieldName}_le));}
					if(${column.fieldName}_in!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.in, ${column.fieldName}_in));}
				#else
					if(${column.fieldName}!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.eq, ${column.fieldName}));}
		            if(${column.fieldName}_like!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.like, ${column.fieldName}_like));}
		            if(${column.fieldName}_isNull!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.isNull, ${column.fieldName}_isNull));}
		            if(${column.fieldName}_isNotNull!=null){qc.andCondition(new QueryCondition(${requestMap.entityInfo.entityName}Entity.${column.fieldUpperName}, QueryCondition.isNotNull, ${column.fieldName}_isNotNull));}
				#end
			#end
			if (qc.getQueryNextCondition()!=null) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 		
					result = dbManager.delByConditionsNoTransaction(${requestMap.entityInfo.entityName}Entity.class,qc);
					#foreach( $relation in $requestMap.relationList)
					//删除关联信息
					if(del${relation.joinColumnFirstUpper}List!=null&&del${relation.joinColumnFirstUpper}List.booleanValue()){
						List<Object> list=dbManager.queryByCondition(${requestMap.entityInfo.entityName}Entity.class,qc);
						String strIds="";
						if(list!=null&&list.size()>0){
							for(Object obj:list){
								${requestMap.entityInfo.entityName}Entity entity=(${requestMap.entityInfo.entityName}Entity)obj;
								strIds += entity.get${relation.joinColumnFirstUpper}Id()+",";
							}
							strIds = strIds.substring(0, strIds.length()-1);
						}
						if(strIds!=null&&!"".equals(strIds)){
							QueryCondition qc1 = new QueryCondition(${relation.joinColumnFirstUpper}Entity.ID, QueryCondition.in, strIds);
							dbManager.delByConditionsNoTransaction(${relation.joinColumnFirstUpper}Entity.class, qc1);
						}
						
					}	
					#end				
					tx.commitAndClose();   
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}			
}
