package fsk.handler.examinationRecordFile;

import java.io.OutputStream;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.log4j.Logger;

import fsk.entity.examinationRecordFile.ExaminationRecordFileEntity;
import fsk.pack.examinationRecordFile.ExaminationRecordFilePack;
import fsk.parse.examinationRecordFile.ExaminationRecordFileParse;
import fsk.service.examinationRecordFile.ExaminationRecordFileService;
import com.framework.system.common.service.SystemService;

import com.framework.system.business.handler.BaseHandler;
import com.framework.system.db.query.OrderVO;

 /**   
 * @Title: Handler
 * @Description: 体检记录文件信息表业务处理器
 * @author feng.gu
 * @date 2016-10-11 15:23:17
 * @version V1.0   
 *
 */
public class ExaminationRecordFileHandler extends BaseHandler{
	private static Logger logger = Logger.getLogger(ExaminationRecordFileService.class);
	/**
	 * 解析器
	 */
	private ExaminationRecordFileParse examinationRecordFileParse = ExaminationRecordFileParse.getInstance();
	/**
	 * 业务处理器
	 */
	private ExaminationRecordFileService examinationRecordFileService = ExaminationRecordFileService.getInstance();
	/**
	 * 封装器
	 */
	private ExaminationRecordFilePack examinationRecordFilePack = ExaminationRecordFilePack.getInstance();

	private static ExaminationRecordFileHandler examinationRecordFileHandler;
	
	/**
	 * 系统服务类
	 */
	private SystemService systemService = SystemService.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static ExaminationRecordFileHandler getInstance() {
		if (examinationRecordFileHandler == null) {
			examinationRecordFileHandler = new ExaminationRecordFileHandler();
		}
		return examinationRecordFileHandler;
	}

	/**
	 * 
	 * @param type 1-json 2-xml
	 * @param entityName
	 * @param command
	 * @param reqStr
	 * @param request
	 * @param response
	 */
	public String doHandler(int type,String command,String reqStr, HttpServletRequest request,
			HttpServletResponse response) {		
		logger.debug("请求消息："+reqStr);
		String resultStr="";
		try {
			// 解析
			Map<String, Object> parseMap = examinationRecordFileParse.parse(type,command,reqStr,request);		
			String action = (String) parseMap.get("action");
			ExaminationRecordFileEntity examinationRecordFile = (ExaminationRecordFileEntity) parseMap.get("examinationRecordFile");
			List<ExaminationRecordFileEntity> examinationRecordFileList = (List<ExaminationRecordFileEntity>) parseMap.get("examinationRecordFileList");
			Integer id = (Integer) parseMap.get("id");			
			Map<String, Object> queryMap = (Map<String, Object>) parseMap.get("queryMap");
			int pageno = (Integer) parseMap.get("pageno");
			int pagesize = (Integer) parseMap.get("pagesize");
			List<OrderVO> orderList = (List<OrderVO>) parseMap.get("orderList");
			
															Boolean examinationRecordShow = (Boolean) parseMap.get("examinationRecordShow");
			Boolean delExaminationRecord = (Boolean) parseMap.get("delExaminationRecord");
															
			// 业务处理
			Object result=null;
			if ("save".equals(action)) {
				result = examinationRecordFileService.save(examinationRecordFile);
			} else if ("saveList".equals(action)) {
				result = examinationRecordFileService.saveList(examinationRecordFileList);
			} else if ("getById".equals(action)) {
				result = examinationRecordFileService.getById(id,examinationRecordShow);
			} else if ("getListByCondition".equals(action)) {
			    //根据数据权限 增加查询条件
				queryMap = systemService.addDataRuleByRoles("ExaminationRecordFileEntity",queryMap,request);
				result = examinationRecordFileService.getListByCondition(queryMap,orderList, pageno,
						pagesize,examinationRecordShow);
			} else if ("del".equals(action)) {
				result = examinationRecordFileService.del(id,delExaminationRecord);
			} else if ("delList".equals(action)) {
				result = examinationRecordFileService.delList(queryMap,delExaminationRecord);
			}
			// 封装
			Map<String, Object> packMap = examinationRecordFilePack.pack(type,action,result,examinationRecordFile);
			String actionBack = (String)packMap.get("action");
			String resultBack = (String)packMap.get("result");
			String desBack = (String)packMap.get("des");
			JSONObject pageBack = (JSONObject)packMap.get("page");
			JSONObject contentBack = (JSONObject)packMap.get("content");
			
			JSONObject repJson = new JSONObject();
			if(actionBack!=null&&!"".equals(actionBack)){
				repJson.put("action", actionBack);
			}
			if(resultBack!=null&&!"".equals(resultBack)){
				repJson.put("result", resultBack);
			}
			if(desBack!=null&&!"".equals(desBack)){
				repJson.put("des", desBack);
			}
			if(pageBack!=null){
				repJson.put("page", pageBack);
			}
			if(contentBack!=null&&!"".equals(contentBack)){
				repJson.put("content", contentBack);
			}
			logger.debug("返回消息："+repJson.toString());
			resultStr = repJson.toString();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return resultStr;
	}
}
