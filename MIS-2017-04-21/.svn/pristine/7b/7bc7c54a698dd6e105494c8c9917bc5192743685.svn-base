package fsk.pack.healthAssessment;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;

import com.framework.system.db.query.PageList;

import fsk.entity.employee.EmployeeEntity;
import fsk.entity.healthAssessment.HealthAssessmentEntity;
import fsk.entity.healthReportPhoto.HealthReportPhotoEntity;
import fsk.entity.skinLesions.SkinLesionsEntity;
import fsk.service.employee.EmployeeService;
import fsk.service.healthAssessment.HealthAssessmentService;
import fsk.service.healthReportPhoto.HealthReportPhotoService;
import fsk.service.skinLesions.SkinLesionsService;

/**
 * @Title: Pack
 * @Description: 健康评估封装器
 * @author feng.gu
 * @date 2016-08-11 17:31:29
 * @version V1.0
 * 
 */
public class HealthAssessmentPack {
	private static Logger logger = Logger.getLogger(HealthAssessmentPack.class);
	private static HealthAssessmentPack healthAssessmentPack;
	private static SkinLesionsService skinLesionsService=SkinLesionsService.getInstance();
	private static HealthReportPhotoService healthReportPhotoService=HealthReportPhotoService.getInstance();
	private HealthAssessmentService healthAssessmentService = HealthAssessmentService.getInstance();
	private EmployeeService employeeService = EmployeeService.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static HealthAssessmentPack getInstance() {
		if (healthAssessmentPack == null) {
			healthAssessmentPack = new HealthAssessmentPack();
		}
		return healthAssessmentPack;
	}

	public Map<String, Object> pack(int type, String action, Object request,
			Object entity) {
		// 定义返回参数
		Map<String, Object> packMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			packMap = this.packByJson(action, request, entity);
		} else if (type == 2) {
			// xml
			packMap = this.packByXml(action, request, entity);
		}
		return packMap;
	}

	private Map<String, Object> packByJson(String action, Object request,
			Object entity) {
		// 定义返回参数
		Map<String, Object> packMap = new HashMap<String, Object>();
		String actionBack = null;
		String resultBack = null;
		String desBack = null;
		JSONObject pageBack = null;
		JSONObject contentBack = null;
		try {
			if ("save".equals(action)) {
				actionBack = "ADD_HEALTH_ASSESSMENT_INFO_RESPONSE";
				if (request.equals(true)) {
					resultBack = "100";
					desBack = "success";
				} else if (request.equals(false)) {
					resultBack = "200";
					desBack = "failure";
				}
				HealthAssessmentEntity healthAssessment = (HealthAssessmentEntity) entity;
				if (healthAssessment != null) {
					contentBack = new JSONObject();
					contentBack.put("id", healthAssessment.getId());

					if (healthAssessment.getEmployee() != null) {
						contentBack.put("employeeId", healthAssessment
								.getEmployee().getId());
					}
					if (healthAssessment.getOlder() != null) {
						contentBack.put("olderId", healthAssessment.getOlder()
								.getId());
					}
					if (healthAssessment.getHealthReport() != null) {
						contentBack.put("healthReportId", healthAssessment
								.getHealthReport().getId());
					}
					if (healthAssessment.getRecovery() != null) {
						contentBack.put("recoveryId", healthAssessment
								.getRecovery().getId());
					}
					if (healthAssessment.getAdl() != null) {
						contentBack.put("adlId", healthAssessment.getAdl()
								.getId());
					}
					if (healthAssessment.getNutrition() != null) {
						contentBack.put("nutritionId", healthAssessment
								.getNutrition().getId());
					}
					if (healthAssessment.getFall() != null) {
						contentBack.put("fallId", healthAssessment.getFall()
								.getId());
					}
					if (healthAssessment.getSore() != null) {
						contentBack.put("soreId", healthAssessment.getSore()
								.getId());
					}
					if (healthAssessment.getMmse() != null) {
						contentBack.put("mmseId", healthAssessment.getMmse()
								.getId());
					}
					if (healthAssessment.getMas() != null) {
						contentBack.put("masId", healthAssessment.getMas()
								.getId());
					}
					if (healthAssessment.getBarthel() != null) {
						contentBack.put("barthelId", healthAssessment
								.getBarthel().getId());
					}
					if (healthAssessment.getFca() != null) {
						contentBack.put("fcaId", healthAssessment.getFca()
								.getId());
					}
				}
			} else if ("getById".equals(action)) {
				actionBack = "QUERY_HEALTH_ASSESSMENT_INFO_RESPONSE";
				resultBack = "100";
				desBack = "success";
				HealthAssessmentEntity healthAssessment = (HealthAssessmentEntity) request;
				if (healthAssessment != null) {
					contentBack = JSONObject.fromObject(healthAssessment);
					if (healthAssessment.getEmployee() != null) {
						contentBack.put("employee", JSONObject
								.fromObject(healthAssessment.getEmployee()));
					}
					if (healthAssessment.getOlder() != null) {
						contentBack.put("older", JSONObject
								.fromObject(healthAssessment.getOlder()));
					}
					if (healthAssessment.getHealthReport() != null) {
						/*healthReportPhotoList返回pei*/
						Map<String, Object> queryMap = new HashMap<String, Object>();
						queryMap.put("healthReportId",healthAssessment.getHealthReport().getId());
						List<HealthReportPhotoEntity> photoList = healthReportPhotoService.getListByCondition(queryMap);
						JSONObject jsonrec = JSONObject.fromObject(healthAssessment.getHealthReport());
						jsonrec.put("healthReportPhotoList", photoList);
						contentBack.put("healthReport", jsonrec);
					}
					if (healthAssessment.getRecovery() != null) {
						/*skinLesionsList返回pei*/
						Map<String, Object> queryMapD = new HashMap<String, Object>();
						queryMapD.put("recoveryId",healthAssessment.getRecovery().getId());
						List<SkinLesionsEntity> skinList = skinLesionsService.getListByCondition(queryMapD);
						
						JSONObject jsonrec = JSONObject.fromObject(healthAssessment.getRecovery());
						jsonrec.put("skinLesionsList", skinList);
						contentBack.put("recovery", jsonrec);
					}
					if (healthAssessment.getAdl() != null) {
						contentBack.put("adl", JSONObject
								.fromObject(healthAssessment.getAdl()));
					}
					if (healthAssessment.getNutrition() != null) {
						contentBack.put("nutrition", JSONObject
								.fromObject(healthAssessment.getNutrition()));
					}
					if (healthAssessment.getFall() != null) {
						contentBack.put("fall", JSONObject
								.fromObject(healthAssessment.getFall()));
					}
					if (healthAssessment.getSore() != null) {
						contentBack.put("sore", JSONObject
								.fromObject(healthAssessment.getSore()));
					}
					if (healthAssessment.getMmse() != null) {
						contentBack.put("mmse", JSONObject
								.fromObject(healthAssessment.getMmse()));
					}
					if (healthAssessment.getMas() != null) {
						contentBack.put("mas", JSONObject
								.fromObject(healthAssessment.getMas()));
					}
					if (healthAssessment.getBarthel() != null) {
						contentBack.put("barthel", JSONObject
								.fromObject(healthAssessment.getBarthel()));
					}
					if (healthAssessment.getFca() != null) {
						contentBack.put("fca", JSONObject
								.fromObject(healthAssessment.getFca()));
					}
				}
			} else if ("getListByCondition".equals(action)) {
				actionBack = "QUERY_HEALTH_ASSESSMENT_LIST_RESPONSE";
				resultBack = "100";
				desBack = "success";
				JSONArray listnew = new JSONArray();
				PageList pageList = (PageList) request;
				if (pageList != null && pageList.getResultList() != null
						&& pageList.getResultList().size() > 0) {
					contentBack = new JSONObject();
					pageBack = new JSONObject();
					JSONArray list = JSONArray.fromObject(pageList
							.getResultList());
					/*增加employeeName茗pei*/
					for(int i = 0;i<list.size();i++){
						JSONObject info = (JSONObject)list.get(i);
						Integer empId = (Integer)info.get("employeeId");
						if(empId!=null){
							EmployeeEntity employeeEntity=employeeService.getById(empId);
							if(employeeEntity!=null){
								info.put("employeeName", employeeEntity.getName());
							}
						}
						listnew.add(info);
					}
					contentBack.put("healthAssessmentList", listnew);
					//

					pageBack.put("pageno", pageList.getPageno());
					pageBack.put("pagesize", pageList.getPagesize());
					pageBack.put("recordCount", pageList.getRecordCount());
					pageBack.put("pageCount", pageList.getPageCount());

				}
			} else if ("del".equals(action)) {
				actionBack = "DEL_HEALTH_ASSESSMENT_INFO_REQUEST";
				if (request.equals(true)) {
					resultBack = "100";
					desBack = "success";
				} else if (request.equals(false)) {
					resultBack = "200";
					desBack = "failure";
				}
			} else if ("delList".equals(action)) {
				actionBack = "DEL_HEALTH_ASSESSMENT_LIST_REQUEST";
				if (request.equals(true)) {
					resultBack = "100";
					desBack = "success";
				} else if (request.equals(false)) {
					resultBack = "200";
					desBack = "failure";
				}
			}
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		if (actionBack != null && !"".equals(actionBack)) {
			packMap.put("action", actionBack);
		}
		if (resultBack != null && !"".equals(resultBack)) {
			packMap.put("result", resultBack);
		}
		if (desBack != null && !"".equals(desBack)) {
			packMap.put("des", desBack);
		}
		if (pageBack != null) {
			packMap.put("page", pageBack);
		}
		if (contentBack != null) {
			packMap.put("content", contentBack);
		}
		return packMap;
	}

	private Map<String, Object> packByXml(String action, Object request,
			Object entity) {
		Map<String, Object> packMap = new HashMap<String, Object>();
		return packMap;
	}

}
