package com.framework.system.common.service.dataRule;

import java.math.BigDecimal;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import org.apache.log4j.Logger;


import com.framework.system.common.entity.user.UserEntity;
import com.framework.system.common.entity.user.UserEntity;

import com.framework.system.common.entity.dataRule.DataRuleEntity;
import com.framework.system.db.connect.DbUtils;
import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.PageList;
import com.framework.system.db.query.QueryCondition;
import com.framework.system.db.query.OrderByCondition;
import com.framework.system.db.query.OrderVO;
import com.framework.system.db.transaction.TransactionManager;
import com.framework.system.util.StringUtil;



/**   
 * @Title: Service
 * @Description: 数据规则功能服务类
 * @author feng.gu
 * @date 2016-05-10 10:00:42
 * @version V1.0   
 *
 */
public class DataRuleService {
	   private static Logger logger = Logger.getLogger(DataRuleService.class);
	   private DBManager dbManager = DBManager.getInstance();
    		
	   private static DataRuleService dataRuleService;
	   /**
	    * 获取实例	
	    * @return
	    */
	   public static DataRuleService getInstance(){
		if(dataRuleService==null){
			dataRuleService = new DataRuleService();
		}
		return dataRuleService;
	   }
	                 	                 				     				     				     				     
				     	 
	   /**
		 * 保存记录
		 * 
		 * @param obj
		 */
		public boolean save(DataRuleEntity dataRule) {			
			boolean result =false;
			if(dataRule!=null){
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					 tx.beginTransaction();					 					 
					 					 				     				     					     //关联信息保存
					     UserEntity createUser = dataRule.getCreateUser();
						 if(createUser!=null){						   
							 dbManager.saveNoTransaction(createUser);
							 dataRule.setCreateUserId(createUser.getId());
						 }						 
				     				     				     					 					 				     				     					     //关联信息保存
					     UserEntity updateUser = dataRule.getUpdateUser();
						 if(updateUser!=null){						   
							 dbManager.saveNoTransaction(updateUser);
							 dataRule.setUpdateUserId(updateUser.getId());
						 }						 
				     				     				     					 					 result=dbManager.saveNoTransaction(dataRule);	
					 tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {				    
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  			
			}	
			return result;
		}
		
		/**
		 * 批量保存记录
		 * 
		 * @param list
		 */
		public boolean saveList(List<DataRuleEntity> dataRuleList) {
			boolean result = false;
			if (dataRuleList != null && dataRuleList.size() > 0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 
					for(DataRuleEntity dataRule:dataRuleList){
						if(dataRule!=null){												  								 
								 									 					                 								     								         //关联信息保存
									     UserEntity createUser = dataRule.getCreateUser();
										 if(createUser!=null){						   
											 dbManager.saveNoTransaction(createUser);
											 dataRule.setCreateUserId(createUser.getId());
										 }									 
								     								     								     								 									 					                 								     								         //关联信息保存
									     UserEntity updateUser = dataRule.getUpdateUser();
										 if(updateUser!=null){						   
											 dbManager.saveNoTransaction(updateUser);
											 dataRule.setUpdateUserId(updateUser.getId());
										 }									 
								     								     								     								 								 result=dbManager.saveNoTransaction(dataRule);								 			
						}	
					}
				    tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
				/**
		 * 根据id读取记录
		 * 
		 * @param id
		 *            主键
		 * @param obj
		 */
		public DataRuleEntity getById(Integer id) {
			DataRuleEntity obj = null;
			if (id != null) {
				obj = (DataRuleEntity) dbManager.getById(id, DataRuleEntity.class);			
			}
			return obj;
		}
				
		
		/**
		 * 根据id读取记录
		 * @param id 主键
		 		             	                 				     		 * @param createUserShow 是否查询关联信息
				     				     				     		 		             	                 				     		 * @param updateUserShow 是否查询关联信息
				     				     				     		 		 * @param obj
		 */
		public DataRuleEntity getById(Integer id,Boolean createUserShow,Boolean updateUserShow) {
			DataRuleEntity obj = null;
			if (id!=null) {
				obj = (DataRuleEntity)dbManager.getById(id, DataRuleEntity.class);
									 	                 				     				        //查询关联内容
						if(createUserShow!=null&&createUserShow.booleanValue()&&obj!=null&&obj.getCreateUserId()!=null&&obj.getCreateUserId()>0){
							UserEntity createUser = (UserEntity)dbManager.getById(obj.getCreateUserId(), UserEntity.class);
							obj.setCreateUser(createUser);        	  	  
						}
				     				     				     				   					 	                 				     				        //查询关联内容
						if(updateUserShow!=null&&updateUserShow.booleanValue()&&obj!=null&&obj.getUpdateUserId()!=null&&obj.getUpdateUserId()>0){
							UserEntity updateUser = (UserEntity)dbManager.getById(obj.getUpdateUserId(), UserEntity.class);
							obj.setUpdateUser(updateUser);        	  	  
						}
				     				     				     				   			}
			return obj;
		}
		
		/**
		 * 根据条件查询记录集合（不分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合		
		 * @return
		 */
		public List<DataRuleEntity> getListByCondition(Map<String,Object> queryMap) {
		    List<DataRuleEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
																										Object entityName=queryMap.get("entityName");
					Object entityName_like=queryMap.get("entityName_like");
					Object entityName_isNull=queryMap.get("entityName_isNull");
					Object entityName_isNotNull=queryMap.get("entityName_isNotNull");
					Object entityName_in=queryMap.get("entityName_in");
																										Object dataCondition=queryMap.get("dataCondition");
					Object dataCondition_like=queryMap.get("dataCondition_like");
					Object dataCondition_isNull=queryMap.get("dataCondition_isNull");
					Object dataCondition_isNotNull=queryMap.get("dataCondition_isNotNull");
					Object dataCondition_in=queryMap.get("dataCondition_in");
																					Object createUserId=queryMap.get("createUserId");
					Object createUserId_gt=queryMap.get("createUserId_gt");
					Object createUserId_ge=queryMap.get("createUserId_ge");
					Object createUserId_lt=queryMap.get("createUserId_lt");
					Object createUserId_le=queryMap.get("createUserId_le");
					Object createUserId_in=queryMap.get("createUserId_in");
																					Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
																					Object updateUserId=queryMap.get("updateUserId");
					Object updateUserId_gt=queryMap.get("updateUserId_gt");
					Object updateUserId_ge=queryMap.get("updateUserId_ge");
					Object updateUserId_lt=queryMap.get("updateUserId_lt");
					Object updateUserId_le=queryMap.get("updateUserId_le");
					Object updateUserId_in=queryMap.get("updateUserId_in");
																					Object updateTime_gt=queryMap.get("updateTime_gt");
					Object updateTime_ge=queryMap.get("updateTime_ge");
					Object updateTime_lt=queryMap.get("updateTime_lt");
					Object updateTime_le=queryMap.get("updateTime_le");
																										Object entityShow=queryMap.get("entityShow");
					Object entityShow_like=queryMap.get("entityShow_like");
					Object entityShow_isNull=queryMap.get("entityShow_isNull");
					Object entityShow_isNotNull=queryMap.get("entityShow_isNotNull");
					Object entityShow_in=queryMap.get("entityShow_in");
												
			

																				
			
			QueryCondition qc = new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.in, id_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(entityName!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.eq, entityName));}
		            if(entityName_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.like, entityName_like));}
		            if(entityName_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNull, entityName_isNull));}
		            if(entityName_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNotNull, entityName_isNotNull));}
				    if(entityName_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.in, entityName_in));}
				  															  					if(dataCondition!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.eq, dataCondition));}
		            if(dataCondition_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.like, dataCondition_like));}
		            if(dataCondition_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNull, dataCondition_isNull));}
		            if(dataCondition_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNotNull, dataCondition_isNotNull));}
				    if(dataCondition_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.in, dataCondition_in));}
				  																if(createUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.eq, createUserId));}
					if(createUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.gt, createUserId_gt));}
					if(createUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.ge, createUserId_ge));}
					if(createUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.lt, createUserId_lt));}
					if(createUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.le, createUserId_le));}
					if(createUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.in, createUserId_in));}
															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  																if(updateUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.eq, updateUserId));}
					if(updateUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.gt, updateUserId_gt));}
					if(updateUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.ge, updateUserId_ge));}
					if(updateUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.lt, updateUserId_lt));}
					if(updateUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.le, updateUserId_le));}
					if(updateUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.in, updateUserId_in));}
															  					if(updateTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.gt, updateTime_gt));}
					if(updateTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.ge, updateTime_ge));}
					if(updateTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.lt, updateTime_lt));}
					if(updateTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.le, updateTime_le));}
				  															  					if(entityShow!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.eq, entityShow));}
		            if(entityShow_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.like, entityShow_like));}
		            if(entityShow_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNull, entityShow_isNull));}
		            if(entityShow_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNotNull, entityShow_isNotNull));}
				    if(entityShow_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.in, entityShow_in));}
				  										
						  						  			            list = dbManager.queryByCondition(DataRuleEntity.class,qc);    
            if(list!=null&&list.size()>0){
               returnlist = new ArrayList<DataRuleEntity>();
               for (Object obj:list) {           
                 returnlist.add((DataRuleEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		
		/**
		 * 根据条件查询记录集合（不分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 		             	                 				     		 * @param createUserShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		             	                 				     		 * @param updateUserShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		 * @return
		 */
		public List<DataRuleEntity> getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,Boolean createUserShow,Boolean updateUserShow) {
			List<DataRuleEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
																										Object entityName=queryMap.get("entityName");
					Object entityName_like=queryMap.get("entityName_like");
					Object entityName_isNull=queryMap.get("entityName_isNull");
					Object entityName_isNotNull=queryMap.get("entityName_isNotNull");
					Object entityName_in=queryMap.get("entityName_in");
																										Object dataCondition=queryMap.get("dataCondition");
					Object dataCondition_like=queryMap.get("dataCondition_like");
					Object dataCondition_isNull=queryMap.get("dataCondition_isNull");
					Object dataCondition_isNotNull=queryMap.get("dataCondition_isNotNull");
					Object dataCondition_in=queryMap.get("dataCondition_in");
																					Object createUserId=queryMap.get("createUserId");
					Object createUserId_gt=queryMap.get("createUserId_gt");
					Object createUserId_ge=queryMap.get("createUserId_ge");
					Object createUserId_lt=queryMap.get("createUserId_lt");
					Object createUserId_le=queryMap.get("createUserId_le");
					Object createUserId_in=queryMap.get("createUserId_in");
																					Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
																					Object updateUserId=queryMap.get("updateUserId");
					Object updateUserId_gt=queryMap.get("updateUserId_gt");
					Object updateUserId_ge=queryMap.get("updateUserId_ge");
					Object updateUserId_lt=queryMap.get("updateUserId_lt");
					Object updateUserId_le=queryMap.get("updateUserId_le");
					Object updateUserId_in=queryMap.get("updateUserId_in");
																					Object updateTime_gt=queryMap.get("updateTime_gt");
					Object updateTime_ge=queryMap.get("updateTime_ge");
					Object updateTime_lt=queryMap.get("updateTime_lt");
					Object updateTime_le=queryMap.get("updateTime_le");
																										Object entityShow=queryMap.get("entityShow");
					Object entityShow_like=queryMap.get("entityShow_like");
					Object entityShow_isNull=queryMap.get("entityShow_isNull");
					Object entityShow_isNotNull=queryMap.get("entityShow_isNotNull");
					Object entityShow_in=queryMap.get("entityShow_in");
												
			

																				
			
			QueryCondition qc = new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.in, id_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(entityName!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.eq, entityName));}
		            if(entityName_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.like, entityName_like));}
		            if(entityName_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNull, entityName_isNull));}
		            if(entityName_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNotNull, entityName_isNotNull));}
				    if(entityName_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.in, entityName_in));}
				  															  					if(dataCondition!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.eq, dataCondition));}
		            if(dataCondition_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.like, dataCondition_like));}
		            if(dataCondition_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNull, dataCondition_isNull));}
		            if(dataCondition_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNotNull, dataCondition_isNotNull));}
				    if(dataCondition_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.in, dataCondition_in));}
				  																if(createUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.eq, createUserId));}
					if(createUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.gt, createUserId_gt));}
					if(createUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.ge, createUserId_ge));}
					if(createUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.lt, createUserId_lt));}
					if(createUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.le, createUserId_le));}
					if(createUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.in, createUserId_in));}
															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  																if(updateUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.eq, updateUserId));}
					if(updateUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.gt, updateUserId_gt));}
					if(updateUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.ge, updateUserId_ge));}
					if(updateUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.lt, updateUserId_lt));}
					if(updateUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.le, updateUserId_le));}
					if(updateUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.in, updateUserId_in));}
															  					if(updateTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.gt, updateTime_gt));}
					if(updateTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.ge, updateTime_ge));}
					if(updateTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.lt, updateTime_lt));}
					if(updateTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.le, updateTime_le));}
				  															  					if(entityShow!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.eq, entityShow));}
		            if(entityShow_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.like, entityShow_like));}
		            if(entityShow_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNull, entityShow_isNull));}
		            if(entityShow_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNotNull, entityShow_isNotNull));}
				    if(entityShow_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.in, entityShow_in));}
				  										
						  						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}			
            list = dbManager.queryByConditions(DataRuleEntity.class,qc,oc);
                                    int a=0;
            					             	                 				     				     if(createUserShow!=null&&createUserShow.booleanValue()){
						a++;
					 }
				     				     				     		    		             	                 				     				     if(updateUserShow!=null&&updateUserShow.booleanValue()){
						a++;
					 }
				     				     				     		    		                if(a>0&&list!=null&&list.size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<list.size();i++){
					DataRuleEntity obj = (DataRuleEntity)list.get(i);
										 	                 				     				        //查询关联内容
						if(createUserShow!=null&&createUserShow.booleanValue()&&obj!=null&&obj.getCreateUserId()!=null&&obj.getCreateUserId()>0){
							UserEntity createUser = (UserEntity)dbManager.getById(obj.getCreateUserId(), UserEntity.class);
							obj.setCreateUser(createUser);        	  	  
						}
				     				     				     				    					 	                 				     				        //查询关联内容
						if(updateUserShow!=null&&updateUserShow.booleanValue()&&obj!=null&&obj.getUpdateUserId()!=null&&obj.getUpdateUserId()>0){
							UserEntity updateUser = (UserEntity)dbManager.getById(obj.getUpdateUserId(), UserEntity.class);
							obj.setUpdateUser(updateUser);        	  	  
						}
				     				     				     				    					result.add(obj);					
				}
				list=result;			
		}	
					if(list!=null&&list.size()>0){
               returnlist = new ArrayList<DataRuleEntity>();
               for (Object obj:list) {           
                 returnlist.add((DataRuleEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数		
		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,int pageno,int pagesize) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
															  					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
				   															  					Object entityName=queryMap.get("entityName");
					Object entityName_like=queryMap.get("entityName_like");
					Object entityName_isNull=queryMap.get("entityName_isNull");
					Object entityName_isNotNull=queryMap.get("entityName_isNotNull");
					Object entityName_in=queryMap.get("entityName_in");
				   															  					Object dataCondition=queryMap.get("dataCondition");
					Object dataCondition_like=queryMap.get("dataCondition_like");
					Object dataCondition_isNull=queryMap.get("dataCondition_isNull");
					Object dataCondition_isNotNull=queryMap.get("dataCondition_isNotNull");
					Object dataCondition_in=queryMap.get("dataCondition_in");
				   																Object createUserId=queryMap.get("createUserId");
					Object createUserId_gt=queryMap.get("createUserId_gt");
					Object createUserId_ge=queryMap.get("createUserId_ge");
					Object createUserId_lt=queryMap.get("createUserId_lt");
					Object createUserId_le=queryMap.get("createUserId_le");
					Object createUserId_in=queryMap.get("createUserId_in");
															  					Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
				  																Object updateUserId=queryMap.get("updateUserId");
					Object updateUserId_gt=queryMap.get("updateUserId_gt");
					Object updateUserId_ge=queryMap.get("updateUserId_ge");
					Object updateUserId_lt=queryMap.get("updateUserId_lt");
					Object updateUserId_le=queryMap.get("updateUserId_le");
					Object updateUserId_in=queryMap.get("updateUserId_in");
															  					Object updateTime_gt=queryMap.get("updateTime_gt");
					Object updateTime_ge=queryMap.get("updateTime_ge");
					Object updateTime_lt=queryMap.get("updateTime_lt");
					Object updateTime_le=queryMap.get("updateTime_le");
				  															  					Object entityShow=queryMap.get("entityShow");
					Object entityShow_like=queryMap.get("entityShow_like");
					Object entityShow_isNull=queryMap.get("entityShow_isNull");
					Object entityShow_isNotNull=queryMap.get("entityShow_isNotNull");
					Object entityShow_in=queryMap.get("entityShow_in");
				   							
			

																				
			
			QueryCondition qc = new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.in, id_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(entityName!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.eq, entityName));}
		            if(entityName_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.like, entityName_like));}
		            if(entityName_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNull, entityName_isNull));}
		            if(entityName_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNotNull, entityName_isNotNull));}
				    if(entityName_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.in, entityName_in));}
				  															  					if(dataCondition!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.eq, dataCondition));}
		            if(dataCondition_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.like, dataCondition_like));}
		            if(dataCondition_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNull, dataCondition_isNull));}
		            if(dataCondition_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNotNull, dataCondition_isNotNull));}
				    if(dataCondition_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.in, dataCondition_in));}
				  																if(createUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.eq, createUserId));}
					if(createUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.gt, createUserId_gt));}
					if(createUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.ge, createUserId_ge));}
					if(createUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.lt, createUserId_lt));}
					if(createUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.le, createUserId_le));}
					if(createUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.in, createUserId_in));}
															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  																if(updateUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.eq, updateUserId));}
					if(updateUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.gt, updateUserId_gt));}
					if(updateUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.ge, updateUserId_ge));}
					if(updateUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.lt, updateUserId_lt));}
					if(updateUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.le, updateUserId_le));}
					if(updateUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.in, updateUserId_in));}
															  					if(updateTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.gt, updateTime_gt));}
					if(updateTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.ge, updateTime_ge));}
					if(updateTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.lt, updateTime_lt));}
					if(updateTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.le, updateTime_le));}
				  															  					if(entityShow!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.eq, entityShow));}
		            if(entityShow_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.like, entityShow_like));}
		            if(entityShow_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNull, entityShow_isNull));}
		            if(entityShow_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNotNull, entityShow_isNotNull));}
				    if(entityShow_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.in, entityShow_in));}
				  										
						  						  			            pagelist = dbManager.queryByCondition(DataRuleEntity.class,qc,pageno,pagesize);	                      			
			return pagelist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数
		 		             	                 				     		 * @param createUserShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		             	                 				     		 * @param updateUserShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,int pageno,int pagesize,Boolean createUserShow,Boolean updateUserShow) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
															  					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
				   															  					Object entityName=queryMap.get("entityName");
					Object entityName_like=queryMap.get("entityName_like");
					Object entityName_isNull=queryMap.get("entityName_isNull");
					Object entityName_isNotNull=queryMap.get("entityName_isNotNull");
					Object entityName_in=queryMap.get("entityName_in");
				   															  					Object dataCondition=queryMap.get("dataCondition");
					Object dataCondition_like=queryMap.get("dataCondition_like");
					Object dataCondition_isNull=queryMap.get("dataCondition_isNull");
					Object dataCondition_isNotNull=queryMap.get("dataCondition_isNotNull");
					Object dataCondition_in=queryMap.get("dataCondition_in");
				   																Object createUserId=queryMap.get("createUserId");
					Object createUserId_gt=queryMap.get("createUserId_gt");
					Object createUserId_ge=queryMap.get("createUserId_ge");
					Object createUserId_lt=queryMap.get("createUserId_lt");
					Object createUserId_le=queryMap.get("createUserId_le");
					Object createUserId_in=queryMap.get("createUserId_in");
															  					Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
				  																Object updateUserId=queryMap.get("updateUserId");
					Object updateUserId_gt=queryMap.get("updateUserId_gt");
					Object updateUserId_ge=queryMap.get("updateUserId_ge");
					Object updateUserId_lt=queryMap.get("updateUserId_lt");
					Object updateUserId_le=queryMap.get("updateUserId_le");
					Object updateUserId_in=queryMap.get("updateUserId_in");
															  					Object updateTime_gt=queryMap.get("updateTime_gt");
					Object updateTime_ge=queryMap.get("updateTime_ge");
					Object updateTime_lt=queryMap.get("updateTime_lt");
					Object updateTime_le=queryMap.get("updateTime_le");
				  															  					Object entityShow=queryMap.get("entityShow");
					Object entityShow_like=queryMap.get("entityShow_like");
					Object entityShow_isNull=queryMap.get("entityShow_isNull");
					Object entityShow_isNotNull=queryMap.get("entityShow_isNotNull");
					Object entityShow_in=queryMap.get("entityShow_in");
				   							
			

																				
			
			QueryCondition qc = new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.in, id_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(entityName!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.eq, entityName));}
		            if(entityName_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.like, entityName_like));}
		            if(entityName_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNull, entityName_isNull));}
		            if(entityName_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNotNull, entityName_isNotNull));}
				    if(entityName_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.in, entityName_in));}
				  															  					if(dataCondition!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.eq, dataCondition));}
		            if(dataCondition_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.like, dataCondition_like));}
		            if(dataCondition_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNull, dataCondition_isNull));}
		            if(dataCondition_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNotNull, dataCondition_isNotNull));}
				    if(dataCondition_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.in, dataCondition_in));}
				  																if(createUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.eq, createUserId));}
					if(createUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.gt, createUserId_gt));}
					if(createUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.ge, createUserId_ge));}
					if(createUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.lt, createUserId_lt));}
					if(createUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.le, createUserId_le));}
					if(createUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.in, createUserId_in));}
															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  																if(updateUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.eq, updateUserId));}
					if(updateUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.gt, updateUserId_gt));}
					if(updateUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.ge, updateUserId_ge));}
					if(updateUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.lt, updateUserId_lt));}
					if(updateUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.le, updateUserId_le));}
					if(updateUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.in, updateUserId_in));}
															  					if(updateTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.gt, updateTime_gt));}
					if(updateTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.ge, updateTime_ge));}
					if(updateTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.lt, updateTime_lt));}
					if(updateTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.le, updateTime_le));}
				  															  					if(entityShow!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.eq, entityShow));}
		            if(entityShow_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.like, entityShow_like));}
		            if(entityShow_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNull, entityShow_isNull));}
		            if(entityShow_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNotNull, entityShow_isNotNull));}
				    if(entityShow_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.in, entityShow_in));}
				  										
						  						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}		
            pagelist = dbManager.queryByConditions(DataRuleEntity.class,qc,oc,pageno,pagesize);	           
                                    int a=0;
            					             	                 				     				     if(createUserShow!=null&&createUserShow.booleanValue()){
						a++;
					 }
				     				     				     		    		             	                 				     				     if(updateUserShow!=null&&updateUserShow.booleanValue()){
						a++;
					 }
				     				     				     		    		                if(a>0&&pagelist!=null&&pagelist.getResultList()!=null&&pagelist.getResultList().size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<pagelist.getResultList().size();i++){
					DataRuleEntity obj = (DataRuleEntity)pagelist.getResultList().get(i);
										 	                 				     				        //查询关联内容
						if(createUserShow!=null&&createUserShow.booleanValue()&&obj!=null&&obj.getCreateUserId()!=null&&obj.getCreateUserId()>0){
							UserEntity createUser = (UserEntity)dbManager.getById(obj.getCreateUserId(), UserEntity.class);
							obj.setCreateUser(createUser);        	  	  
						}
				     				     				     				    					 	                 				     				        //查询关联内容
						if(updateUserShow!=null&&updateUserShow.booleanValue()&&obj!=null&&obj.getUpdateUserId()!=null&&obj.getUpdateUserId()>0){
							UserEntity updateUser = (UserEntity)dbManager.getById(obj.getUpdateUserId(), UserEntity.class);
							obj.setUpdateUser(updateUser);        	  	  
						}
				     				     				     				    					result.add(obj);					
				}
				pagelist.setResultList(result);			
		}	
					return pagelist;
		}
		
		/**
		 * 删除记录
		 * 
		 * @param id 主键
		 * @param obj
		 */
		public boolean del(Integer id,Boolean delCreateUser,Boolean delUpdateUser) {
			boolean result = false;
			if (id !=null&&id>0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 					
										 	                 				     					    //删除关联信息
						if(delCreateUser!=null&&delCreateUser.booleanValue()){	
							DataRuleEntity dataRule = (DataRuleEntity)dbManager.getById(id, DataRuleEntity.class);
							if(dataRule!=null&&dataRule.getCreateUserId()!=null){
								dbManager.delNoTransaction(dataRule.getCreateUserId(), UserEntity.class);
							}						
						}
				     				     				     										 	                 				     					    //删除关联信息
						if(delUpdateUser!=null&&delUpdateUser.booleanValue()){	
							DataRuleEntity dataRule = (DataRuleEntity)dbManager.getById(id, DataRuleEntity.class);
							if(dataRule!=null&&dataRule.getUpdateUserId()!=null){
								dbManager.delNoTransaction(dataRule.getUpdateUserId(), UserEntity.class);
							}						
						}
				     				     				     										result = dbManager.delNoTransaction(id, DataRuleEntity.class);
					tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		/**
		 * 批量删除记录
		 * 
		 * @param ids
		 *            主键 英文逗号间隔
		 * @param obj
		 */
		public boolean del(String ids) {
			boolean result = false;
			if (ids != null && !"".equals(ids.trim())) {
				TransactionManager tx = DbUtils.getTranManager();
				try {
					tx.beginTransaction();
					QueryCondition qc = new QueryCondition(DataRuleEntity.ID,QueryCondition.in, ids);
					result = dbManager.delByConditionsNoTransaction(DataRuleEntity.class, qc);
					tx.commitAndClose();
				} catch (Exception e) {
					logger.error("数据库提交失败！");
					logger.error(e);
					result = false;
					try {
						tx.rollbackAndClose();
					} catch (Exception ex) {
						logger.error("数据库回滚失败！");
						logger.error(ex);
					}
				}
			}
			return result;
		}

		/**
		 * 批量条件删除记录
		 * @param queryMap 查询条件集合
		 */
		public boolean delList(Map<String,Object> queryMap,Boolean delCreateUser,Boolean delUpdateUser) {
			boolean result = false;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
															  					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
				  															  					Object entityName=queryMap.get("entityName");
					Object entityName_like=queryMap.get("entityName_like");
					Object entityName_isNull=queryMap.get("entityName_isNull");
					Object entityName_isNotNull=queryMap.get("entityName_isNotNull");
					Object entityName_in=queryMap.get("entityName_in");
				  															  					Object dataCondition=queryMap.get("dataCondition");
					Object dataCondition_like=queryMap.get("dataCondition_like");
					Object dataCondition_isNull=queryMap.get("dataCondition_isNull");
					Object dataCondition_isNotNull=queryMap.get("dataCondition_isNotNull");
					Object dataCondition_in=queryMap.get("dataCondition_in");
				  																Object createUserId=queryMap.get("createUserId");
					Object createUserId_gt=queryMap.get("createUserId_gt");
					Object createUserId_ge=queryMap.get("createUserId_ge");
					Object createUserId_lt=queryMap.get("createUserId_lt");
					Object createUserId_le=queryMap.get("createUserId_le");
					Object createUserId_in=queryMap.get("createUserId_in");
															  					Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
				  																Object updateUserId=queryMap.get("updateUserId");
					Object updateUserId_gt=queryMap.get("updateUserId_gt");
					Object updateUserId_ge=queryMap.get("updateUserId_ge");
					Object updateUserId_lt=queryMap.get("updateUserId_lt");
					Object updateUserId_le=queryMap.get("updateUserId_le");
					Object updateUserId_in=queryMap.get("updateUserId_in");
															  					Object updateTime_gt=queryMap.get("updateTime_gt");
					Object updateTime_ge=queryMap.get("updateTime_ge");
					Object updateTime_lt=queryMap.get("updateTime_lt");
					Object updateTime_le=queryMap.get("updateTime_le");
				  															  					Object entityShow=queryMap.get("entityShow");
					Object entityShow_like=queryMap.get("entityShow_like");
					Object entityShow_isNull=queryMap.get("entityShow_isNull");
					Object entityShow_isNotNull=queryMap.get("entityShow_isNotNull");
					Object entityShow_in=queryMap.get("entityShow_in");
				  																											
			QueryCondition qc = new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ID, QueryCondition.in, id_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(entityName!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.eq, entityName));}
		            if(entityName_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.like, entityName_like));}
		            if(entityName_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNull, entityName_isNull));}
		            if(entityName_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.isNotNull, entityName_isNotNull));}
				    if(entityName_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_NAME, QueryCondition.in, entityName_in));}
				  															  					if(dataCondition!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.eq, dataCondition));}
		            if(dataCondition_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.like, dataCondition_like));}
		            if(dataCondition_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNull, dataCondition_isNull));}
		            if(dataCondition_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.isNotNull, dataCondition_isNotNull));}
				    if(dataCondition_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.DATA_CONDITION, QueryCondition.in, dataCondition_in));}
				  																if(createUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.eq, createUserId));}
					if(createUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.gt, createUserId_gt));}
					if(createUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.ge, createUserId_ge));}
					if(createUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.lt, createUserId_lt));}
					if(createUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.le, createUserId_le));}
					if(createUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_USER_ID, QueryCondition.in, createUserId_in));}
															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  																if(updateUserId!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.eq, updateUserId));}
					if(updateUserId_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.gt, updateUserId_gt));}
					if(updateUserId_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.ge, updateUserId_ge));}
					if(updateUserId_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.lt, updateUserId_lt));}
					if(updateUserId_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.le, updateUserId_le));}
					if(updateUserId_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_USER_ID, QueryCondition.in, updateUserId_in));}
															  					if(updateTime_gt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.gt, updateTime_gt));}
					if(updateTime_ge!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.ge, updateTime_ge));}
					if(updateTime_lt!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.lt, updateTime_lt));}
					if(updateTime_le!=null){qc.andCondition(new QueryCondition(DataRuleEntity.UPDATE_TIME, QueryCondition.le, updateTime_le));}
				  															  					if(entityShow!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.eq, entityShow));}
		            if(entityShow_like!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.like, entityShow_like));}
		            if(entityShow_isNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNull, entityShow_isNull));}
		            if(entityShow_isNotNull!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.isNotNull, entityShow_isNotNull));}
				    if(entityShow_in!=null){qc.andCondition(new QueryCondition(DataRuleEntity.ENTITY_SHOW, QueryCondition.in, entityShow_in));}
				  										
				            				            						if (qc.getQueryNextCondition()!=null) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 						
										 	                 				     					     //删除关联信息
						if(delCreateUser!=null&&delCreateUser.booleanValue()){
							List<Object> list=dbManager.queryByCondition(DataRuleEntity.class,qc);
							String strIds="";
							if(list!=null&&list.size()>0){
								for(Object obj:list){
									DataRuleEntity entity=(DataRuleEntity)obj;
									strIds += entity.getCreateUserId()+",";
								}
								strIds = strIds.substring(0, strIds.length()-1);
							}
							if(strIds!=null&&!"".equals(strIds)){
								QueryCondition qc1 = new QueryCondition(UserEntity.ID, QueryCondition.in, strIds);
								dbManager.delByConditionsNoTransaction(UserEntity.class, qc1);
							}
							
						}
				     				     				     										 	                 				     					     //删除关联信息
						if(delUpdateUser!=null&&delUpdateUser.booleanValue()){
							List<Object> list=dbManager.queryByCondition(DataRuleEntity.class,qc);
							String strIds="";
							if(list!=null&&list.size()>0){
								for(Object obj:list){
									DataRuleEntity entity=(DataRuleEntity)obj;
									strIds += entity.getUpdateUserId()+",";
								}
								strIds = strIds.substring(0, strIds.length()-1);
							}
							if(strIds!=null&&!"".equals(strIds)){
								QueryCondition qc1 = new QueryCondition(UserEntity.ID, QueryCondition.in, strIds);
								dbManager.delByConditionsNoTransaction(UserEntity.class, qc1);
							}
							
						}
				     				     				     										result = dbManager.delByConditionsNoTransaction(DataRuleEntity.class,qc);				
					tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		
}
