package fsk.parse.devAlarm;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;

import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.OrderVO;
import com.framework.system.util.JsonUtil;

import fsk.entity.dev.DevEntity;
import fsk.entity.devAlarm.DevAlarmEntity;
import fsk.entity.older.OlderEntity;

/**
 * @Title: Parse
 * @Description: 设备报警信息表解析器
 * @author feng.gu
 * @date 2016-09-22 11:13:01
 * @version V1.0
 * 
 */
public class DevAlarmParse {
	private static Logger logger = Logger.getLogger(DevAlarmParse.class);
	private static DevAlarmParse devAlarmParse;
	private DBManager dbManager = DBManager.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static DevAlarmParse getInstance() {
		if (devAlarmParse == null) {
			devAlarmParse = new DevAlarmParse();
		}
		return devAlarmParse;
	}

	public Map<String, Object> parse(int type, String command, String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command, reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command, reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command, String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			DevAlarmEntity devAlarmReturn = null;
			List<DevAlarmEntity> devAlarmListReturn = null;
			Integer idReturn = null;
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;

			Boolean olderShowReturn = false;
			Boolean delOlderReturn = false;
			Boolean devShowReturn = false;
			Boolean delDevReturn = false;

			// json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject) reqParams.get("content");
			if ("ADD_DEV_ALARM_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				devAlarmReturn = new DevAlarmEntity();
				if (true) {
					if (contentreq != null) {
						Integer id = (Integer) contentreq.get("id");
						if (id != null) {
							devAlarmReturn.setId(id);
							//分量保存
							devAlarmReturn = (DevAlarmEntity) dbManager
									.getById(id, DevAlarmEntity.class);
						}
						Integer devId = (Integer) contentreq.get("devId");
						if (devId != null) {
							devAlarmReturn.setDevId(devId);
						}
						Integer devType = (Integer) contentreq.get("devType");
						if (devType != null) {
							devAlarmReturn.setDevType(devType);
						}
						String olderName = (String) contentreq.get("olderName");
						if (olderName != null) {
							devAlarmReturn.setOlderName(olderName);
						}
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId != null) {
							devAlarmReturn.setOlderId(olderId);
						}
						String alarmCode = (String) contentreq.get("alarmCode");
						if (alarmCode != null) {
							devAlarmReturn.setAlarmCode(alarmCode);
						}
						String alarmContent = (String) contentreq
								.get("alarmContent");
						if (alarmContent != null) {
							devAlarmReturn.setAlarmContent(alarmContent);
						}
						Integer alarmStatus = (Integer) contentreq
								.get("alarmStatus");
						if (alarmStatus != null) {
							devAlarmReturn.setAlarmStatus(alarmStatus);
						}
						String alarmTime = (String) contentreq.get("alarmTime");
						if (alarmTime != null) {
							devAlarmReturn.setAlarmTime(alarmTime);
						}
						Integer alarmType = (Integer) contentreq
								.get("alarmType");
						if (alarmType != null) {
							devAlarmReturn.setAlarmType(alarmType);
						}
						Double posLat = JsonUtil.getJSONDouble(contentreq,
								"posLat");
						if (posLat != null) {
							devAlarmReturn
									.setPosLat(BigDecimal.valueOf(posLat));
						}
						Double posLong = JsonUtil.getJSONDouble(contentreq,
								"posLong");
						if (posLong != null) {
							devAlarmReturn.setPosLong(BigDecimal
									.valueOf(posLong));
						}
						String address = (String) contentreq.get("address");
						if (address != null) {
							devAlarmReturn.setAddress(address);
						}
						Integer deviation = (Integer) contentreq
								.get("deviation");
						if (deviation != null) {
							devAlarmReturn.setDeviation(deviation);
						}
					}
				}
				if (true) {
					Object older = contentreq.get("older");
					if (older != null) {
						JSONObject obj = (JSONObject) older;
						if (obj != null) {
							OlderEntity entity = new OlderEntity();
							Integer id = (Integer) obj.get("id");
							if (id != null) {
								entity.setId(id);
							}
							Integer nurseEmployeeId = (Integer) obj
									.get("nurseEmployeeId");
							if (nurseEmployeeId != null) {
								entity.setNurseEmployeeId(nurseEmployeeId);
							}
							Integer userId = (Integer) obj.get("userId");
							if (userId != null) {
								entity.setUserId(userId);
							}
							String memberNum = (String) obj.get("memberNum");
							if (memberNum != null) {
								entity.setMemberNum(memberNum);
							}
							String memberCard = (String) obj.get("memberCard");
							if (memberCard != null) {
								entity.setMemberCard(memberCard);
							}
							String memberSource = (String) obj
									.get("memberSource");
							if (memberSource != null) {
								entity.setMemberSource(memberSource);
							}
							String attentionPoint = (String) obj
									.get("attentionPoint");
							if (attentionPoint != null) {
								entity.setAttentionPoint(attentionPoint);
							}
							Integer nurseLevel = (Integer) obj
									.get("nurseLevel");
							if (nurseLevel != null) {
								entity.setNurseLevel(nurseLevel);
							}
							Integer memberStatus = (Integer) obj
									.get("memberStatus");
							if (memberStatus != null) {
								entity.setMemberStatus(memberStatus);
							}
							String lastAssessmentDate = (String) obj
									.get("lastAssessmentDate");
							if (lastAssessmentDate != null) {
								entity.setLastAssessmentDate(lastAssessmentDate);
							}
							Integer assessmentCycle = (Integer) obj
									.get("assessmentCycle");
							if (assessmentCycle != null) {
								entity.setAssessmentCycle(assessmentCycle);
							}
							Double chargeMonth = JsonUtil.getJSONDouble(obj,
									"chargeMonth");
							if (chargeMonth != null) {
								entity.setChargeMonth(BigDecimal
										.valueOf(chargeMonth));
							}
							Integer requiredServiceTimes = (Integer) obj
									.get("requiredServiceTimes");
							if (requiredServiceTimes != null) {
								entity.setRequiredServiceTimes(requiredServiceTimes);
							}
							Integer alreadyServiceTimes = (Integer) obj
									.get("alreadyServiceTimes");
							if (alreadyServiceTimes != null) {
								entity.setAlreadyServiceTimes(alreadyServiceTimes);
							}
							String mainPhoto = (String) obj.get("mainPhoto");
							if (mainPhoto != null) {
								entity.setMainPhoto(mainPhoto);
							}
							String name = (String) obj.get("name");
							if (name != null) {
								entity.setName(name);
							}
							String idnumber = (String) obj.get("idnumber");
							if (idnumber != null) {
								entity.setIdnumber(idnumber);
							}
							String socialSecurityNumber = (String) obj
									.get("socialSecurityNumber");
							if (socialSecurityNumber != null) {
								entity.setSocialSecurityNumber(socialSecurityNumber);
							}
							String gender = (String) obj.get("gender");
							if (gender != null) {
								entity.setGender(gender);
							}
							String birthdate = (String) obj.get("birthdate");
							if (birthdate != null) {
								entity.setBirthdate(birthdate);
							}
							String nation = (String) obj.get("nation");
							if (nation != null) {
								entity.setNation(nation);
							}
							String education = (String) obj.get("education");
							if (education != null) {
								entity.setEducation(education);
							}
							String maritalStatus = (String) obj
									.get("maritalStatus");
							if (maritalStatus != null) {
								entity.setMaritalStatus(maritalStatus);
							}
							String occupation = (String) obj.get("occupation");
							if (occupation != null) {
								entity.setOccupation(occupation);
							}
							String homeTel = (String) obj.get("homeTel");
							if (homeTel != null) {
								entity.setHomeTel(homeTel);
							}
							String mobileTel = (String) obj.get("mobileTel");
							if (mobileTel != null) {
								entity.setMobileTel(mobileTel);
							}
							String bloodType = (String) obj.get("bloodType");
							if (bloodType != null) {
								entity.setBloodType(bloodType);
							}
							String symptom = (String) obj.get("symptom");
							if (symptom != null) {
								entity.setSymptom(symptom);
							}
							String symptomOther = (String) obj
									.get("symptomOther");
							if (symptomOther != null) {
								entity.setSymptomOther(symptomOther);
							}
							String drugAllergy = (String) obj
									.get("drugAllergy");
							if (drugAllergy != null) {
								entity.setDrugAllergy(drugAllergy);
							}
							String drugAllergyOther = (String) obj
									.get("drugAllergyOther");
							if (drugAllergyOther != null) {
								entity.setDrugAllergyOther(drugAllergyOther);
							}
							String cognitive = (String) obj.get("cognitive");
							if (cognitive != null) {
								entity.setCognitive(cognitive);
							}
							String emotion = (String) obj.get("emotion");
							if (emotion != null) {
								entity.setEmotion(emotion);
							}
							String sportsFre = (String) obj.get("sportsFre");
							if (sportsFre != null) {
								entity.setSportsFre(sportsFre);
							}
							Integer sportsTime = (Integer) obj
									.get("sportsTime");
							if (sportsTime != null) {
								entity.setSportsTime(sportsTime);
							}
							Integer holdSportsTime = (Integer) obj
									.get("holdSportsTime");
							if (holdSportsTime != null) {
								entity.setHoldSportsTime(holdSportsTime);
							}
							String sportsType = (String) obj.get("sportsType");
							if (sportsType != null) {
								entity.setSportsType(sportsType);
							}
							String diet = (String) obj.get("diet");
							if (diet != null) {
								entity.setDiet(diet);
							}
							String smoking = (String) obj.get("smoking");
							if (smoking != null) {
								entity.setSmoking(smoking);
							}
							Integer smokingDay = (Integer) obj
									.get("smokingDay");
							if (smokingDay != null) {
								entity.setSmokingDay(smokingDay);
							}
							String quitAlcohol = (String) obj
									.get("quitAlcohol");
							if (quitAlcohol != null) {
								entity.setQuitAlcohol(quitAlcohol);
							}
							Integer quitAlcoholAge = (Integer) obj
									.get("quitAlcoholAge");
							if (quitAlcoholAge != null) {
								entity.setQuitAlcoholAge(quitAlcoholAge);
							}
							Integer startAlcoholAge = (Integer) obj
									.get("startAlcoholAge");
							if (startAlcoholAge != null) {
								entity.setStartAlcoholAge(startAlcoholAge);
							}
							Integer drunkYear = (Integer) obj.get("drunkYear");
							if (drunkYear != null) {
								entity.setDrunkYear(drunkYear);
							}
							String alcoholType = (String) obj
									.get("alcoholType");
							if (alcoholType != null) {
								entity.setAlcoholType(alcoholType);
							}
							String alcoholTypeOther = (String) obj
									.get("alcoholTypeOther");
							if (alcoholTypeOther != null) {
								entity.setAlcoholTypeOther(alcoholTypeOther);
							}
							String brainBloodVessel = (String) obj
									.get("brainBloodVessel");
							if (brainBloodVessel != null) {
								entity.setBrainBloodVessel(brainBloodVessel);
							}
							String brainBloodVesselOther = (String) obj
									.get("brainBloodVesselOther");
							if (brainBloodVesselOther != null) {
								entity.setBrainBloodVesselOther(brainBloodVesselOther);
							}
							String kindney = (String) obj.get("kindney");
							if (kindney != null) {
								entity.setKindney(kindney);
							}
							String kindneyOther = (String) obj
									.get("kindneyOther");
							if (kindneyOther != null) {
								entity.setKindneyOther(kindneyOther);
							}
							String heart = (String) obj.get("heart");
							if (heart != null) {
								entity.setHeart(heart);
							}
							String heartOther = (String) obj.get("heartOther");
							if (heartOther != null) {
								entity.setHeartOther(heartOther);
							}
							String bloodVessel = (String) obj
									.get("bloodVessel");
							if (bloodVessel != null) {
								entity.setBloodVessel(bloodVessel);
							}
							String bloodVesselOther = (String) obj
									.get("bloodVesselOther");
							if (bloodVesselOther != null) {
								entity.setBloodVesselOther(bloodVesselOther);
							}
							String eye = (String) obj.get("eye");
							if (eye != null) {
								entity.setEye(eye);
							}
							String eyeOther = (String) obj.get("eyeOther");
							if (eyeOther != null) {
								entity.setEyeOther(eyeOther);
							}
							String otherDisease = (String) obj
									.get("otherDisease");
							if (otherDisease != null) {
								entity.setOtherDisease(otherDisease);
							}
							Integer serviceProvinceId = (Integer) obj
									.get("serviceProvinceId");
							if (serviceProvinceId != null) {
								entity.setServiceProvinceId(serviceProvinceId);
							}
							Integer serviceCityId = (Integer) obj
									.get("serviceCityId");
							if (serviceCityId != null) {
								entity.setServiceCityId(serviceCityId);
							}
							Integer serviceAreaId = (Integer) obj
									.get("serviceAreaId");
							if (serviceAreaId != null) {
								entity.setServiceAreaId(serviceAreaId);
							}
							Integer serviceStreetId = (Integer) obj
									.get("serviceStreetId");
							if (serviceStreetId != null) {
								entity.setServiceStreetId(serviceStreetId);
							}
							String familyComposition = (String) obj
									.get("familyComposition");
							if (familyComposition != null) {
								entity.setFamilyComposition(familyComposition);
							}
							String live = (String) obj.get("live");
							if (live != null) {
								entity.setLive(live);
							}
							String liveOther = (String) obj.get("liveOther");
							if (liveOther != null) {
								entity.setLiveOther(liveOther);
							}
							String economic = (String) obj.get("economic");
							if (economic != null) {
								entity.setEconomic(economic);
							}
							String economicOther = (String) obj
									.get("economicOther");
							if (economicOther != null) {
								entity.setEconomicOther(economicOther);
							}
							String house = (String) obj.get("house");
							if (house != null) {
								entity.setHouse(house);
							}
							String houseOther = (String) obj.get("houseOther");
							if (houseOther != null) {
								entity.setHouseOther(houseOther);
							}
							String interest = (String) obj.get("interest");
							if (interest != null) {
								entity.setInterest(interest);
							}
							String lifeExperience = (String) obj
									.get("lifeExperience");
							if (lifeExperience != null) {
								entity.setLifeExperience(lifeExperience);
							}
							String specialExperience = (String) obj
									.get("specialExperience");
							if (specialExperience != null) {
								entity.setSpecialExperience(specialExperience);
							}
							String specialExperienceOther = (String) obj
									.get("specialExperienceOther");
							if (specialExperienceOther != null) {
								entity.setSpecialExperienceOther(specialExperienceOther);
							}
							String residence = (String) obj.get("residence");
							if (residence != null) {
								entity.setResidence(residence);
							}
							String elevator = (String) obj.get("elevator");
							if (elevator != null) {
								entity.setElevator(elevator);
							}
							String step = (String) obj.get("step");
							if (step != null) {
								entity.setStep(step);
							}
							String stepOther = (String) obj.get("stepOther");
							if (stepOther != null) {
								entity.setStepOther(stepOther);
							}
							String restroom = (String) obj.get("restroom");
							if (restroom != null) {
								entity.setRestroom(restroom);
							}
							String restroomOther = (String) obj
									.get("restroomOther");
							if (restroomOther != null) {
								entity.setRestroomOther(restroomOther);
							}
							String bathroomTub = (String) obj
									.get("bathroomTub");
							if (bathroomTub != null) {
								entity.setBathroomTub(bathroomTub);
							}
							String bathroomShower = (String) obj
									.get("bathroomShower");
							if (bathroomShower != null) {
								entity.setBathroomShower(bathroomShower);
							}
							String bathroomStrip = (String) obj
									.get("bathroomStrip");
							if (bathroomStrip != null) {
								entity.setBathroomStrip(bathroomStrip);
							}
							String kitchenOther = (String) obj
									.get("kitchenOther");
							if (kitchenOther != null) {
								entity.setKitchenOther(kitchenOther);
							}
							String kitchen = (String) obj.get("kitchen");
							if (kitchen != null) {
								entity.setKitchen(kitchen);
							}
							String clean = (String) obj.get("clean");
							if (clean != null) {
								entity.setClean(clean);
							}
							String shopping = (String) obj.get("shopping");
							if (shopping != null) {
								entity.setShopping(shopping);
							}
							String shoppingTraffic = (String) obj
									.get("shoppingTraffic");
							if (shoppingTraffic != null) {
								entity.setShoppingTraffic(shoppingTraffic);
							}
							String shoppingAccessibility = (String) obj
									.get("shoppingAccessibility");
							if (shoppingAccessibility != null) {
								entity.setShoppingAccessibility(shoppingAccessibility);
							}
							String shoppingOther = (String) obj
									.get("shoppingOther");
							if (shoppingOther != null) {
								entity.setShoppingOther(shoppingOther);
							}
							String livingEnvironmentDefect = (String) obj
									.get("livingEnvironmentDefect");
							if (livingEnvironmentDefect != null) {
								entity.setLivingEnvironmentDefect(livingEnvironmentDefect);
							}
							String dailyWater = (String) obj.get("dailyWater");
							if (dailyWater != null) {
								entity.setDailyWater(dailyWater);
							}
							String dailyDrinking = (String) obj
									.get("dailyDrinking");
							if (dailyDrinking != null) {
								entity.setDailyDrinking(dailyDrinking);
							}
							String drinking = (String) obj.get("drinking");
							if (drinking != null) {
								entity.setDrinking(drinking);
							}
							String gadget = (String) obj.get("gadget");
							if (gadget != null) {
								entity.setGadget(gadget);
							}
							String mainFood = (String) obj.get("mainFood");
							if (mainFood != null) {
								entity.setMainFood(mainFood);
							}
							String fruitsVegetables = (String) obj
									.get("fruitsVegetables");
							if (fruitsVegetables != null) {
								entity.setFruitsVegetables(fruitsVegetables);
							}
							String salt = (String) obj.get("salt");
							if (salt != null) {
								entity.setSalt(salt);
							}
							String oil = (String) obj.get("oil");
							if (oil != null) {
								entity.setOil(oil);
							}
							String fish = (String) obj.get("fish");
							if (fish != null) {
								entity.setFish(fish);
							}
							String meat = (String) obj.get("meat");
							if (meat != null) {
								entity.setMeat(meat);
							}
							String beanProducts = (String) obj
									.get("beanProducts");
							if (beanProducts != null) {
								entity.setBeanProducts(beanProducts);
							}
							String milk = (String) obj.get("milk");
							if (milk != null) {
								entity.setMilk(milk);
							}
							String foodForm = (String) obj.get("foodForm");
							if (foodForm != null) {
								entity.setFoodForm(foodForm);
							}
							String dysphagia = (String) obj.get("dysphagia");
							if (dysphagia != null) {
								entity.setDysphagia(dysphagia);
							}
							String morningSit = (String) obj.get("morningSit");
							if (morningSit != null) {
								entity.setMorningSit(morningSit);
							}
							String noonSit = (String) obj.get("noonSit");
							if (noonSit != null) {
								entity.setNoonSit(noonSit);
							}
							String nightSit = (String) obj.get("nightSit");
							if (nightSit != null) {
								entity.setNightSit(nightSit);
							}
							String lateAfternoonTea = (String) obj
									.get("lateAfternoonTea");
							if (lateAfternoonTea != null) {
								entity.setLateAfternoonTea(lateAfternoonTea);
							}
							String urine = (String) obj.get("urine");
							if (urine != null) {
								entity.setUrine(urine);
							}
							String urineNum = (String) obj.get("urineNum");
							if (urineNum != null) {
								entity.setUrineNum(urineNum);
							}
							String urineMethod = (String) obj
									.get("urineMethod");
							if (urineMethod != null) {
								entity.setUrineMethod(urineMethod);
							}
							String urineType = (String) obj.get("urineType");
							if (urineType != null) {
								entity.setUrineType(urineType);
							}
							String urineTypeOther = (String) obj
									.get("urineTypeOther");
							if (urineTypeOther != null) {
								entity.setUrineTypeOther(urineTypeOther);
							}
							String shit = (String) obj.get("shit");
							if (shit != null) {
								entity.setShit(shit);
							}
							String shitDay = (String) obj.get("shitDay");
							if (shitDay != null) {
								entity.setShitDay(shitDay);
							}
							String shitMethod = (String) obj.get("shitMethod");
							if (shitMethod != null) {
								entity.setShitMethod(shitMethod);
							}
							String shitType = (String) obj.get("shitType");
							if (shitType != null) {
								entity.setShitType(shitType);
							}
							String shitTypeOther = (String) obj
									.get("shitTypeOther");
							if (shitTypeOther != null) {
								entity.setShitTypeOther(shitTypeOther);
							}
							String sportsForm = (String) obj.get("sportsForm");
							if (sportsForm != null) {
								entity.setSportsForm(sportsForm);
							}
							String sportsT = (String) obj.get("sportsT");
							if (sportsT != null) {
								entity.setSportsT(sportsT);
							}
							String sportsF = (String) obj.get("sportsF");
							if (sportsF != null) {
								entity.setSportsF(sportsF);
							}
							String sportsNo = (String) obj.get("sportsNo");
							if (sportsNo != null) {
								entity.setSportsNo(sportsNo);
							}
							String bathNum = (String) obj.get("bathNum");
							if (bathNum != null) {
								entity.setBathNum(bathNum);
							}
							String bathMethod = (String) obj.get("bathMethod");
							if (bathMethod != null) {
								entity.setBathMethod(bathMethod);
							}
							String goOut = (String) obj.get("goOut");
							if (goOut != null) {
								entity.setGoOut(goOut);
							}
							String goOutOther = (String) obj.get("goOutOther");
							if (goOutOther != null) {
								entity.setGoOutOther(goOutOther);
							}
							String brush = (String) obj.get("brush");
							if (brush != null) {
								entity.setBrush(brush);
							}
							String communication = (String) obj
									.get("communication");
							if (communication != null) {
								entity.setCommunication(communication);
							}
							String sleepHour = (String) obj.get("sleepHour");
							if (sleepHour != null) {
								entity.setSleepHour(sleepHour);
							}
							String sleepQuality = (String) obj
									.get("sleepQuality");
							if (sleepQuality != null) {
								entity.setSleepQuality(sleepQuality);
							}
							String morningSpirit = (String) obj
									.get("morningSpirit");
							if (morningSpirit != null) {
								entity.setMorningSpirit(morningSpirit);
							}
							devAlarmReturn.setOlder(entity);
						}
					}
				}
				if (true) {
					Object dev = contentreq.get("dev");
					if (dev != null) {
						JSONObject obj = (JSONObject) dev;
						if (obj != null) {
							DevEntity entity = new DevEntity();
							Integer id = (Integer) obj.get("id");
							if (id != null) {
								entity.setId(id);
							}
							String code = (String) obj.get("code");
							if (code != null) {
								entity.setCode(code);
							}
							String name = (String) obj.get("name");
							if (name != null) {
								entity.setName(name);
							}
							Integer olderId = (Integer) obj.get("olderId");
							if (olderId != null) {
								entity.setOlderId(olderId);
							}
							Integer type = (Integer) obj.get("type");
							if (type != null) {
								entity.setType(type);
							}
							String status = (String) obj.get("status");
							if (status != null) {
								entity.setStatus(status);
							}
							String address = (String) obj.get("address");
							if (address != null) {
								entity.setAddress(address);
							}
							String addTime = (String) obj.get("addTime");
							if (addTime != null) {
								entity.setAddTime(addTime);
							}
							Double flat = JsonUtil.getJSONDouble(obj, "flat");
							if (flat != null) {
								entity.setFlat(BigDecimal.valueOf(flat));
							}
							Double flong = JsonUtil.getJSONDouble(obj, "flong");
							if (flong != null) {
								entity.setFlong(BigDecimal.valueOf(flong));
							}
							Integer fradius = (Integer) obj.get("fradius");
							if (fradius != null) {
								entity.setFradius(fradius);
							}
							Double posLat = JsonUtil.getJSONDouble(obj,
									"posLat");
							if (posLat != null) {
								entity.setPosLat(BigDecimal.valueOf(posLat));
							}
							Double posLong = JsonUtil.getJSONDouble(obj,
									"posLong");
							if (posLong != null) {
								entity.setPosLong(BigDecimal.valueOf(posLong));
							}
							String photo = (String) obj.get("photo");
							if (photo != null) {
								entity.setPhoto(photo);
							}
							String devPhone = (String) obj.get("devPhone");
							if (devPhone != null) {
								entity.setDevPhone(devPhone);
							}
							String doorCode = (String) obj.get("doorCode");
							if (doorCode != null) {
								entity.setDoorCode(doorCode);
							}
							String doorAlarmDelay = (String) obj
									.get("doorAlarmDelay");
							if (doorAlarmDelay != null) {
								entity.setDoorAlarmDelay(doorAlarmDelay);
							}
							String doorAlarmStart = (String) obj
									.get("doorAlarmStart");
							if (doorAlarmStart != null) {
								entity.setDoorAlarmStart(doorAlarmStart);
							}
							String doorAlarmEnd = (String) obj
									.get("doorAlarmEnd");
							if (doorAlarmEnd != null) {
								entity.setDoorAlarmEnd(doorAlarmEnd);
							}
							String irCode = (String) obj.get("irCode");
							if (irCode != null) {
								entity.setIrCode(irCode);
							}
							String irAlarmDelay = (String) obj
									.get("irAlarmDelay");
							if (irAlarmDelay != null) {
								entity.setIrAlarmDelay(irAlarmDelay);
							}
							String irAlarmStart = (String) obj
									.get("irAlarmStart");
							if (irAlarmStart != null) {
								entity.setIrAlarmStart(irAlarmStart);
							}
							String irAlarmEnd = (String) obj.get("irAlarmEnd");
							if (irAlarmEnd != null) {
								entity.setIrAlarmEnd(irAlarmEnd);
							}
							Integer locationStatus = (Integer) obj
									.get("locationStatus");
							if (locationStatus != null) {
								entity.setLocationStatus(locationStatus);
							}
							Integer deviation = (Integer) obj.get("deviation");
							if (deviation != null) {
								entity.setDeviation(deviation);
							}
							devAlarmReturn.setDev(entity);
						}
					}
				}
			} else if ("QUERY_DEV_ALARM_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
						String olderShow = (String) contentreq.get("olderShow");
						if ("true".equals(olderShow)) {
							olderShowReturn = true;
						}
						String devShow = (String) contentreq.get("devShow");
						if ("true".equals(devShow)) {
							devShowReturn = true;
						}
					}
				}
			} else if ("QUERY_DEV_ALARM_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer devId_gt = (Integer) contentreq.get("devId_gt");
						Integer devId_ge = (Integer) contentreq.get("devId_ge");
						Integer devId_lt = (Integer) contentreq.get("devId_lt");
						Integer devId_le = (Integer) contentreq.get("devId_le");
						String devId_in = (String) contentreq.get("devId_in");
						Integer devId = (Integer) contentreq.get("devId");
						if (devId_gt != null) {
							queryMapReturn.put("devId_gt", devId_gt);
						}
						if (devId_ge != null) {
							queryMapReturn.put("devId_ge", devId_ge);
						}
						if (devId_lt != null) {
							queryMapReturn.put("devId_lt", devId_lt);
						}
						if (devId_le != null) {
							queryMapReturn.put("devId_le", devId_le);
						}
						if (devId_in != null) {
							queryMapReturn.put("devId_in", devId_in);
						}
						if (devId != null) {
							queryMapReturn.put("devId", devId);
						}
						Integer devType_gt = (Integer) contentreq
								.get("devType_gt");
						Integer devType_ge = (Integer) contentreq
								.get("devType_ge");
						Integer devType_lt = (Integer) contentreq
								.get("devType_lt");
						Integer devType_le = (Integer) contentreq
								.get("devType_le");
						String devType_in = (String) contentreq
								.get("devType_in");
						Integer devType = (Integer) contentreq.get("devType");
						if (devType_gt != null) {
							queryMapReturn.put("devType_gt", devType_gt);
						}
						if (devType_ge != null) {
							queryMapReturn.put("devType_ge", devType_ge);
						}
						if (devType_lt != null) {
							queryMapReturn.put("devType_lt", devType_lt);
						}
						if (devType_le != null) {
							queryMapReturn.put("devType_le", devType_le);
						}
						if (devType_in != null) {
							queryMapReturn.put("devType_in", devType_in);
						}
						if (devType != null) {
							queryMapReturn.put("devType", devType);
						}
						String olderName_like = (String) contentreq
								.get("olderName_like");
						String olderName_isNull = (String) contentreq
								.get("olderName_isNull");
						String olderName_isNotNull = (String) contentreq
								.get("olderName_isNotNull");
						String olderName_in = (String) contentreq
								.get("olderName_in");
						String olderName = (String) contentreq.get("olderName");
						if (olderName_like != null) {
							queryMapReturn
									.put("olderName_like", olderName_like);
						}
						if (olderName_isNull != null) {
							queryMapReturn.put("olderName_isNull",
									olderName_isNull);
						}
						if (olderName_isNotNull != null) {
							queryMapReturn.put("olderName_isNotNull",
									olderName_isNotNull);
						}
						if (olderName_in != null) {
							queryMapReturn.put("olderName_in", olderName_in);
						}
						if (olderName != null) {
							queryMapReturn.put("olderName", olderName);
						}
						Integer olderId_gt = (Integer) contentreq
								.get("olderId_gt");
						Integer olderId_ge = (Integer) contentreq
								.get("olderId_ge");
						Integer olderId_lt = (Integer) contentreq
								.get("olderId_lt");
						Integer olderId_le = (Integer) contentreq
								.get("olderId_le");
						String olderId_in = (String) contentreq
								.get("olderId_in");
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId_gt != null) {
							queryMapReturn.put("olderId_gt", olderId_gt);
						}
						if (olderId_ge != null) {
							queryMapReturn.put("olderId_ge", olderId_ge);
						}
						if (olderId_lt != null) {
							queryMapReturn.put("olderId_lt", olderId_lt);
						}
						if (olderId_le != null) {
							queryMapReturn.put("olderId_le", olderId_le);
						}
						if (olderId_in != null) {
							queryMapReturn.put("olderId_in", olderId_in);
						}
						if (olderId != null) {
							queryMapReturn.put("olderId", olderId);
						}
						String alarmCode_like = (String) contentreq
								.get("alarmCode_like");
						String alarmCode_isNull = (String) contentreq
								.get("alarmCode_isNull");
						String alarmCode_isNotNull = (String) contentreq
								.get("alarmCode_isNotNull");
						String alarmCode_in = (String) contentreq
								.get("alarmCode_in");
						String alarmCode = (String) contentreq.get("alarmCode");
						if (alarmCode_like != null) {
							queryMapReturn
									.put("alarmCode_like", alarmCode_like);
						}
						if (alarmCode_isNull != null) {
							queryMapReturn.put("alarmCode_isNull",
									alarmCode_isNull);
						}
						if (alarmCode_isNotNull != null) {
							queryMapReturn.put("alarmCode_isNotNull",
									alarmCode_isNotNull);
						}
						if (alarmCode_in != null) {
							queryMapReturn.put("alarmCode_in", alarmCode_in);
						}
						if (alarmCode != null) {
							queryMapReturn.put("alarmCode", alarmCode);
						}
						String alarmContent_like = (String) contentreq
								.get("alarmContent_like");
						String alarmContent_isNull = (String) contentreq
								.get("alarmContent_isNull");
						String alarmContent_isNotNull = (String) contentreq
								.get("alarmContent_isNotNull");
						String alarmContent_in = (String) contentreq
								.get("alarmContent_in");
						String alarmContent = (String) contentreq
								.get("alarmContent");
						if (alarmContent_like != null) {
							queryMapReturn.put("alarmContent_like",
									alarmContent_like);
						}
						if (alarmContent_isNull != null) {
							queryMapReturn.put("alarmContent_isNull",
									alarmContent_isNull);
						}
						if (alarmContent_isNotNull != null) {
							queryMapReturn.put("alarmContent_isNotNull",
									alarmContent_isNotNull);
						}
						if (alarmContent_in != null) {
							queryMapReturn.put("alarmContent_in",
									alarmContent_in);
						}
						if (alarmContent != null) {
							queryMapReturn.put("alarmContent", alarmContent);
						}
						Integer alarmStatus_gt = (Integer) contentreq
								.get("alarmStatus_gt");
						Integer alarmStatus_ge = (Integer) contentreq
								.get("alarmStatus_ge");
						Integer alarmStatus_lt = (Integer) contentreq
								.get("alarmStatus_lt");
						Integer alarmStatus_le = (Integer) contentreq
								.get("alarmStatus_le");
						String alarmStatus_in = (String) contentreq
								.get("alarmStatus_in");
						Integer alarmStatus = (Integer) contentreq
								.get("alarmStatus");
						if (alarmStatus_gt != null) {
							queryMapReturn
									.put("alarmStatus_gt", alarmStatus_gt);
						}
						if (alarmStatus_ge != null) {
							queryMapReturn
									.put("alarmStatus_ge", alarmStatus_ge);
						}
						if (alarmStatus_lt != null) {
							queryMapReturn
									.put("alarmStatus_lt", alarmStatus_lt);
						}
						if (alarmStatus_le != null) {
							queryMapReturn
									.put("alarmStatus_le", alarmStatus_le);
						}
						if (alarmStatus_in != null) {
							queryMapReturn
									.put("alarmStatus_in", alarmStatus_in);
						}
						if (alarmStatus != null) {
							queryMapReturn.put("alarmStatus", alarmStatus);
						}
						String alarmTime_gt = (String) contentreq
								.get("alarmTime_gt");
						String alarmTime_ge = (String) contentreq
								.get("alarmTime_ge");
						String alarmTime_lt = (String) contentreq
								.get("alarmTime_lt");
						String alarmTime_le = (String) contentreq
								.get("alarmTime_le");
						if (alarmTime_gt != null) {
							queryMapReturn.put("alarmTime_gt", alarmTime_gt);
						}
						if (alarmTime_ge != null) {
							queryMapReturn.put("alarmTime_ge", alarmTime_ge);
						}
						if (alarmTime_lt != null) {
							queryMapReturn.put("alarmTime_lt", alarmTime_lt);
						}
						if (alarmTime_le != null) {
							queryMapReturn.put("alarmTime_le", alarmTime_le);
						}
						Integer alarmType_gt = (Integer) contentreq
								.get("alarmType_gt");
						Integer alarmType_ge = (Integer) contentreq
								.get("alarmType_ge");
						Integer alarmType_lt = (Integer) contentreq
								.get("alarmType_lt");
						Integer alarmType_le = (Integer) contentreq
								.get("alarmType_le");
						String alarmType_in = (String) contentreq
								.get("alarmType_in");
						Integer alarmType = (Integer) contentreq
								.get("alarmType");
						if (alarmType_gt != null) {
							queryMapReturn.put("alarmType_gt", alarmType_gt);
						}
						if (alarmType_ge != null) {
							queryMapReturn.put("alarmType_ge", alarmType_ge);
						}
						if (alarmType_lt != null) {
							queryMapReturn.put("alarmType_lt", alarmType_lt);
						}
						if (alarmType_le != null) {
							queryMapReturn.put("alarmType_le", alarmType_le);
						}
						if (alarmType_in != null) {
							queryMapReturn.put("alarmType_in", alarmType_in);
						}
						if (alarmType != null) {
							queryMapReturn.put("alarmType", alarmType);
						}
						Integer posLat_gt = (Integer) contentreq
								.get("posLat_gt");
						Integer posLat_ge = (Integer) contentreq
								.get("posLat_ge");
						Integer posLat_lt = (Integer) contentreq
								.get("posLat_lt");
						Integer posLat_le = (Integer) contentreq
								.get("posLat_le");
						String posLat_in = (String) contentreq.get("posLat_in");
						Integer posLat = (Integer) contentreq.get("posLat");
						if (posLat_gt != null) {
							queryMapReturn.put("posLat_gt", posLat_gt);
						}
						if (posLat_ge != null) {
							queryMapReturn.put("posLat_ge", posLat_ge);
						}
						if (posLat_lt != null) {
							queryMapReturn.put("posLat_lt", posLat_lt);
						}
						if (posLat_le != null) {
							queryMapReturn.put("posLat_le", posLat_le);
						}
						if (posLat_in != null) {
							queryMapReturn.put("posLat_in", posLat_in);
						}
						if (posLat != null) {
							queryMapReturn.put("posLat", posLat);
						}
						Integer posLong_gt = (Integer) contentreq
								.get("posLong_gt");
						Integer posLong_ge = (Integer) contentreq
								.get("posLong_ge");
						Integer posLong_lt = (Integer) contentreq
								.get("posLong_lt");
						Integer posLong_le = (Integer) contentreq
								.get("posLong_le");
						String posLong_in = (String) contentreq
								.get("posLong_in");
						Integer posLong = (Integer) contentreq.get("posLong");
						if (posLong_gt != null) {
							queryMapReturn.put("posLong_gt", posLong_gt);
						}
						if (posLong_ge != null) {
							queryMapReturn.put("posLong_ge", posLong_ge);
						}
						if (posLong_lt != null) {
							queryMapReturn.put("posLong_lt", posLong_lt);
						}
						if (posLong_le != null) {
							queryMapReturn.put("posLong_le", posLong_le);
						}
						if (posLong_in != null) {
							queryMapReturn.put("posLong_in", posLong_in);
						}
						if (posLong != null) {
							queryMapReturn.put("posLong", posLong);
						}
						String address_like = (String) contentreq
								.get("address_like");
						String address_isNull = (String) contentreq
								.get("address_isNull");
						String address_isNotNull = (String) contentreq
								.get("address_isNotNull");
						String address_in = (String) contentreq
								.get("address_in");
						String address = (String) contentreq.get("address");
						if (address_like != null) {
							queryMapReturn.put("address_like", address_like);
						}
						if (address_isNull != null) {
							queryMapReturn
									.put("address_isNull", address_isNull);
						}
						if (address_isNotNull != null) {
							queryMapReturn.put("address_isNotNull",
									address_isNotNull);
						}
						if (address_in != null) {
							queryMapReturn.put("address_in", address_in);
						}
						if (address != null) {
							queryMapReturn.put("address", address);
						}
						Integer deviation_gt = (Integer) contentreq
								.get("deviation_gt");
						Integer deviation_ge = (Integer) contentreq
								.get("deviation_ge");
						Integer deviation_lt = (Integer) contentreq
								.get("deviation_lt");
						Integer deviation_le = (Integer) contentreq
								.get("deviation_le");
						String deviation_in = (String) contentreq
								.get("deviation_in");
						Integer deviation = (Integer) contentreq
								.get("deviation");
						if (deviation_gt != null) {
							queryMapReturn.put("deviation_gt", deviation_gt);
						}
						if (deviation_ge != null) {
							queryMapReturn.put("deviation_ge", deviation_ge);
						}
						if (deviation_lt != null) {
							queryMapReturn.put("deviation_lt", deviation_lt);
						}
						if (deviation_le != null) {
							queryMapReturn.put("deviation_le", deviation_le);
						}
						if (deviation_in != null) {
							queryMapReturn.put("deviation_in", deviation_in);
						}
						if (deviation != null) {
							queryMapReturn.put("deviation", deviation);
						}

						String olderShow = (String) contentreq.get("olderShow");
						if ("true".equals(olderShow)) {
							olderShowReturn = true;
						}
						String devShow = (String) contentreq.get("devShow");
						if ("true".equals(devShow)) {
							devShowReturn = true;
						}
					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null)
								&& (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp)
									.intValue();
						}
						if ((pagesizetemp != null)
								&& (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp)
									.intValue();
						}
					}
					Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray) orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for (int i = 0; i < order.size(); i++) {
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String) obj.get("column"));
							orderVO.setOrderType((String) obj.get("type"));
							orderListReturn.add(orderVO);
						}
					}
				}
			} else if ("DEL_DEV_ALARM_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
						String delOlder = (String) contentreq.get("delOlder");
						if ("true".equals(delOlder)) {
							delOlderReturn = true;
						}
						String delDev = (String) contentreq.get("delDev");
						if ("true".equals(delDev)) {
							delDevReturn = true;
						}
					}
				}
			} else if ("DEL_DEV_ALARM_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer devId_gt = (Integer) contentreq.get("devId_gt");
						Integer devId_ge = (Integer) contentreq.get("devId_ge");
						Integer devId_lt = (Integer) contentreq.get("devId_lt");
						Integer devId_le = (Integer) contentreq.get("devId_le");
						String devId_in = (String) contentreq.get("devId_in");
						Integer devId = (Integer) contentreq.get("devId");
						if (devId_gt != null) {
							queryMapReturn.put("devId_gt", devId_gt);
						}
						if (devId_ge != null) {
							queryMapReturn.put("devId_ge", devId_ge);
						}
						if (devId_lt != null) {
							queryMapReturn.put("devId_lt", devId_lt);
						}
						if (devId_le != null) {
							queryMapReturn.put("devId_le", devId_le);
						}
						if (devId_in != null) {
							queryMapReturn.put("devId_in", devId_in);
						}
						if (devId != null) {
							queryMapReturn.put("devId", devId);
						}
						Integer devType_gt = (Integer) contentreq
								.get("devType_gt");
						Integer devType_ge = (Integer) contentreq
								.get("devType_ge");
						Integer devType_lt = (Integer) contentreq
								.get("devType_lt");
						Integer devType_le = (Integer) contentreq
								.get("devType_le");
						String devType_in = (String) contentreq
								.get("devType_in");
						Integer devType = (Integer) contentreq.get("devType");
						if (devType_gt != null) {
							queryMapReturn.put("devType_gt", devType_gt);
						}
						if (devType_ge != null) {
							queryMapReturn.put("devType_ge", devType_ge);
						}
						if (devType_lt != null) {
							queryMapReturn.put("devType_lt", devType_lt);
						}
						if (devType_le != null) {
							queryMapReturn.put("devType_le", devType_le);
						}
						if (devType_in != null) {
							queryMapReturn.put("devType_in", devType_in);
						}
						if (devType != null) {
							queryMapReturn.put("devType", devType);
						}
						String olderName_like = (String) contentreq
								.get("olderName_like");
						String olderName_isNull = (String) contentreq
								.get("olderName_isNull");
						String olderName_isNotNull = (String) contentreq
								.get("olderName_isNotNull");
						String olderName_in = (String) contentreq
								.get("olderName_in");
						String olderName = (String) contentreq.get("olderName");
						if (olderName_like != null) {
							queryMapReturn
									.put("olderName_like", olderName_like);
						}
						if (olderName_isNull != null) {
							queryMapReturn.put("olderName_isNull",
									olderName_isNull);
						}
						if (olderName_isNotNull != null) {
							queryMapReturn.put("olderName_isNotNull",
									olderName_isNotNull);
						}
						if (olderName_in != null) {
							queryMapReturn.put("olderName_in", olderName_in);
						}
						if (olderName != null) {
							queryMapReturn.put("olderName", olderName);
						}
						Integer olderId_gt = (Integer) contentreq
								.get("olderId_gt");
						Integer olderId_ge = (Integer) contentreq
								.get("olderId_ge");
						Integer olderId_lt = (Integer) contentreq
								.get("olderId_lt");
						Integer olderId_le = (Integer) contentreq
								.get("olderId_le");
						String olderId_in = (String) contentreq
								.get("olderId_in");
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId_gt != null) {
							queryMapReturn.put("olderId_gt", olderId_gt);
						}
						if (olderId_ge != null) {
							queryMapReturn.put("olderId_ge", olderId_ge);
						}
						if (olderId_lt != null) {
							queryMapReturn.put("olderId_lt", olderId_lt);
						}
						if (olderId_le != null) {
							queryMapReturn.put("olderId_le", olderId_le);
						}
						if (olderId_in != null) {
							queryMapReturn.put("olderId_in", olderId_in);
						}
						if (olderId != null) {
							queryMapReturn.put("olderId", olderId);
						}
						String alarmCode_like = (String) contentreq
								.get("alarmCode_like");
						String alarmCode_isNull = (String) contentreq
								.get("alarmCode_isNull");
						String alarmCode_isNotNull = (String) contentreq
								.get("alarmCode_isNotNull");
						String alarmCode_in = (String) contentreq
								.get("alarmCode_in");
						String alarmCode = (String) contentreq.get("alarmCode");
						if (alarmCode_like != null) {
							queryMapReturn
									.put("alarmCode_like", alarmCode_like);
						}
						if (alarmCode_isNull != null) {
							queryMapReturn.put("alarmCode_isNull",
									alarmCode_isNull);
						}
						if (alarmCode_isNotNull != null) {
							queryMapReturn.put("alarmCode_isNotNull",
									alarmCode_isNotNull);
						}
						if (alarmCode_in != null) {
							queryMapReturn.put("alarmCode_in", alarmCode_in);
						}
						if (alarmCode != null) {
							queryMapReturn.put("alarmCode", alarmCode);
						}
						String alarmContent_like = (String) contentreq
								.get("alarmContent_like");
						String alarmContent_isNull = (String) contentreq
								.get("alarmContent_isNull");
						String alarmContent_isNotNull = (String) contentreq
								.get("alarmContent_isNotNull");
						String alarmContent_in = (String) contentreq
								.get("alarmContent_in");
						String alarmContent = (String) contentreq
								.get("alarmContent");
						if (alarmContent_like != null) {
							queryMapReturn.put("alarmContent_like",
									alarmContent_like);
						}
						if (alarmContent_isNull != null) {
							queryMapReturn.put("alarmContent_isNull",
									alarmContent_isNull);
						}
						if (alarmContent_isNotNull != null) {
							queryMapReturn.put("alarmContent_isNotNull",
									alarmContent_isNotNull);
						}
						if (alarmContent_in != null) {
							queryMapReturn.put("alarmContent_in",
									alarmContent_in);
						}
						if (alarmContent != null) {
							queryMapReturn.put("alarmContent", alarmContent);
						}
						Integer alarmStatus_gt = (Integer) contentreq
								.get("alarmStatus_gt");
						Integer alarmStatus_ge = (Integer) contentreq
								.get("alarmStatus_ge");
						Integer alarmStatus_lt = (Integer) contentreq
								.get("alarmStatus_lt");
						Integer alarmStatus_le = (Integer) contentreq
								.get("alarmStatus_le");
						String alarmStatus_in = (String) contentreq
								.get("alarmStatus_in");
						Integer alarmStatus = (Integer) contentreq
								.get("alarmStatus");
						if (alarmStatus_gt != null) {
							queryMapReturn
									.put("alarmStatus_gt", alarmStatus_gt);
						}
						if (alarmStatus_ge != null) {
							queryMapReturn
									.put("alarmStatus_ge", alarmStatus_ge);
						}
						if (alarmStatus_lt != null) {
							queryMapReturn
									.put("alarmStatus_lt", alarmStatus_lt);
						}
						if (alarmStatus_le != null) {
							queryMapReturn
									.put("alarmStatus_le", alarmStatus_le);
						}
						if (alarmStatus_in != null) {
							queryMapReturn
									.put("alarmStatus_in", alarmStatus_in);
						}
						if (alarmStatus != null) {
							queryMapReturn.put("alarmStatus", alarmStatus);
						}
						String alarmTime_gt = (String) contentreq
								.get("alarmTime_gt");
						String alarmTime_ge = (String) contentreq
								.get("alarmTime_ge");
						String alarmTime_lt = (String) contentreq
								.get("alarmTime_lt");
						String alarmTime_le = (String) contentreq
								.get("alarmTime_le");
						if (alarmTime_gt != null) {
							queryMapReturn.put("alarmTime_gt", alarmTime_gt);
						}
						if (alarmTime_ge != null) {
							queryMapReturn.put("alarmTime_ge", alarmTime_ge);
						}
						if (alarmTime_lt != null) {
							queryMapReturn.put("alarmTime_lt", alarmTime_lt);
						}
						if (alarmTime_le != null) {
							queryMapReturn.put("alarmTime_le", alarmTime_le);
						}
						Integer alarmType_gt = (Integer) contentreq
								.get("alarmType_gt");
						Integer alarmType_ge = (Integer) contentreq
								.get("alarmType_ge");
						Integer alarmType_lt = (Integer) contentreq
								.get("alarmType_lt");
						Integer alarmType_le = (Integer) contentreq
								.get("alarmType_le");
						String alarmType_in = (String) contentreq
								.get("alarmType_in");
						Integer alarmType = (Integer) contentreq
								.get("alarmType");
						if (alarmType_gt != null) {
							queryMapReturn.put("alarmType_gt", alarmType_gt);
						}
						if (alarmType_ge != null) {
							queryMapReturn.put("alarmType_ge", alarmType_ge);
						}
						if (alarmType_lt != null) {
							queryMapReturn.put("alarmType_lt", alarmType_lt);
						}
						if (alarmType_le != null) {
							queryMapReturn.put("alarmType_le", alarmType_le);
						}
						if (alarmType_in != null) {
							queryMapReturn.put("alarmType_in", alarmType_in);
						}
						if (alarmType != null) {
							queryMapReturn.put("alarmType", alarmType);
						}
						Integer posLat_gt = (Integer) contentreq
								.get("posLat_gt");
						Integer posLat_ge = (Integer) contentreq
								.get("posLat_ge");
						Integer posLat_lt = (Integer) contentreq
								.get("posLat_lt");
						Integer posLat_le = (Integer) contentreq
								.get("posLat_le");
						String posLat_in = (String) contentreq.get("posLat_in");
						Integer posLat = (Integer) contentreq.get("posLat");
						if (posLat_gt != null) {
							queryMapReturn.put("posLat_gt", posLat_gt);
						}
						if (posLat_ge != null) {
							queryMapReturn.put("posLat_ge", posLat_ge);
						}
						if (posLat_lt != null) {
							queryMapReturn.put("posLat_lt", posLat_lt);
						}
						if (posLat_le != null) {
							queryMapReturn.put("posLat_le", posLat_le);
						}
						if (posLat_in != null) {
							queryMapReturn.put("posLat_in", posLat_in);
						}
						if (posLat != null) {
							queryMapReturn.put("posLat", posLat);
						}
						Integer posLong_gt = (Integer) contentreq
								.get("posLong_gt");
						Integer posLong_ge = (Integer) contentreq
								.get("posLong_ge");
						Integer posLong_lt = (Integer) contentreq
								.get("posLong_lt");
						Integer posLong_le = (Integer) contentreq
								.get("posLong_le");
						String posLong_in = (String) contentreq
								.get("posLong_in");
						Integer posLong = (Integer) contentreq.get("posLong");
						if (posLong_gt != null) {
							queryMapReturn.put("posLong_gt", posLong_gt);
						}
						if (posLong_ge != null) {
							queryMapReturn.put("posLong_ge", posLong_ge);
						}
						if (posLong_lt != null) {
							queryMapReturn.put("posLong_lt", posLong_lt);
						}
						if (posLong_le != null) {
							queryMapReturn.put("posLong_le", posLong_le);
						}
						if (posLong_in != null) {
							queryMapReturn.put("posLong_in", posLong_in);
						}
						if (posLong != null) {
							queryMapReturn.put("posLong", posLong);
						}
						String address_like = (String) contentreq
								.get("address_like");
						String address_isNull = (String) contentreq
								.get("address_isNull");
						String address_isNotNull = (String) contentreq
								.get("address_isNotNull");
						String address_in = (String) contentreq
								.get("address_in");
						String address = (String) contentreq.get("address");
						if (address_like != null) {
							queryMapReturn.put("address_like", address_like);
						}
						if (address_isNull != null) {
							queryMapReturn
									.put("address_isNull", address_isNull);
						}
						if (address_isNotNull != null) {
							queryMapReturn.put("address_isNotNull",
									address_isNotNull);
						}
						if (address_in != null) {
							queryMapReturn.put("address_in", address_in);
						}
						if (address != null) {
							queryMapReturn.put("address", address);
						}
						Integer deviation_gt = (Integer) contentreq
								.get("deviation_gt");
						Integer deviation_ge = (Integer) contentreq
								.get("deviation_ge");
						Integer deviation_lt = (Integer) contentreq
								.get("deviation_lt");
						Integer deviation_le = (Integer) contentreq
								.get("deviation_le");
						String deviation_in = (String) contentreq
								.get("deviation_in");
						Integer deviation = (Integer) contentreq
								.get("deviation");
						if (deviation_gt != null) {
							queryMapReturn.put("deviation_gt", deviation_gt);
						}
						if (deviation_ge != null) {
							queryMapReturn.put("deviation_ge", deviation_ge);
						}
						if (deviation_lt != null) {
							queryMapReturn.put("deviation_lt", deviation_lt);
						}
						if (deviation_le != null) {
							queryMapReturn.put("deviation_le", deviation_le);
						}
						if (deviation_in != null) {
							queryMapReturn.put("deviation_in", deviation_in);
						}
						if (deviation != null) {
							queryMapReturn.put("deviation", deviation);
						}

						String delOlder = (String) contentreq.get("delOlder");
						if ("true".equals(delOlder)) {
							delOlderReturn = true;
						}
						String delDev = (String) contentreq.get("delDev");
						if ("true".equals(delDev)) {
							delDevReturn = true;
						}
					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null)
								&& (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp)
									.intValue();
						}
						if ((pagesizetemp != null)
								&& (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp)
									.intValue();
						}
					}
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (devAlarmReturn != null) {
				parseMap.put("devAlarm", devAlarmReturn);
			}
			if (devAlarmListReturn != null && devAlarmListReturn.size() > 0) {
				parseMap.put("devAlarmList", devAlarmListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}

			if (olderShowReturn != null) {
				parseMap.put("olderShow", olderShowReturn);
			}
			if (delOlderReturn != null) {
				parseMap.put("delOlder", delOlderReturn);
			}
			if (devShowReturn != null) {
				parseMap.put("devShow", devShowReturn);
			}
			if (delDevReturn != null) {
				parseMap.put("delDev", delDevReturn);
			}

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command, String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
