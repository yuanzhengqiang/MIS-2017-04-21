package fsk.parse.serviceEmployee;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.serviceEmployee.ServiceEmployeeEntity;



import fsk.entity.serviceTask.ServiceTaskEntity;
import fsk.entity.employee.EmployeeEntity;

import com.framework.system.util.JsonUtil;
import com.framework.system.db.query.OrderVO;
 /**   
 * @Title: Parse
 * @Description: 服务人员解析器
 * @author feng.gu
 * @date 2016-08-02 14:39:47
 * @version V1.0   
 *
 */
public class ServiceEmployeeParse {
	private static Logger logger = Logger.getLogger(ServiceEmployeeParse.class);
	private static ServiceEmployeeParse serviceEmployeeParse;

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static ServiceEmployeeParse getInstance() {
		if (serviceEmployeeParse == null) {
			serviceEmployeeParse = new ServiceEmployeeParse();
		}
		return serviceEmployeeParse;
	}

	public Map<String, Object> parse(int type, String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command,reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command,reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			ServiceEmployeeEntity serviceEmployeeReturn = null;
			List<ServiceEmployeeEntity> serviceEmployeeListReturn = null;
			Integer idReturn = null;			
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;
			
															Boolean serviceTaskShowReturn = false;
			Boolean delServiceTaskReturn = false;
																								Boolean employeeShowReturn = false;
			Boolean delEmployeeReturn = false;
															
			//json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject)reqParams.get("content");
			if ("ADD_SERVICE_EMPLOYEE_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				serviceEmployeeReturn = new ServiceEmployeeEntity();
				if(true){
					if(contentreq!=null){
												    						    Integer id = (Integer)contentreq.get("id");
	                		if(id!=null){
			                	serviceEmployeeReturn.setId(id);
			                }
						    												    						    Integer employeeId = (Integer)contentreq.get("employeeId");
	                		if(employeeId!=null){
			                	serviceEmployeeReturn.setEmployeeId(employeeId);
			                }
						    												    						    String name = (String)contentreq.get("name");
	                		if(name!=null){
			                	serviceEmployeeReturn.setName(name);
			                }
						    												    						    String employeeCode = (String)contentreq.get("employeeCode");
	                		if(employeeCode!=null){
			                	serviceEmployeeReturn.setEmployeeCode(employeeCode);
			                }
						    												    						    String role = (String)contentreq.get("role");
	                		if(role!=null){
			                	serviceEmployeeReturn.setRole(role);
			                }
						    												    						    Integer type = (Integer)contentreq.get("type");
	                		if(type!=null){
			                	serviceEmployeeReturn.setType(type);
			                }
						    												    						    Integer serviceTaskId = (Integer)contentreq.get("serviceTaskId");
	                		if(serviceTaskId!=null){
			                	serviceEmployeeReturn.setServiceTaskId(serviceTaskId);
			                }
						    											}					
				}
																				if(true){
					Object serviceTask = contentreq.get("serviceTask");
					if(serviceTask!=null){
						JSONObject obj = (JSONObject)serviceTask;
						if(obj!=null){
							ServiceTaskEntity entity = new ServiceTaskEntity();						
																						    Integer id = (Integer)obj.get("id");
		                		if(id!=null){
				                	entity.setId(id);
				                }
							    																						    String serviceCode = (String)obj.get("serviceCode");
		                		if(serviceCode!=null){
				                	entity.setServiceCode(serviceCode);
				                }
							    																						    Integer olderId = (Integer)obj.get("olderId");
		                		if(olderId!=null){
				                	entity.setOlderId(olderId);
				                }
							    																						    String olderMemberNum = (String)obj.get("olderMemberNum");
		                		if(olderMemberNum!=null){
				                	entity.setOlderMemberNum(olderMemberNum);
				                }
							    																						    String olderName = (String)obj.get("olderName");
		                		if(olderName!=null){
				                	entity.setOlderName(olderName);
				                }
							    																						    String olderBirthdate = (String)obj.get("olderBirthdate");
		                		if(olderBirthdate!=null){
				                	entity.setOlderBirthdate(olderBirthdate);
				                }
							    																						    Integer serviceAreaId = (Integer)obj.get("serviceAreaId");
		                		if(serviceAreaId!=null){
				                	entity.setServiceAreaId(serviceAreaId);
				                }
							    																						    Integer serviceStreetId = (Integer)obj.get("serviceStreetId");
		                		if(serviceStreetId!=null){
				                	entity.setServiceStreetId(serviceStreetId);
				                }
							    																						    String contactName = (String)obj.get("contactName");
		                		if(contactName!=null){
				                	entity.setContactName(contactName);
				                }
							    																						    String contactTel = (String)obj.get("contactTel");
		                		if(contactTel!=null){
				                	entity.setContactTel(contactTel);
				                }
							    																						    String address = (String)obj.get("address");
		                		if(address!=null){
				                	entity.setAddress(address);
				                }
							    																						     							     Double addressLong = JsonUtil.getJSONDouble(obj, "addressLong");
								 if (addressLong != null) {
									entity.setAddressLong(BigDecimal.valueOf(addressLong));
								 }
							     							     							    																						     							     Double addressLat = JsonUtil.getJSONDouble(obj, "addressLat");
								 if (addressLat != null) {
									entity.setAddressLat(BigDecimal.valueOf(addressLat));
								 }
							     							     							    																						    String serviceExpectTime = (String)obj.get("serviceExpectTime");
		                		if(serviceExpectTime!=null){
				                	entity.setServiceExpectTime(serviceExpectTime);
				                }
							    																						    String serviceStartTime = (String)obj.get("serviceStartTime");
		                		if(serviceStartTime!=null){
				                	entity.setServiceStartTime(serviceStartTime);
				                }
							    																						    String serviceEndTime = (String)obj.get("serviceEndTime");
		                		if(serviceEndTime!=null){
				                	entity.setServiceEndTime(serviceEndTime);
				                }
							    																						    Integer serviceTimeCount = (Integer)obj.get("serviceTimeCount");
		                		if(serviceTimeCount!=null){
				                	entity.setServiceTimeCount(serviceTimeCount);
				                }
							    																						    Integer serviceTimeStatus = (Integer)obj.get("serviceTimeStatus");
		                		if(serviceTimeStatus!=null){
				                	entity.setServiceTimeStatus(serviceTimeStatus);
				                }
							    																						    Integer siteId = (Integer)obj.get("siteId");
		                		if(siteId!=null){
				                	entity.setSiteId(siteId);
				                }
							    																						    String siteName = (String)obj.get("siteName");
		                		if(siteName!=null){
				                	entity.setSiteName(siteName);
				                }
							    																						    String nursingRecord = (String)obj.get("nursingRecord");
		                		if(nursingRecord!=null){
				                	entity.setNursingRecord(nursingRecord);
				                }
							    																						    String customerInformed = (String)obj.get("customerInformed");
		                		if(customerInformed!=null){
				                	entity.setCustomerInformed(customerInformed);
				                }
							    																						    Integer qualityEvaluation = (Integer)obj.get("qualityEvaluation");
		                		if(qualityEvaluation!=null){
				                	entity.setQualityEvaluation(qualityEvaluation);
				                }
							    																						    Integer attitudeEvaluation = (Integer)obj.get("attitudeEvaluation");
		                		if(attitudeEvaluation!=null){
				                	entity.setAttitudeEvaluation(attitudeEvaluation);
				                }
							    																						    Integer courseNumber = (Integer)obj.get("courseNumber");
		                		if(courseNumber!=null){
				                	entity.setCourseNumber(courseNumber);
				                }
							    																						    Integer serviceNumber = (Integer)obj.get("serviceNumber");
		                		if(serviceNumber!=null){
				                	entity.setServiceNumber(serviceNumber);
				                }
							    																						     							     Double price = JsonUtil.getJSONDouble(obj, "price");
								 if (price != null) {
									entity.setPrice(BigDecimal.valueOf(price));
								 }
							     							     							    																						    String source = (String)obj.get("source");
		                		if(source!=null){
				                	entity.setSource(source);
				                }
							    																						    Integer healthInsurance = (Integer)obj.get("healthInsurance");
		                		if(healthInsurance!=null){
				                	entity.setHealthInsurance(healthInsurance);
				                }
							    																						    Integer status = (Integer)obj.get("status");
		                		if(status!=null){
				                	entity.setStatus(status);
				                }
							    																						    String des = (String)obj.get("des");
		                		if(des!=null){
				                	entity.setDes(des);
				                }
							    																						    String addPerson = (String)obj.get("addPerson");
		                		if(addPerson!=null){
				                	entity.setAddPerson(addPerson);
				                }
							    																						    String addTime = (String)obj.get("addTime");
		                		if(addTime!=null){
				                	entity.setAddTime(addTime);
				                }
							    																						    String visitPerson = (String)obj.get("visitPerson");
		                		if(visitPerson!=null){
				                	entity.setVisitPerson(visitPerson);
				                }
							    																						    String visitTime = (String)obj.get("visitTime");
		                		if(visitTime!=null){
				                	entity.setVisitTime(visitTime);
				                }
							    																						     							     Double satisfactionEvaluation = JsonUtil.getJSONDouble(obj, "satisfactionEvaluation");
								 if (satisfactionEvaluation != null) {
									entity.setSatisfactionEvaluation(BigDecimal.valueOf(satisfactionEvaluation));
								 }
							     							     							    																						    String visitRecord = (String)obj.get("visitRecord");
		                		if(visitRecord!=null){
				                	entity.setVisitRecord(visitRecord);
				                }
							    																						    String physiologicalParametersDes = (String)obj.get("physiologicalParametersDes");
		                		if(physiologicalParametersDes!=null){
				                	entity.setPhysiologicalParametersDes(physiologicalParametersDes);
				                }
							    																						    String visitServiceTime = (String)obj.get("visitServiceTime");
		                		if(visitServiceTime!=null){
				                	entity.setVisitServiceTime(visitServiceTime);
				                }
							    																						    String visitServiceAttitude = (String)obj.get("visitServiceAttitude");
		                		if(visitServiceAttitude!=null){
				                	entity.setVisitServiceAttitude(visitServiceAttitude);
				                }
							    																						    String visitServiceQuality = (String)obj.get("visitServiceQuality");
		                		if(visitServiceQuality!=null){
				                	entity.setVisitServiceQuality(visitServiceQuality);
				                }
							    														serviceEmployeeReturn.setServiceTask(entity);
						}						
					}
				}
																																if(true){
					Object employee = contentreq.get("employee");
					if(employee!=null){
						JSONObject obj = (JSONObject)employee;
						if(obj!=null){
							EmployeeEntity entity = new EmployeeEntity();						
																						    Integer id = (Integer)obj.get("id");
		                		if(id!=null){
				                	entity.setId(id);
				                }
							    																						    Integer userId = (Integer)obj.get("userId");
		                		if(userId!=null){
				                	entity.setUserId(userId);
				                }
							    																						    Integer leaderEmployeeId = (Integer)obj.get("leaderEmployeeId");
		                		if(leaderEmployeeId!=null){
				                	entity.setLeaderEmployeeId(leaderEmployeeId);
				                }
							    																						    String mainPhoto = (String)obj.get("mainPhoto");
		                		if(mainPhoto!=null){
				                	entity.setMainPhoto(mainPhoto);
				                }
							    																						    String name = (String)obj.get("name");
		                		if(name!=null){
				                	entity.setName(name);
				                }
							    																						    String idnumber = (String)obj.get("idnumber");
		                		if(idnumber!=null){
				                	entity.setIdnumber(idnumber);
				                }
							    																						    String gender = (String)obj.get("gender");
		                		if(gender!=null){
				                	entity.setGender(gender);
				                }
							    																						    String mobileTel = (String)obj.get("mobileTel");
		                		if(mobileTel!=null){
				                	entity.setMobileTel(mobileTel);
				                }
							    																						    String homeTel = (String)obj.get("homeTel");
		                		if(homeTel!=null){
				                	entity.setHomeTel(homeTel);
				                }
							    																						    String birthdate = (String)obj.get("birthdate");
		                		if(birthdate!=null){
				                	entity.setBirthdate(birthdate);
				                }
							    																						     							     Double starLevel = JsonUtil.getJSONDouble(obj, "starLevel");
								 if (starLevel != null) {
									entity.setStarLevel(BigDecimal.valueOf(starLevel));
								 }
							     							     							    																						    String indexNum = (String)obj.get("indexNum");
		                		if(indexNum!=null){
				                	entity.setIndexNum(indexNum);
				                }
							    																						    Integer department = (Integer)obj.get("department");
		                		if(department!=null){
				                	entity.setDepartment(department);
				                }
							    																						    Integer secondDepartmentId = (Integer)obj.get("secondDepartmentId");
		                		if(secondDepartmentId!=null){
				                	entity.setSecondDepartmentId(secondDepartmentId);
				                }
							    														serviceEmployeeReturn.setEmployee(entity);
						}						
					}
				}
																			} else if ("QUERY_SERVICE_EMPLOYEE_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");
					        																												String serviceTaskShow = (String)contentreq.get("serviceTaskShow");
							if("true".equals(serviceTaskShow)){
								serviceTaskShowReturn = true;
							}
																																																								String employeeShow = (String)contentreq.get("employeeShow");
							if("true".equals(employeeShow)){
								employeeShowReturn = true;
							}
																																	}	
				}
			} else if ("QUERY_SERVICE_EMPLOYEE_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																								Integer employeeId_gt = (Integer)contentreq.get("employeeId_gt");
						Integer employeeId_ge = (Integer)contentreq.get("employeeId_ge");
						Integer employeeId_lt = (Integer)contentreq.get("employeeId_lt");
						Integer employeeId_le = (Integer)contentreq.get("employeeId_le");
						String employeeId_in = (String)contentreq.get("employeeId_in");
						Integer employeeId = (Integer)contentreq.get("employeeId");
                        if(employeeId_gt!=null){
                        	queryMapReturn.put("employeeId_gt", employeeId_gt);
						}
						if(employeeId_ge!=null){
                        	queryMapReturn.put("employeeId_ge", employeeId_ge);
						}
						if(employeeId_lt!=null){
                        	queryMapReturn.put("employeeId_lt", employeeId_lt);
						}
						if(employeeId_le!=null){
                        	queryMapReturn.put("employeeId_le", employeeId_le);
						}
						if(employeeId_in!=null){
                        	queryMapReturn.put("employeeId_in", employeeId_in);
						}
						if(employeeId!=null){
                        	queryMapReturn.put("employeeId", employeeId);
						}		
																																String name_like = (String)contentreq.get("name_like");
							String name_isNull = (String)contentreq.get("name_isNull");
							String name_isNotNull = (String)contentreq.get("name_isNotNull");
							String name_in = (String)contentreq.get("name_in");
							String name = (String)contentreq.get("name");
							if(name_like!=null){
	                        	queryMapReturn.put("name_like", name_like);
							}
							if(name_isNull!=null){
	                        	queryMapReturn.put("name_isNull", name_isNull);
							}
							if(name_isNotNull!=null){
	                        	queryMapReturn.put("name_isNotNull", name_isNotNull);
							}
							if(name_in!=null){
	                        	queryMapReturn.put("name_in", name_in);
							}
							if(name!=null){
	                        	queryMapReturn.put("name", name);
							}						           
																																							String employeeCode_like = (String)contentreq.get("employeeCode_like");
							String employeeCode_isNull = (String)contentreq.get("employeeCode_isNull");
							String employeeCode_isNotNull = (String)contentreq.get("employeeCode_isNotNull");
							String employeeCode_in = (String)contentreq.get("employeeCode_in");
							String employeeCode = (String)contentreq.get("employeeCode");
							if(employeeCode_like!=null){
	                        	queryMapReturn.put("employeeCode_like", employeeCode_like);
							}
							if(employeeCode_isNull!=null){
	                        	queryMapReturn.put("employeeCode_isNull", employeeCode_isNull);
							}
							if(employeeCode_isNotNull!=null){
	                        	queryMapReturn.put("employeeCode_isNotNull", employeeCode_isNotNull);
							}
							if(employeeCode_in!=null){
	                        	queryMapReturn.put("employeeCode_in", employeeCode_in);
							}
							if(employeeCode!=null){
	                        	queryMapReturn.put("employeeCode", employeeCode);
							}						           
																																							String role_like = (String)contentreq.get("role_like");
							String role_isNull = (String)contentreq.get("role_isNull");
							String role_isNotNull = (String)contentreq.get("role_isNotNull");
							String role_in = (String)contentreq.get("role_in");
							String role = (String)contentreq.get("role");
							if(role_like!=null){
	                        	queryMapReturn.put("role_like", role_like);
							}
							if(role_isNull!=null){
	                        	queryMapReturn.put("role_isNull", role_isNull);
							}
							if(role_isNotNull!=null){
	                        	queryMapReturn.put("role_isNotNull", role_isNotNull);
							}
							if(role_in!=null){
	                        	queryMapReturn.put("role_in", role_in);
							}
							if(role!=null){
	                        	queryMapReturn.put("role", role);
							}						           
																															Integer type_gt = (Integer)contentreq.get("type_gt");
						Integer type_ge = (Integer)contentreq.get("type_ge");
						Integer type_lt = (Integer)contentreq.get("type_lt");
						Integer type_le = (Integer)contentreq.get("type_le");
						String type_in = (String)contentreq.get("type_in");
						Integer type = (Integer)contentreq.get("type");
                        if(type_gt!=null){
                        	queryMapReturn.put("type_gt", type_gt);
						}
						if(type_ge!=null){
                        	queryMapReturn.put("type_ge", type_ge);
						}
						if(type_lt!=null){
                        	queryMapReturn.put("type_lt", type_lt);
						}
						if(type_le!=null){
                        	queryMapReturn.put("type_le", type_le);
						}
						if(type_in!=null){
                        	queryMapReturn.put("type_in", type_in);
						}
						if(type!=null){
                        	queryMapReturn.put("type", type);
						}		
																								Integer serviceTaskId_gt = (Integer)contentreq.get("serviceTaskId_gt");
						Integer serviceTaskId_ge = (Integer)contentreq.get("serviceTaskId_ge");
						Integer serviceTaskId_lt = (Integer)contentreq.get("serviceTaskId_lt");
						Integer serviceTaskId_le = (Integer)contentreq.get("serviceTaskId_le");
						String serviceTaskId_in = (String)contentreq.get("serviceTaskId_in");
						Integer serviceTaskId = (Integer)contentreq.get("serviceTaskId");
                        if(serviceTaskId_gt!=null){
                        	queryMapReturn.put("serviceTaskId_gt", serviceTaskId_gt);
						}
						if(serviceTaskId_ge!=null){
                        	queryMapReturn.put("serviceTaskId_ge", serviceTaskId_ge);
						}
						if(serviceTaskId_lt!=null){
                        	queryMapReturn.put("serviceTaskId_lt", serviceTaskId_lt);
						}
						if(serviceTaskId_le!=null){
                        	queryMapReturn.put("serviceTaskId_le", serviceTaskId_le);
						}
						if(serviceTaskId_in!=null){
                        	queryMapReturn.put("serviceTaskId_in", serviceTaskId_in);
						}
						if(serviceTaskId!=null){
                        	queryMapReturn.put("serviceTaskId", serviceTaskId);
						}		
															
						    																																																	
																																			String serviceTaskShow = (String)contentreq.get("serviceTaskShow");
							if("true".equals(serviceTaskShow)){
								serviceTaskShowReturn = true;
							}
																																																								String employeeShow = (String)contentreq.get("employeeShow");
							if("true".equals(employeeShow)){
								employeeShowReturn = true;
							}
																																	}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				    Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray)orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for(int i=0;i<order.size();i++){
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String)obj.get("column"));
							orderVO.setOrderType((String)obj.get("type"));
							orderListReturn.add(orderVO);
						}						
					}
				}
			} else if ("DEL_SERVICE_EMPLOYEE_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");	
						    																												String delServiceTask = (String)contentreq.get("delServiceTask");
							if("true".equals(delServiceTask)){
								delServiceTaskReturn = true;
							}
																																																								String delEmployee = (String)contentreq.get("delEmployee");
							if("true".equals(delEmployee)){
								delEmployeeReturn = true;
							}
																																	}	
				}
			} else if ("DEL_SERVICE_EMPLOYEE_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																								Integer employeeId_gt = (Integer)contentreq.get("employeeId_gt");
						Integer employeeId_ge = (Integer)contentreq.get("employeeId_ge");
						Integer employeeId_lt = (Integer)contentreq.get("employeeId_lt");
						Integer employeeId_le = (Integer)contentreq.get("employeeId_le");
						String employeeId_in = (String)contentreq.get("employeeId_in");
						Integer employeeId = (Integer)contentreq.get("employeeId");
                        if(employeeId_gt!=null){
                        	queryMapReturn.put("employeeId_gt", employeeId_gt);
						}
						if(employeeId_ge!=null){
                        	queryMapReturn.put("employeeId_ge", employeeId_ge);
						}
						if(employeeId_lt!=null){
                        	queryMapReturn.put("employeeId_lt", employeeId_lt);
						}
						if(employeeId_le!=null){
                        	queryMapReturn.put("employeeId_le", employeeId_le);
						}
						if(employeeId_in!=null){
                        	queryMapReturn.put("employeeId_in", employeeId_in);
						}
						if(employeeId!=null){
                        	queryMapReturn.put("employeeId", employeeId);
						}		
																																String name_like = (String)contentreq.get("name_like");
							String name_isNull = (String)contentreq.get("name_isNull");
							String name_isNotNull = (String)contentreq.get("name_isNotNull");
							String name_in = (String)contentreq.get("name_in");
							String name = (String)contentreq.get("name");
							if(name_like!=null){
	                        	queryMapReturn.put("name_like", name_like);
							}
							if(name_isNull!=null){
	                        	queryMapReturn.put("name_isNull", name_isNull);
							}
							if(name_isNotNull!=null){
	                        	queryMapReturn.put("name_isNotNull", name_isNotNull);
							}
							if(name_in!=null){
	                        	queryMapReturn.put("name_in", name_in);
							}
							if(name!=null){
	                        	queryMapReturn.put("name", name);
							}						           
																																							String employeeCode_like = (String)contentreq.get("employeeCode_like");
							String employeeCode_isNull = (String)contentreq.get("employeeCode_isNull");
							String employeeCode_isNotNull = (String)contentreq.get("employeeCode_isNotNull");
							String employeeCode_in = (String)contentreq.get("employeeCode_in");
							String employeeCode = (String)contentreq.get("employeeCode");
							if(employeeCode_like!=null){
	                        	queryMapReturn.put("employeeCode_like", employeeCode_like);
							}
							if(employeeCode_isNull!=null){
	                        	queryMapReturn.put("employeeCode_isNull", employeeCode_isNull);
							}
							if(employeeCode_isNotNull!=null){
	                        	queryMapReturn.put("employeeCode_isNotNull", employeeCode_isNotNull);
							}
							if(employeeCode_in!=null){
	                        	queryMapReturn.put("employeeCode_in", employeeCode_in);
							}
							if(employeeCode!=null){
	                        	queryMapReturn.put("employeeCode", employeeCode);
							}						           
																																							String role_like = (String)contentreq.get("role_like");
							String role_isNull = (String)contentreq.get("role_isNull");
							String role_isNotNull = (String)contentreq.get("role_isNotNull");
							String role_in = (String)contentreq.get("role_in");
							String role = (String)contentreq.get("role");
							if(role_like!=null){
	                        	queryMapReturn.put("role_like", role_like);
							}
							if(role_isNull!=null){
	                        	queryMapReturn.put("role_isNull", role_isNull);
							}
							if(role_isNotNull!=null){
	                        	queryMapReturn.put("role_isNotNull", role_isNotNull);
							}
							if(role_in!=null){
	                        	queryMapReturn.put("role_in", role_in);
							}
							if(role!=null){
	                        	queryMapReturn.put("role", role);
							}						           
																															Integer type_gt = (Integer)contentreq.get("type_gt");
						Integer type_ge = (Integer)contentreq.get("type_ge");
						Integer type_lt = (Integer)contentreq.get("type_lt");
						Integer type_le = (Integer)contentreq.get("type_le");
						String type_in = (String)contentreq.get("type_in");
						Integer type = (Integer)contentreq.get("type");
                        if(type_gt!=null){
                        	queryMapReturn.put("type_gt", type_gt);
						}
						if(type_ge!=null){
                        	queryMapReturn.put("type_ge", type_ge);
						}
						if(type_lt!=null){
                        	queryMapReturn.put("type_lt", type_lt);
						}
						if(type_le!=null){
                        	queryMapReturn.put("type_le", type_le);
						}
						if(type_in!=null){
                        	queryMapReturn.put("type_in", type_in);
						}
						if(type!=null){
                        	queryMapReturn.put("type", type);
						}		
																								Integer serviceTaskId_gt = (Integer)contentreq.get("serviceTaskId_gt");
						Integer serviceTaskId_ge = (Integer)contentreq.get("serviceTaskId_ge");
						Integer serviceTaskId_lt = (Integer)contentreq.get("serviceTaskId_lt");
						Integer serviceTaskId_le = (Integer)contentreq.get("serviceTaskId_le");
						String serviceTaskId_in = (String)contentreq.get("serviceTaskId_in");
						Integer serviceTaskId = (Integer)contentreq.get("serviceTaskId");
                        if(serviceTaskId_gt!=null){
                        	queryMapReturn.put("serviceTaskId_gt", serviceTaskId_gt);
						}
						if(serviceTaskId_ge!=null){
                        	queryMapReturn.put("serviceTaskId_ge", serviceTaskId_ge);
						}
						if(serviceTaskId_lt!=null){
                        	queryMapReturn.put("serviceTaskId_lt", serviceTaskId_lt);
						}
						if(serviceTaskId_le!=null){
                        	queryMapReturn.put("serviceTaskId_le", serviceTaskId_le);
						}
						if(serviceTaskId_in!=null){
                        	queryMapReturn.put("serviceTaskId_in", serviceTaskId_in);
						}
						if(serviceTaskId!=null){
                        	queryMapReturn.put("serviceTaskId", serviceTaskId);
						}		
																		
																														String delServiceTask = (String)contentreq.get("delServiceTask");
						if("true".equals(delServiceTask)){
							delServiceTaskReturn = true;
						}
																																																String delEmployee = (String)contentreq.get("delEmployee");
						if("true".equals(delEmployee)){
							delEmployeeReturn = true;
						}
																													}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (serviceEmployeeReturn != null) {
				parseMap.put("serviceEmployee", serviceEmployeeReturn);
			}
			if (serviceEmployeeListReturn != null && serviceEmployeeListReturn.size() > 0) {
				parseMap.put("serviceEmployeeList", serviceEmployeeListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}	
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}		
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}
			
			
															if (serviceTaskShowReturn != null) {
				parseMap.put("serviceTaskShow", serviceTaskShowReturn);
			}
			if (delServiceTaskReturn != null) {
				parseMap.put("delServiceTask", delServiceTaskReturn);
			}
																								if (employeeShowReturn != null) {
				parseMap.put("employeeShow", employeeShowReturn);
			}
			if (delEmployeeReturn != null) {
				parseMap.put("delEmployee", delEmployeeReturn);
			}
															
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command,String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
