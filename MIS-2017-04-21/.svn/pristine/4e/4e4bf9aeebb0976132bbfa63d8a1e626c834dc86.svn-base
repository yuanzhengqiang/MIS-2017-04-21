package fsk.parse.sore;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.sore.SoreEntity;




import com.framework.system.util.JsonUtil;
import com.framework.system.db.query.OrderVO;
 /**   
 * @Title: Parse
 * @Description: 压疮风险评估解析器
 * @author feng.gu
 * @date 2016-07-19 11:09:14
 * @version V1.0   
 *
 */
public class SoreParse {
	private static Logger logger = Logger.getLogger(SoreParse.class);
	private static SoreParse soreParse;

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static SoreParse getInstance() {
		if (soreParse == null) {
			soreParse = new SoreParse();
		}
		return soreParse;
	}

	public Map<String, Object> parse(int type, String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command,reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command,reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			SoreEntity soreReturn = null;
			List<SoreEntity> soreListReturn = null;
			Integer idReturn = null;			
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;
			
						
			//json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject)reqParams.get("content");
			if ("ADD_SORE_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				soreReturn = new SoreEntity();
				if(true){
					if(contentreq!=null){
												    						    Integer id = (Integer)contentreq.get("id");
	                		if(id!=null){
			                	soreReturn.setId(id);
			                }
						    												    						    String countPoint = (String)contentreq.get("countPoint");
	                		if(countPoint!=null){
			                	soreReturn.setCountPoint(countPoint);
			                }
						    												    						    String des = (String)contentreq.get("des");
	                		if(des!=null){
			                	soreReturn.setDes(des);
			                }
						    												    						    Integer status = (Integer)contentreq.get("status");
	                		if(status!=null){
			                	soreReturn.setStatus(status);
			                }
						    											}					
				}
							} else if ("QUERY_SORE_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");
					        					}	
				}
			} else if ("QUERY_SORE_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																																String countPoint_like = (String)contentreq.get("countPoint_like");
							String countPoint_isNull = (String)contentreq.get("countPoint_isNull");
							String countPoint_isNotNull = (String)contentreq.get("countPoint_isNotNull");
							String countPoint_in = (String)contentreq.get("countPoint_in");
							String countPoint = (String)contentreq.get("countPoint");
							if(countPoint_like!=null){
	                        	queryMapReturn.put("countPoint_like", countPoint_like);
							}
							if(countPoint_isNull!=null){
	                        	queryMapReturn.put("countPoint_isNull", countPoint_isNull);
							}
							if(countPoint_isNotNull!=null){
	                        	queryMapReturn.put("countPoint_isNotNull", countPoint_isNotNull);
							}
							if(countPoint_in!=null){
	                        	queryMapReturn.put("countPoint_in", countPoint_in);
							}
							if(countPoint!=null){
	                        	queryMapReturn.put("countPoint", countPoint);
							}						           
																																							String des_like = (String)contentreq.get("des_like");
							String des_isNull = (String)contentreq.get("des_isNull");
							String des_isNotNull = (String)contentreq.get("des_isNotNull");
							String des_in = (String)contentreq.get("des_in");
							String des = (String)contentreq.get("des");
							if(des_like!=null){
	                        	queryMapReturn.put("des_like", des_like);
							}
							if(des_isNull!=null){
	                        	queryMapReturn.put("des_isNull", des_isNull);
							}
							if(des_isNotNull!=null){
	                        	queryMapReturn.put("des_isNotNull", des_isNotNull);
							}
							if(des_in!=null){
	                        	queryMapReturn.put("des_in", des_in);
							}
							if(des!=null){
	                        	queryMapReturn.put("des", des);
							}						           
																															Integer status_gt = (Integer)contentreq.get("status_gt");
						Integer status_ge = (Integer)contentreq.get("status_ge");
						Integer status_lt = (Integer)contentreq.get("status_lt");
						Integer status_le = (Integer)contentreq.get("status_le");
						String status_in = (String)contentreq.get("status_in");
						Integer status = (Integer)contentreq.get("status");
                        if(status_gt!=null){
                        	queryMapReturn.put("status_gt", status_gt);
						}
						if(status_ge!=null){
                        	queryMapReturn.put("status_ge", status_ge);
						}
						if(status_lt!=null){
                        	queryMapReturn.put("status_lt", status_lt);
						}
						if(status_le!=null){
                        	queryMapReturn.put("status_le", status_le);
						}
						if(status_in!=null){
                        	queryMapReturn.put("status_in", status_in);
						}
						if(status!=null){
                        	queryMapReturn.put("status", status);
						}		
															
						    							
												}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				    Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray)orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for(int i=0;i<order.size();i++){
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String)obj.get("column"));
							orderVO.setOrderType((String)obj.get("type"));
							orderListReturn.add(orderVO);
						}						
					}
				}
			} else if ("DEL_SORE_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");	
						    					}	
				}
			} else if ("DEL_SORE_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																																String countPoint_like = (String)contentreq.get("countPoint_like");
							String countPoint_isNull = (String)contentreq.get("countPoint_isNull");
							String countPoint_isNotNull = (String)contentreq.get("countPoint_isNotNull");
							String countPoint_in = (String)contentreq.get("countPoint_in");
							String countPoint = (String)contentreq.get("countPoint");
							if(countPoint_like!=null){
	                        	queryMapReturn.put("countPoint_like", countPoint_like);
							}
							if(countPoint_isNull!=null){
	                        	queryMapReturn.put("countPoint_isNull", countPoint_isNull);
							}
							if(countPoint_isNotNull!=null){
	                        	queryMapReturn.put("countPoint_isNotNull", countPoint_isNotNull);
							}
							if(countPoint_in!=null){
	                        	queryMapReturn.put("countPoint_in", countPoint_in);
							}
							if(countPoint!=null){
	                        	queryMapReturn.put("countPoint", countPoint);
							}						           
																																							String des_like = (String)contentreq.get("des_like");
							String des_isNull = (String)contentreq.get("des_isNull");
							String des_isNotNull = (String)contentreq.get("des_isNotNull");
							String des_in = (String)contentreq.get("des_in");
							String des = (String)contentreq.get("des");
							if(des_like!=null){
	                        	queryMapReturn.put("des_like", des_like);
							}
							if(des_isNull!=null){
	                        	queryMapReturn.put("des_isNull", des_isNull);
							}
							if(des_isNotNull!=null){
	                        	queryMapReturn.put("des_isNotNull", des_isNotNull);
							}
							if(des_in!=null){
	                        	queryMapReturn.put("des_in", des_in);
							}
							if(des!=null){
	                        	queryMapReturn.put("des", des);
							}						           
																															Integer status_gt = (Integer)contentreq.get("status_gt");
						Integer status_ge = (Integer)contentreq.get("status_ge");
						Integer status_lt = (Integer)contentreq.get("status_lt");
						Integer status_le = (Integer)contentreq.get("status_le");
						String status_in = (String)contentreq.get("status_in");
						Integer status = (Integer)contentreq.get("status");
                        if(status_gt!=null){
                        	queryMapReturn.put("status_gt", status_gt);
						}
						if(status_ge!=null){
                        	queryMapReturn.put("status_ge", status_ge);
						}
						if(status_lt!=null){
                        	queryMapReturn.put("status_lt", status_lt);
						}
						if(status_le!=null){
                        	queryMapReturn.put("status_le", status_le);
						}
						if(status_in!=null){
                        	queryMapReturn.put("status_in", status_in);
						}
						if(status!=null){
                        	queryMapReturn.put("status", status);
						}		
																		
											}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (soreReturn != null) {
				parseMap.put("sore", soreReturn);
			}
			if (soreListReturn != null && soreListReturn.size() > 0) {
				parseMap.put("soreList", soreListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}	
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}		
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}
			
			
						
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command,String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
