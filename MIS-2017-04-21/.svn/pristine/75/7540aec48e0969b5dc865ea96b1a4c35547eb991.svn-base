package fsk.controller;

import java.io.OutputStream;
import java.math.BigInteger;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


import org.apache.log4j.Logger;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.TextAlignment;
import org.apache.poi.xwpf.usermodel.UnderlinePatterns;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTc;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.STJc;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.STLineSpacingRule;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;

import com.framework.system.common.entity.dataDic.DataDicEntity;
import com.framework.system.common.service.dataDic.DataDicService;

import fsk.entity.older.OlderEntity;
import fsk.entity.olderAddress.OlderAddressEntity;
import fsk.enums.OlderAddress;
import fsk.service.older.OlderService;
import fsk.service.olderAddress.OlderAddressService;
import fsk.util.officeUtils.CustomXWPFDocument;
import fsk.util.officeUtils.OfficeUtil;

/**
 * @Description: 导出申请表单类
 * @author Administrator
 * 
 */
@RequestMapping("/export")
@Controller
public class ExportRequestListController {

	private static Logger logger = Logger
			.getLogger(ExportRequestListController.class);

	public static OfficeUtil ou = new OfficeUtil();

	/**
	 * @Description: 导出申请表单
	 * @param olderId
	 *            老人id
	 */
	@RequestMapping(params = "exportdoc")
	void exportWord(String olderId, HttpServletRequest request,
			HttpServletResponse response) {
		createDocument(olderId, request, response);
	}

	/**
	 * @Description: 生成文档
	 * @param olderId
	 *            老人的id
	 * @param request
	 * @param response
	 */
	void createDocument(final String olderId, HttpServletRequest request,
			HttpServletResponse response) {
		// 获得老人的基本信息
		int olderid = Integer.parseInt(olderId);
		OlderEntity olderEntity = getOlderBaseInfo(olderid);
		// 创建新的空白文档
		CustomXWPFDocument document = new CustomXWPFDocument();
		// 设置页边距
		ou.setDocumentMargin(document, "1797", "1440", "1797", "1440");
		// 添加文本信息
		try {
			addTextParagraph(document, olderEntity);
		} catch (Exception e) {
			logger.error("文本信息添加失败: " + e);
			e.printStackTrace();
		}
		
		response.setContentType("application/octet-stream");
		response.addHeader("Content-Disposition", "attachment; filename="
				+ System.currentTimeMillis() + ".doc");
		try {
			OutputStream os = response.getOutputStream();
			document.write(os);
			os.flush();
			os.close();
		} catch (Exception e) {
			e.printStackTrace();
			logger.error("文档保存失败");
		}
	}

	/**
	 * @Description: 添加文本信息
	 * @param document
	 *            文档
	 * @throws Exception
	 */
	void addTextParagraph(final CustomXWPFDocument document, OlderEntity olderEntity)
			throws Exception {
		XWPFParagraph p = document.createParagraph();
		ou.setTextFontInfo(p, false, false, "普陀区老年照护统一需求评估", "黑体", "000000",
				"小二", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "及长期护理保险护理申请表", "黑体", "000000",
				"小二", true, null, false, false, null, 0, null);
		// 设置间距信息
		ou.setParagraphSpacingInfo(p, true, "0", "0", "0", "0", true, "240",
				STLineSpacingRule.Enum.forString("auto"));
		// 设置居中对齐
		ou.setParagraphAlignInfo(p, ParagraphAlignment.CENTER,
				TextAlignment.CENTER);

		/* ---------------- 导出文档：一、参保人员基本情况: ---------------- */
		p = document.createParagraph();
		ou.setTextFontInfo(p, false, false, "一、参保人员基本情况:", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		// 设置间距信息
		ou.setParagraphSpacingInfo(p, true, "0", "0", "100", null, true, "240",
				STLineSpacingRule.Enum.forString("auto"));
		ou.setParagraphAlignInfo(p, ParagraphAlignment.LEFT,
				TextAlignment.CENTER);

		p = document.createParagraph();
		ou.setTextFontInfo(p, false, false, "1、姓名 ", "仿宋_GB2312", "000000", "小四",
				false, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, " " + (olderEntity.getName() != null ? olderEntity.getName() : "    ")
				+ " ", "仿宋_GB2312", "000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "2、性别 ", "仿宋_GB2312", "000000", "小四",
				false, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, " " + (olderEntity.getGender() != null ? olderEntity.getGender() : "    ")
				+ " ", "仿宋_GB2312", "000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "3、年龄 ", "仿宋_GB2312", "000000", "小四",
				false, null, false, false, null, 0, null);
		Integer age = getOlderAge(olderEntity);
		ou.setTextFontInfo(p, false, false, " " + (age != null ? age.intValue() : "    ") + " ", "仿宋_GB2312",
				"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		
		ou.setTextFontInfo(p, false, true, "4、婚姻（申请政府补贴居家养老必填）: " +
				(olderEntity != null ?
				" " + (olderEntity.getMaritalStatus() != null ? olderEntity.getMaritalStatus() : "    ") + " "
				: "    "),
				"仿宋_GB2312",
				"000000", "小四", false, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, true, "5、身份证号                              " +
				(olderEntity != null ?
				" " + (olderEntity.getIdnumber() != null ? olderEntity.getIdnumber() : "    ") + " "
				: "    "),
				"仿宋_GB2312",
				"000000", "小四", false, null, false, false, null, 0, null);
		// 添加身份证号
		XWPFTable table = document.createTable(1, 18);
		setCredentialsInfo(document, olderEntity.getIdnumber(), table);
		
		
		ou.setTextFontInfo(p, false, true, "   社保卡号（医保卡号）" +
				(olderEntity != null ? " " 
				+ (olderEntity.getSocialSecurityNumber() != null ? olderEntity.getSocialSecurityNumber() : "    ")
				+ " " : "    "),
				"仿宋_GB2312",
				"000000", "小四", false, null, false, false, null, 0, null);
		// 添加社保卡号
		setCredentialsInfo(document, olderEntity.getSocialSecurityNumber(), table);
		
		ou.setTextFontInfo(p, false, true, "6、户籍地址：", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		setAddrInfo(p, olderEntity, OlderAddress.HouseAddr);
		ou.setTextFontInfo(p, false, true, "7、居住地址：", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		setAddrInfo(p, olderEntity, OlderAddress.LiveAddr);
		ou.setTextFontInfo(p, false, true, "8、收信地址：", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		setAddrInfo(p, olderEntity, OlderAddress.LetterAddr);

		ou.setTextFontInfo(p, false, true, "9、联系方式: ", "仿宋_GB2312", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "固定电话 ", "仿宋_GB2312", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, olderEntity.getHomeTel(), "仿宋_GB2312", "000000",
				"小四", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "手机号码 ", "仿宋_GB2312", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, olderEntity.getMobileTel(), "仿宋_GB2312", "000000",
				"小四", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		
		// 二、生活状况
		p = document.createParagraph();
		ou.setTextFontInfo(p, false, false, "二、生活状况:", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, olderEntity.getLivingCondition(), "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setParagraphSpacingInfo(p, true, "0", "0", "0", "0", true, "240", STLineSpacingRule.Enum.forString("auto"));
		ou.setParagraphAlignInfo(p, ParagraphAlignment.LEFT, TextAlignment.AUTO);
		
		// 三、代办人信息:
		p = document.createParagraph();
		ou.setTextFontInfo(p, false, true, "三、代办人信息:", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "1、代办人姓名", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "      ", "黑体", "000000",
				"小四", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "2、与申请人关系", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "      ", "黑体", "000000",
				"小四", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, true, "3、身份证号", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setParagraphSpacingInfo(p, true, "0", "0", "0", "0", true, "240", STLineSpacingRule.Enum.forString("auto"));
		ou.setParagraphAlignInfo(p, ParagraphAlignment.LEFT, TextAlignment.AUTO);
		document.createTable(1, 18);
		ou.setTableWidth(table, "20");
		ou.setTextFontInfo(p, false, true, "4、联系电话（固定电话/手机号码）", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "           /           ", "黑体", "000000",
				"小四", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "四、服务申请项目：①政府补贴居家养老 ②机构养老 ③护理院 ④长护险",
				"黑体", "000000", "小四", true, null, false, false, null, 0, null);
		ou.setParagraphSpacingInfo(p, true, "0", "0", "0", "0", true, "240", STLineSpacingRule.Enum.forString("auto"));
		ou.setParagraphAlignInfo(p, ParagraphAlignment.LEFT, TextAlignment.AUTO);
		// 五、评估及护理：
		document.createTable(1, 18);
		ou.setTextFontInfo(p, false, false, "五、评估及护理：", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false,
				"1、评估类型：①初次评估   ②复核评估   ③状态评估   ④期末评估 ⑤绿色通道（□骨折 □脑血管意外 □帕金森病）",
				"黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "2、护理机构名称：", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "          ", "黑体", "000000",
				"小四", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "护理机构电话：", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "          ", "黑体", "000000",
				"小四", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setParagraphSpacingInfo(p, true, "0", "0", "0", "0", true, "240", STLineSpacingRule.Enum.forString("auto"));
		ou.setParagraphAlignInfo(p, ParagraphAlignment.LEFT, TextAlignment.AUTO);
		// 六、提交材料（政府补贴居家养老服务申请须同时提交④⑤⑥项材料）：
		document.createTable(1, 18);
		ou.setTextFontInfo(p, false, true, "六、提交材料（政府补贴居家养老服务申请须同时提交④⑤⑥项材料）：", "黑体", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, true, "①身份证 ②代办人身份证 ③老红军及1-6级伤残军人提供相关证明材料", "仿宋_GB2312", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, true, "④户口簿 ⑤养老金收入证明 ⑥承诺及授权书", "仿宋_GB2312", "000000",
				"小四", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, true, "请申请人核对信息，如无异议，请签字确认：", "仿宋_GB2312", "000000",
				"小三", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "            ", "仿宋_GB2312", "000000",
				"小三", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setParagraphSpacingInfo(p, true, "0", "0", "0", "0", true, "240", STLineSpacingRule.Enum.forString("auto"));
		ou.setParagraphAlignInfo(p, ParagraphAlignment.LEFT, TextAlignment.AUTO);
		
		document.createTable(1, 18);
		ou.setTextFontInfo(p, false, true, "申请日期：", "仿宋_GB2312", "000000",
				"小三", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "       ", "仿宋_GB2312", "000000",
				"小三", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "年", "仿宋_GB2312", "000000",
				"小三", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "       ", "仿宋_GB2312", "000000",
				"小三", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "月", "仿宋_GB2312", "000000",
				"小三", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "       ", "仿宋_GB2312", "000000",
				"小三", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "日", "仿宋_GB2312", "000000",
				"小三", true, null, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "       ", "仿宋_GB2312", "000000",
				"小三", true, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setParagraphSpacingInfo(p, true, "0", "0", "0", "0", true, "240", STLineSpacingRule.Enum.forString("auto"));
		ou.setParagraphAlignInfo(p, ParagraphAlignment.RIGHT, TextAlignment.AUTO);
	}

	/**
	 * @Description: 获得老人的基本信息实体
	 * @param olderid
	 * @return
	 */
	private OlderEntity getOlderBaseInfo(int olderid) {
		OlderEntity olderInfo = null;
		olderInfo = OlderService.getInstance().getById(olderid);
		return olderInfo;
	}

	/**
	 * @Description: 获得年龄
	 * @param older
	 * @return
	 */
	private Integer getOlderAge(final OlderEntity older) {
		String str_age = older.getBirthdate();
		if (str_age != null && str_age.length() > 0) {
			str_age = str_age.substring(0, 4);
			int int_age = Integer.parseInt(str_age);
			Date date = new Date();
			SimpleDateFormat sdf = new SimpleDateFormat("yyyy");
			String year = sdf.format(date);
			int int_year = Integer.parseInt(year);
			return int_year - int_age;
		} else {
			return null;
		}
	}
	
	/**
	 * @Description: 获得服务的区
	 * @param older
	 * @return
	 */
	private String getServiceArea(final OlderEntity older){
		String area = null;
		int areaId = older.getServiceAreaId();
		DataDicEntity entity = DataDicService.getInstance().getById(areaId);
		if (entity != null) {
			area = entity.getName();
		}
		return area;
	}
	
	/**
	 * @Description: 获得详细地址
	 * @param p
	 * @param olderEntity
	 * 老人的实体
	 * @param addrType
	 * 地址类型
	 */
	private void setAddrInfo(XWPFParagraph p, OlderEntity olderEntity, int addrType) {
		// 区
		String area = getServiceArea(olderEntity);
		ou.setTextFontInfo(p, false, true, (area != null ? area : "    ") + " ", "仿宋_GB2312", 
				"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "区", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		// 获得指定老人指定类型的地址
		Map<String, Object> queryMap = new HashMap<String, Object>();
		queryMap.put("id", olderEntity.getId());
		queryMap.put("addressTyep", addrType);
		List<OlderAddressEntity> list = OlderAddressService.getInstance().getListByCondition(queryMap);
		OlderAddressEntity olderAddr = null;
		if (list != null && list.size() > 0)
			olderAddr = list.get(0);
		// 街道
		ou.setTextFontInfo(p, false, false, 
				(olderAddr != null ?
						" " + (olderAddr.getStreet() != null ? olderAddr.getStreet() : "    ") + " "
						: "    "),
				"仿宋_GB2312", 
				"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "街道", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		// 居委/村
		ou.setTextFontInfo(p, false, false,
				(olderAddr != null ?
						" " + (olderAddr.getCommitteeVillage() != null ? olderAddr.getCommitteeVillage(): "    ") + " "
						: "    "),
				"仿宋_GB2312", 
				"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "居委/村", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		// 路
		ou.setTextFontInfo(p, false, false,
				(olderAddr != null ?
						" " + (olderAddr.getRoad() != null ? olderAddr.getRoad() : "    ") + " "
						: "    "),
				"仿宋_GB2312", 
				"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "路", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		// 弄
		ou.setTextFontInfo(p, false, false,
				(olderAddr != null ?
						" " + (olderAddr.getLane() != null ? olderAddr.getLane() : "    ") + " "
						: "    "),
						"仿宋_GB2312", 
						"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "弄", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		// 号
		ou.setTextFontInfo(p, false, false,
				(olderAddr != null ?
						" " + (olderAddr.getNumber() != null ? olderAddr.getNumber() : "    ") + " "
						: "    "),
						"仿宋_GB2312", 
						"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "号", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		// 室
		ou.setTextFontInfo(p, false, false,
				(olderAddr != null ?
						" " + (olderAddr.getRoom() != null ? olderAddr.getRoom() : "    ") + " "
						: "    "),
						"仿宋_GB2312", 
						"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
		ou.setTextFontInfo(p, false, false, "室", "仿宋_GB2312", 
				"000000", "小四", false, null, false, false, null, 0, null);
		
		// 居住地址/收信地址有邮编
		if (addrType != OlderAddress.HouseAddr) {
			ou.setTextFontInfo(p, false, false,
					(olderAddr != null ?
							" " + (olderAddr.getZipCode() != null ? olderAddr.getZipCode() : "    ") + " "
							: "    "),
							"仿宋_GB2312", 
							"000000", "小四", false, UnderlinePatterns.SINGLE, false, false, null, 0, null);
			ou.setTextFontInfo(p, false, false, "邮编", "仿宋_GB2312", 
					"000000", "小四", false, null, false, false, null, 0, null);
		}
	}

	
	void setCredentialsInfo(CustomXWPFDocument document, String number, XWPFTable table) {
		ou.setTableWidth(table, "20");
		List<String> columnList = new ArrayList<String>();
		if (number != null) {
			if (!number.trim().equals("")) {
				for (int index = 0; index < number.length(); index++) {
					columnList.add(number.charAt(index) + " ");
				}
			}
		}
		XWPFTableRow firstRow = table.getRow(0);
		firstRow.setHeight(20);
		XWPFTableCell tableCell = null;
		if (columnList != null && columnList.size() > 0) {
			for (int index = 0; index < columnList.size(); index++) {
				tableCell = firstRow.getCell(index);
				if (tableCell != null) {
					setCellText(tableCell, String.valueOf(number.charAt(index)) + "", "CCCCCC", 1600);
				}
			}
		}
	}
	
	// 设置表格内容
	public void setCellText(XWPFTableCell cell, String text, String bgcolor, int width) {
		CTTc cttc = cell.getCTTc();
		CTTcPr ctPr = cttc.addNewTcPr();
		CTShd ctshd = ctPr.addNewShd();
		ctPr.addNewTcW().setW(BigInteger.valueOf(width));
		ctshd.setFill(bgcolor);
		ctPr.addNewVAlign().setVal(STVerticalJc.CENTER);
		cttc.getPList().get(0).addNewPPr().addNewJc().setVal(STJc.CENTER);
		cell.setText(text);
	}
}
