package fsk.service.recovery;

import java.math.BigDecimal;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import org.apache.log4j.Logger;


import fsk.entity.skinLesions.SkinLesionsEntity;

import fsk.entity.recovery.RecoveryEntity;
import com.framework.system.db.connect.DbUtils;
import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.PageList;
import com.framework.system.db.query.QueryCondition;
import com.framework.system.db.query.OrderByCondition;
import com.framework.system.db.query.OrderVO;
import com.framework.system.db.transaction.TransactionManager;
import com.framework.system.util.StringUtil;



/**   
 * @Title: Service
 * @Description: 康复评估服务类
 * @author feng.gu
 * @date 2016-07-12 15:06:34
 * @version V1.0   
 *
 */
public class RecoveryService {
	   private static Logger logger = Logger.getLogger(RecoveryService.class);
	   private DBManager dbManager = DBManager.getInstance();
    		
	   private static RecoveryService recoveryService;
	   /**
	    * 获取实例	
	    * @return
	    */
	   public static RecoveryService getInstance(){
		if(recoveryService==null){
			recoveryService = new RecoveryService();
		}
		return recoveryService;
	   }
	                 	                 				     				     				     				     
				     	 
	   /**
		 * 保存记录
		 * 
		 * @param obj
		 */
		public boolean save(RecoveryEntity recovery) {			
			boolean result =false;
			if(recovery!=null){
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					 tx.beginTransaction();					 					 
					 					 				     					     if(recovery.getSkinLesionsList()!=null&&recovery.getSkinLesionsList().size()>0){						   
			    	            //关联信息保存
			    	            if(recovery.getId()==null){	  
			    	                dbManager.saveNoTransaction(recovery); 
			    	            } 	           
							    for(SkinLesionsEntity skinLesionsEntity:recovery.getSkinLesionsList()){
							    	skinLesionsEntity.setRecoveryId(recovery.getId());
							    	dbManager.saveNoTransaction(skinLesionsEntity);
							    }
						 }
				     				     				     				     					 					 result=dbManager.saveNoTransaction(recovery);	
					 tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {				    
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  			
			}	
			return result;
		}
		
		/**
		 * 批量保存记录
		 * 
		 * @param list
		 */
		public boolean saveList(List<RecoveryEntity> recoveryList) {
			boolean result = false;
			if (recoveryList != null && recoveryList.size() > 0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 
					for(RecoveryEntity recovery:recoveryList){
						if(recovery!=null){												  								 
								 									 					                 					                     //关联信息保存
						                 if(recovery.getSkinLesionsList()!=null&&recovery.getSkinLesionsList().size()>0){										 		    	           
										 if(recovery.getId()==null){
										     dbManager.saveNoTransaction(recovery);
										 }
										 for(SkinLesionsEntity skinLesionsEntity:recovery.getSkinLesionsList()){
										     skinLesionsEntity.setRecoveryId(recovery.getId());
										     dbManager.saveNoTransaction(skinLesionsEntity);
										 }
									     }
								     								     								     								     								 								 result=dbManager.saveNoTransaction(recovery);								 			
						}	
					}
				    tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
				/**
		 * 根据id读取记录
		 * 
		 * @param id
		 *            主键
		 * @param obj
		 */
		public RecoveryEntity getById(Integer id) {
			RecoveryEntity obj = null;
			if (id != null) {
				obj = (RecoveryEntity) dbManager.getById(id, RecoveryEntity.class);			
			}
			return obj;
		}
				
		
		/**
		 * 根据id读取记录
		 * @param id 主键
		 		             	                 	     * @param skinLesionsListShow 是否查询关联信息
				     				     				     				     		 		 * @param obj
		 */
		public RecoveryEntity getById(Integer id,Boolean skinLesionsListShow) {
			RecoveryEntity obj = null;
			if (id!=null) {
				obj = (RecoveryEntity)dbManager.getById(id, RecoveryEntity.class);
									 	                 	                    //查询关联内容
						if(skinLesionsListShow!=null&&skinLesionsListShow.booleanValue()&&obj!=null&&obj.getId()!=null&&obj.getId()>0){
							List<Object> list = dbManager.searchListByColumn(SkinLesionsEntity.class, SkinLesionsEntity.RECOVERY_ID, String.valueOf(id));
			            	  if(list!=null&&list.size()>0){
			            		  List<SkinLesionsEntity> skinLesionsList= new ArrayList<SkinLesionsEntity>();
			            		  for(Object o:list){
			            			  skinLesionsList.add((SkinLesionsEntity)o);
			            		  }
			            		  obj.setSkinLesionsList(skinLesionsList);          		  
			            	  }	            	  	  
						}
				     				     				     				     				   			}
			return obj;
		}
		
		/**
		 * 根据条件查询记录集合（不分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合		
		 * @return
		 */
		public List<RecoveryEntity> getListByCondition(Map<String,Object> queryMap) {
		    List<RecoveryEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																					Object recoveryTimeForTheFirstTime_gt=queryMap.get("recoveryTimeForTheFirstTime_gt");
					Object recoveryTimeForTheFirstTime_ge=queryMap.get("recoveryTimeForTheFirstTime_ge");
					Object recoveryTimeForTheFirstTime_lt=queryMap.get("recoveryTimeForTheFirstTime_lt");
					Object recoveryTimeForTheFirstTime_le=queryMap.get("recoveryTimeForTheFirstTime_le");
																					Object bloodPressure1=queryMap.get("bloodPressure1");
					Object bloodPressure1_gt=queryMap.get("bloodPressure1_gt");
					Object bloodPressure1_ge=queryMap.get("bloodPressure1_ge");
					Object bloodPressure1_lt=queryMap.get("bloodPressure1_lt");
					Object bloodPressure1_le=queryMap.get("bloodPressure1_le");
					Object bloodPressure1_in=queryMap.get("bloodPressure1_in");
																Object bloodPressure2=queryMap.get("bloodPressure2");
					Object bloodPressure2_gt=queryMap.get("bloodPressure2_gt");
					Object bloodPressure2_ge=queryMap.get("bloodPressure2_ge");
					Object bloodPressure2_lt=queryMap.get("bloodPressure2_lt");
					Object bloodPressure2_le=queryMap.get("bloodPressure2_le");
					Object bloodPressure2_in=queryMap.get("bloodPressure2_in");
																Object pulse=queryMap.get("pulse");
					Object pulse_gt=queryMap.get("pulse_gt");
					Object pulse_ge=queryMap.get("pulse_ge");
					Object pulse_lt=queryMap.get("pulse_lt");
					Object pulse_le=queryMap.get("pulse_le");
					Object pulse_in=queryMap.get("pulse_in");
																Object heartRate=queryMap.get("heartRate");
					Object heartRate_gt=queryMap.get("heartRate_gt");
					Object heartRate_ge=queryMap.get("heartRate_ge");
					Object heartRate_lt=queryMap.get("heartRate_lt");
					Object heartRate_le=queryMap.get("heartRate_le");
					Object heartRate_in=queryMap.get("heartRate_in");
																					Object rhythm=queryMap.get("rhythm");
					Object rhythm_like=queryMap.get("rhythm_like");
					Object rhythm_isNull=queryMap.get("rhythm_isNull");
					Object rhythm_isNotNull=queryMap.get("rhythm_isNotNull");
					Object rhythm_in=queryMap.get("rhythm_in");
																					Object breathing=queryMap.get("breathing");
					Object breathing_gt=queryMap.get("breathing_gt");
					Object breathing_ge=queryMap.get("breathing_ge");
					Object breathing_lt=queryMap.get("breathing_lt");
					Object breathing_le=queryMap.get("breathing_le");
					Object breathing_in=queryMap.get("breathing_in");
																					Object skinLesions=queryMap.get("skinLesions");
					Object skinLesions_like=queryMap.get("skinLesions_like");
					Object skinLesions_isNull=queryMap.get("skinLesions_isNull");
					Object skinLesions_isNotNull=queryMap.get("skinLesions_isNotNull");
					Object skinLesions_in=queryMap.get("skinLesions_in");
																										Object stateOfConsciousness=queryMap.get("stateOfConsciousness");
					Object stateOfConsciousness_like=queryMap.get("stateOfConsciousness_like");
					Object stateOfConsciousness_isNull=queryMap.get("stateOfConsciousness_isNull");
					Object stateOfConsciousness_isNotNull=queryMap.get("stateOfConsciousness_isNotNull");
					Object stateOfConsciousness_in=queryMap.get("stateOfConsciousness_in");
																										Object languageFunction=queryMap.get("languageFunction");
					Object languageFunction_like=queryMap.get("languageFunction_like");
					Object languageFunction_isNull=queryMap.get("languageFunction_isNull");
					Object languageFunction_isNotNull=queryMap.get("languageFunction_isNotNull");
					Object languageFunction_in=queryMap.get("languageFunction_in");
																										Object bilateralNormal=queryMap.get("bilateralNormal");
					Object bilateralNormal_like=queryMap.get("bilateralNormal_like");
					Object bilateralNormal_isNull=queryMap.get("bilateralNormal_isNull");
					Object bilateralNormal_isNotNull=queryMap.get("bilateralNormal_isNotNull");
					Object bilateralNormal_in=queryMap.get("bilateralNormal_in");
																										Object dysfunction=queryMap.get("dysfunction");
					Object dysfunction_like=queryMap.get("dysfunction_like");
					Object dysfunction_isNull=queryMap.get("dysfunction_isNull");
					Object dysfunction_isNotNull=queryMap.get("dysfunction_isNotNull");
					Object dysfunction_in=queryMap.get("dysfunction_in");
																										Object handedness=queryMap.get("handedness");
					Object handedness_like=queryMap.get("handedness_like");
					Object handedness_isNull=queryMap.get("handedness_isNull");
					Object handedness_isNotNull=queryMap.get("handedness_isNotNull");
					Object handedness_in=queryMap.get("handedness_in");
																										Object limitedJointMovementOrFracture=queryMap.get("limitedJointMovementOrFracture");
					Object limitedJointMovementOrFracture_like=queryMap.get("limitedJointMovementOrFracture_like");
					Object limitedJointMovementOrFracture_isNull=queryMap.get("limitedJointMovementOrFracture_isNull");
					Object limitedJointMovementOrFracture_isNotNull=queryMap.get("limitedJointMovementOrFracture_isNotNull");
					Object limitedJointMovementOrFracture_in=queryMap.get("limitedJointMovementOrFracture_in");
																										Object muscleToneUpperLimb=queryMap.get("muscleToneUpperLimb");
					Object muscleToneUpperLimb_like=queryMap.get("muscleToneUpperLimb_like");
					Object muscleToneUpperLimb_isNull=queryMap.get("muscleToneUpperLimb_isNull");
					Object muscleToneUpperLimb_isNotNull=queryMap.get("muscleToneUpperLimb_isNotNull");
					Object muscleToneUpperLimb_in=queryMap.get("muscleToneUpperLimb_in");
																										Object muscleToneLowerLimb=queryMap.get("muscleToneLowerLimb");
					Object muscleToneLowerLimb_like=queryMap.get("muscleToneLowerLimb_like");
					Object muscleToneLowerLimb_isNull=queryMap.get("muscleToneLowerLimb_isNull");
					Object muscleToneLowerLimb_isNotNull=queryMap.get("muscleToneLowerLimb_isNotNull");
					Object muscleToneLowerLimb_in=queryMap.get("muscleToneLowerLimb_in");
																										Object theBalanceFunctionOfTheSeat=queryMap.get("theBalanceFunctionOfTheSeat");
					Object theBalanceFunctionOfTheSeat_like=queryMap.get("theBalanceFunctionOfTheSeat_like");
					Object theBalanceFunctionOfTheSeat_isNull=queryMap.get("theBalanceFunctionOfTheSeat_isNull");
					Object theBalanceFunctionOfTheSeat_isNotNull=queryMap.get("theBalanceFunctionOfTheSeat_isNotNull");
					Object theBalanceFunctionOfTheSeat_in=queryMap.get("theBalanceFunctionOfTheSeat_in");
																										Object balanceFunction=queryMap.get("balanceFunction");
					Object balanceFunction_like=queryMap.get("balanceFunction_like");
					Object balanceFunction_isNull=queryMap.get("balanceFunction_isNull");
					Object balanceFunction_isNotNull=queryMap.get("balanceFunction_isNotNull");
					Object balanceFunction_in=queryMap.get("balanceFunction_in");
																										Object upperLimbMuscleStrength=queryMap.get("upperLimbMuscleStrength");
					Object upperLimbMuscleStrength_like=queryMap.get("upperLimbMuscleStrength_like");
					Object upperLimbMuscleStrength_isNull=queryMap.get("upperLimbMuscleStrength_isNull");
					Object upperLimbMuscleStrength_isNotNull=queryMap.get("upperLimbMuscleStrength_isNotNull");
					Object upperLimbMuscleStrength_in=queryMap.get("upperLimbMuscleStrength_in");
																										Object muscleStrengthOfLowerLimb=queryMap.get("muscleStrengthOfLowerLimb");
					Object muscleStrengthOfLowerLimb_like=queryMap.get("muscleStrengthOfLowerLimb_like");
					Object muscleStrengthOfLowerLimb_isNull=queryMap.get("muscleStrengthOfLowerLimb_isNull");
					Object muscleStrengthOfLowerLimb_isNotNull=queryMap.get("muscleStrengthOfLowerLimb_isNotNull");
					Object muscleStrengthOfLowerLimb_in=queryMap.get("muscleStrengthOfLowerLimb_in");
																										Object reflectionDeepReflection=queryMap.get("reflectionDeepReflection");
					Object reflectionDeepReflection_like=queryMap.get("reflectionDeepReflection_like");
					Object reflectionDeepReflection_isNull=queryMap.get("reflectionDeepReflection_isNull");
					Object reflectionDeepReflection_isNotNull=queryMap.get("reflectionDeepReflection_isNotNull");
					Object reflectionDeepReflection_in=queryMap.get("reflectionDeepReflection_in");
																										Object reflexShallowReflection=queryMap.get("reflexShallowReflection");
					Object reflexShallowReflection_like=queryMap.get("reflexShallowReflection_like");
					Object reflexShallowReflection_isNull=queryMap.get("reflexShallowReflection_isNull");
					Object reflexShallowReflection_isNotNull=queryMap.get("reflexShallowReflection_isNotNull");
					Object reflexShallowReflection_in=queryMap.get("reflexShallowReflection_in");
																										Object reflexPathologicalReflex=queryMap.get("reflexPathologicalReflex");
					Object reflexPathologicalReflex_like=queryMap.get("reflexPathologicalReflex_like");
					Object reflexPathologicalReflex_isNull=queryMap.get("reflexPathologicalReflex_isNull");
					Object reflexPathologicalReflex_isNotNull=queryMap.get("reflexPathologicalReflex_isNotNull");
					Object reflexPathologicalReflex_in=queryMap.get("reflexPathologicalReflex_in");
																										Object walkingAbilityWalkingAlone=queryMap.get("walkingAbilityWalkingAlone");
					Object walkingAbilityWalkingAlone_like=queryMap.get("walkingAbilityWalkingAlone_like");
					Object walkingAbilityWalkingAlone_isNull=queryMap.get("walkingAbilityWalkingAlone_isNull");
					Object walkingAbilityWalkingAlone_isNotNull=queryMap.get("walkingAbilityWalkingAlone_isNotNull");
					Object walkingAbilityWalkingAlone_in=queryMap.get("walkingAbilityWalkingAlone_in");
																										Object withTheSupportOfAssistiveWalking=queryMap.get("withTheSupportOfAssistiveWalking");
					Object withTheSupportOfAssistiveWalking_like=queryMap.get("withTheSupportOfAssistiveWalking_like");
					Object withTheSupportOfAssistiveWalking_isNull=queryMap.get("withTheSupportOfAssistiveWalking_isNull");
					Object withTheSupportOfAssistiveWalking_isNotNull=queryMap.get("withTheSupportOfAssistiveWalking_isNotNull");
					Object withTheSupportOfAssistiveWalking_in=queryMap.get("withTheSupportOfAssistiveWalking_in");
																										Object canNotWalk=queryMap.get("canNotWalk");
					Object canNotWalk_like=queryMap.get("canNotWalk_like");
					Object canNotWalk_isNull=queryMap.get("canNotWalk_isNull");
					Object canNotWalk_isNotNull=queryMap.get("canNotWalk_isNotNull");
					Object canNotWalk_in=queryMap.get("canNotWalk_in");
																										Object coordinatedFingerNoseTest=queryMap.get("coordinatedFingerNoseTest");
					Object coordinatedFingerNoseTest_like=queryMap.get("coordinatedFingerNoseTest_like");
					Object coordinatedFingerNoseTest_isNull=queryMap.get("coordinatedFingerNoseTest_isNull");
					Object coordinatedFingerNoseTest_isNotNull=queryMap.get("coordinatedFingerNoseTest_isNotNull");
					Object coordinatedFingerNoseTest_in=queryMap.get("coordinatedFingerNoseTest_in");
																										Object coordinatedStandShaking=queryMap.get("coordinatedStandShaking");
					Object coordinatedStandShaking_like=queryMap.get("coordinatedStandShaking_like");
					Object coordinatedStandShaking_isNull=queryMap.get("coordinatedStandShaking_isNull");
					Object coordinatedStandShaking_isNotNull=queryMap.get("coordinatedStandShaking_isNotNull");
					Object coordinatedStandShaking_in=queryMap.get("coordinatedStandShaking_in");
																										Object coordinatedTremor=queryMap.get("coordinatedTremor");
					Object coordinatedTremor_like=queryMap.get("coordinatedTremor_like");
					Object coordinatedTremor_isNull=queryMap.get("coordinatedTremor_isNull");
					Object coordinatedTremor_isNotNull=queryMap.get("coordinatedTremor_isNotNull");
					Object coordinatedTremor_in=queryMap.get("coordinatedTremor_in");
																										Object coordinationAndKneeTibiaTest=queryMap.get("coordinationAndKneeTibiaTest");
					Object coordinationAndKneeTibiaTest_like=queryMap.get("coordinationAndKneeTibiaTest_like");
					Object coordinationAndKneeTibiaTest_isNull=queryMap.get("coordinationAndKneeTibiaTest_isNull");
					Object coordinationAndKneeTibiaTest_isNotNull=queryMap.get("coordinationAndKneeTibiaTest_isNotNull");
					Object coordinationAndKneeTibiaTest_in=queryMap.get("coordinationAndKneeTibiaTest_in");
																					Object barthelIndex=queryMap.get("barthelIndex");
					Object barthelIndex_gt=queryMap.get("barthelIndex_gt");
					Object barthelIndex_ge=queryMap.get("barthelIndex_ge");
					Object barthelIndex_lt=queryMap.get("barthelIndex_lt");
					Object barthelIndex_le=queryMap.get("barthelIndex_le");
					Object barthelIndex_in=queryMap.get("barthelIndex_in");
																Object masEvaluation=queryMap.get("masEvaluation");
					Object masEvaluation_gt=queryMap.get("masEvaluation_gt");
					Object masEvaluation_ge=queryMap.get("masEvaluation_ge");
					Object masEvaluation_lt=queryMap.get("masEvaluation_lt");
					Object masEvaluation_le=queryMap.get("masEvaluation_le");
					Object masEvaluation_in=queryMap.get("masEvaluation_in");
																Object facEvaluation=queryMap.get("facEvaluation");
					Object facEvaluation_gt=queryMap.get("facEvaluation_gt");
					Object facEvaluation_ge=queryMap.get("facEvaluation_ge");
					Object facEvaluation_lt=queryMap.get("facEvaluation_lt");
					Object facEvaluation_le=queryMap.get("facEvaluation_le");
					Object facEvaluation_in=queryMap.get("facEvaluation_in");
																					Object shoulderSubluxation=queryMap.get("shoulderSubluxation");
					Object shoulderSubluxation_like=queryMap.get("shoulderSubluxation_like");
					Object shoulderSubluxation_isNull=queryMap.get("shoulderSubluxation_isNull");
					Object shoulderSubluxation_isNotNull=queryMap.get("shoulderSubluxation_isNotNull");
					Object shoulderSubluxation_in=queryMap.get("shoulderSubluxation_in");
																										Object contractureOfAchillesTendon=queryMap.get("contractureOfAchillesTendon");
					Object contractureOfAchillesTendon_like=queryMap.get("contractureOfAchillesTendon_like");
					Object contractureOfAchillesTendon_isNull=queryMap.get("contractureOfAchillesTendon_isNull");
					Object contractureOfAchillesTendon_isNotNull=queryMap.get("contractureOfAchillesTendon_isNotNull");
					Object contractureOfAchillesTendon_in=queryMap.get("contractureOfAchillesTendon_in");
																										Object varusFootDrop=queryMap.get("varusFootDrop");
					Object varusFootDrop_like=queryMap.get("varusFootDrop_like");
					Object varusFootDrop_isNull=queryMap.get("varusFootDrop_isNull");
					Object varusFootDrop_isNotNull=queryMap.get("varusFootDrop_isNotNull");
					Object varusFootDrop_in=queryMap.get("varusFootDrop_in");
																										Object kneeTooDeep=queryMap.get("kneeTooDeep");
					Object kneeTooDeep_like=queryMap.get("kneeTooDeep_like");
					Object kneeTooDeep_isNull=queryMap.get("kneeTooDeep_isNull");
					Object kneeTooDeep_isNotNull=queryMap.get("kneeTooDeep_isNotNull");
					Object kneeTooDeep_in=queryMap.get("kneeTooDeep_in");
																										Object shallowFeeling=queryMap.get("shallowFeeling");
					Object shallowFeeling_like=queryMap.get("shallowFeeling_like");
					Object shallowFeeling_isNull=queryMap.get("shallowFeeling_isNull");
					Object shallowFeeling_isNotNull=queryMap.get("shallowFeeling_isNotNull");
					Object shallowFeeling_in=queryMap.get("shallowFeeling_in");
																										Object deepFeeling=queryMap.get("deepFeeling");
					Object deepFeeling_like=queryMap.get("deepFeeling_like");
					Object deepFeeling_isNull=queryMap.get("deepFeeling_isNull");
					Object deepFeeling_isNotNull=queryMap.get("deepFeeling_isNotNull");
					Object deepFeeling_in=queryMap.get("deepFeeling_in");
																										Object complexFeeling=queryMap.get("complexFeeling");
					Object complexFeeling_like=queryMap.get("complexFeeling_like");
					Object complexFeeling_isNull=queryMap.get("complexFeeling_isNull");
					Object complexFeeling_isNotNull=queryMap.get("complexFeeling_isNotNull");
					Object complexFeeling_in=queryMap.get("complexFeeling_in");
																										Object pain=queryMap.get("pain");
					Object pain_like=queryMap.get("pain_like");
					Object pain_isNull=queryMap.get("pain_isNull");
					Object pain_isNotNull=queryMap.get("pain_isNotNull");
					Object pain_in=queryMap.get("pain_in");
																										Object jointMobility=queryMap.get("jointMobility");
					Object jointMobility_like=queryMap.get("jointMobility_like");
					Object jointMobility_isNull=queryMap.get("jointMobility_isNull");
					Object jointMobility_isNotNull=queryMap.get("jointMobility_isNotNull");
					Object jointMobility_in=queryMap.get("jointMobility_in");
												
			

													
			
			QueryCondition qc = new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.in, id_in));}
															  					if(recoveryTimeForTheFirstTime_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.gt, recoveryTimeForTheFirstTime_gt));}
					if(recoveryTimeForTheFirstTime_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.ge, recoveryTimeForTheFirstTime_ge));}
					if(recoveryTimeForTheFirstTime_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.lt, recoveryTimeForTheFirstTime_lt));}
					if(recoveryTimeForTheFirstTime_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.le, recoveryTimeForTheFirstTime_le));}
				  																if(bloodPressure1!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.eq, bloodPressure1));}
					if(bloodPressure1_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.gt, bloodPressure1_gt));}
					if(bloodPressure1_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.ge, bloodPressure1_ge));}
					if(bloodPressure1_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.lt, bloodPressure1_lt));}
					if(bloodPressure1_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.le, bloodPressure1_le));}
					if(bloodPressure1_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.in, bloodPressure1_in));}
																if(bloodPressure2!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.eq, bloodPressure2));}
					if(bloodPressure2_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.gt, bloodPressure2_gt));}
					if(bloodPressure2_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.ge, bloodPressure2_ge));}
					if(bloodPressure2_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.lt, bloodPressure2_lt));}
					if(bloodPressure2_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.le, bloodPressure2_le));}
					if(bloodPressure2_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.in, bloodPressure2_in));}
																if(pulse!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.eq, pulse));}
					if(pulse_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.gt, pulse_gt));}
					if(pulse_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.ge, pulse_ge));}
					if(pulse_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.lt, pulse_lt));}
					if(pulse_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.le, pulse_le));}
					if(pulse_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.in, pulse_in));}
																if(heartRate!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.eq, heartRate));}
					if(heartRate_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.gt, heartRate_gt));}
					if(heartRate_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.ge, heartRate_ge));}
					if(heartRate_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.lt, heartRate_lt));}
					if(heartRate_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.le, heartRate_le));}
					if(heartRate_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.in, heartRate_in));}
															  					if(rhythm!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.eq, rhythm));}
		            if(rhythm_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.like, rhythm_like));}
		            if(rhythm_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNull, rhythm_isNull));}
		            if(rhythm_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNotNull, rhythm_isNotNull));}
				    if(rhythm_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.in, rhythm_in));}
				  																if(breathing!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.eq, breathing));}
					if(breathing_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.gt, breathing_gt));}
					if(breathing_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.ge, breathing_ge));}
					if(breathing_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.lt, breathing_lt));}
					if(breathing_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.le, breathing_le));}
					if(breathing_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.in, breathing_in));}
															  					if(skinLesions!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.eq, skinLesions));}
		            if(skinLesions_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.like, skinLesions_like));}
		            if(skinLesions_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNull, skinLesions_isNull));}
		            if(skinLesions_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNotNull, skinLesions_isNotNull));}
				    if(skinLesions_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.in, skinLesions_in));}
				  															  					if(stateOfConsciousness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.eq, stateOfConsciousness));}
		            if(stateOfConsciousness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.like, stateOfConsciousness_like));}
		            if(stateOfConsciousness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNull, stateOfConsciousness_isNull));}
		            if(stateOfConsciousness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNotNull, stateOfConsciousness_isNotNull));}
				    if(stateOfConsciousness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.in, stateOfConsciousness_in));}
				  															  					if(languageFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.eq, languageFunction));}
		            if(languageFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.like, languageFunction_like));}
		            if(languageFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNull, languageFunction_isNull));}
		            if(languageFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNotNull, languageFunction_isNotNull));}
				    if(languageFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.in, languageFunction_in));}
				  															  					if(bilateralNormal!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.eq, bilateralNormal));}
		            if(bilateralNormal_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.like, bilateralNormal_like));}
		            if(bilateralNormal_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNull, bilateralNormal_isNull));}
		            if(bilateralNormal_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNotNull, bilateralNormal_isNotNull));}
				    if(bilateralNormal_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.in, bilateralNormal_in));}
				  															  					if(dysfunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.eq, dysfunction));}
		            if(dysfunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.like, dysfunction_like));}
		            if(dysfunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNull, dysfunction_isNull));}
		            if(dysfunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNotNull, dysfunction_isNotNull));}
				    if(dysfunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.in, dysfunction_in));}
				  															  					if(handedness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.eq, handedness));}
		            if(handedness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.like, handedness_like));}
		            if(handedness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNull, handedness_isNull));}
		            if(handedness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNotNull, handedness_isNotNull));}
				    if(handedness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.in, handedness_in));}
				  															  					if(limitedJointMovementOrFracture!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.eq, limitedJointMovementOrFracture));}
		            if(limitedJointMovementOrFracture_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.like, limitedJointMovementOrFracture_like));}
		            if(limitedJointMovementOrFracture_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNull, limitedJointMovementOrFracture_isNull));}
		            if(limitedJointMovementOrFracture_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNotNull, limitedJointMovementOrFracture_isNotNull));}
				    if(limitedJointMovementOrFracture_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.in, limitedJointMovementOrFracture_in));}
				  															  					if(muscleToneUpperLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.eq, muscleToneUpperLimb));}
		            if(muscleToneUpperLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.like, muscleToneUpperLimb_like));}
		            if(muscleToneUpperLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNull, muscleToneUpperLimb_isNull));}
		            if(muscleToneUpperLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNotNull, muscleToneUpperLimb_isNotNull));}
				    if(muscleToneUpperLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.in, muscleToneUpperLimb_in));}
				  															  					if(muscleToneLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.eq, muscleToneLowerLimb));}
		            if(muscleToneLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.like, muscleToneLowerLimb_like));}
		            if(muscleToneLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNull, muscleToneLowerLimb_isNull));}
		            if(muscleToneLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNotNull, muscleToneLowerLimb_isNotNull));}
				    if(muscleToneLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.in, muscleToneLowerLimb_in));}
				  															  					if(theBalanceFunctionOfTheSeat!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.eq, theBalanceFunctionOfTheSeat));}
		            if(theBalanceFunctionOfTheSeat_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.like, theBalanceFunctionOfTheSeat_like));}
		            if(theBalanceFunctionOfTheSeat_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNull, theBalanceFunctionOfTheSeat_isNull));}
		            if(theBalanceFunctionOfTheSeat_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNotNull, theBalanceFunctionOfTheSeat_isNotNull));}
				    if(theBalanceFunctionOfTheSeat_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.in, theBalanceFunctionOfTheSeat_in));}
				  															  					if(balanceFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.eq, balanceFunction));}
		            if(balanceFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.like, balanceFunction_like));}
		            if(balanceFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNull, balanceFunction_isNull));}
		            if(balanceFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNotNull, balanceFunction_isNotNull));}
				    if(balanceFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.in, balanceFunction_in));}
				  															  					if(upperLimbMuscleStrength!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.eq, upperLimbMuscleStrength));}
		            if(upperLimbMuscleStrength_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.like, upperLimbMuscleStrength_like));}
		            if(upperLimbMuscleStrength_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNull, upperLimbMuscleStrength_isNull));}
		            if(upperLimbMuscleStrength_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNotNull, upperLimbMuscleStrength_isNotNull));}
				    if(upperLimbMuscleStrength_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.in, upperLimbMuscleStrength_in));}
				  															  					if(muscleStrengthOfLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.eq, muscleStrengthOfLowerLimb));}
		            if(muscleStrengthOfLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.like, muscleStrengthOfLowerLimb_like));}
		            if(muscleStrengthOfLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNull, muscleStrengthOfLowerLimb_isNull));}
		            if(muscleStrengthOfLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNotNull, muscleStrengthOfLowerLimb_isNotNull));}
				    if(muscleStrengthOfLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.in, muscleStrengthOfLowerLimb_in));}
				  															  					if(reflectionDeepReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.eq, reflectionDeepReflection));}
		            if(reflectionDeepReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.like, reflectionDeepReflection_like));}
		            if(reflectionDeepReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNull, reflectionDeepReflection_isNull));}
		            if(reflectionDeepReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNotNull, reflectionDeepReflection_isNotNull));}
				    if(reflectionDeepReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.in, reflectionDeepReflection_in));}
				  															  					if(reflexShallowReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.eq, reflexShallowReflection));}
		            if(reflexShallowReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.like, reflexShallowReflection_like));}
		            if(reflexShallowReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNull, reflexShallowReflection_isNull));}
		            if(reflexShallowReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNotNull, reflexShallowReflection_isNotNull));}
				    if(reflexShallowReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.in, reflexShallowReflection_in));}
				  															  					if(reflexPathologicalReflex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.eq, reflexPathologicalReflex));}
		            if(reflexPathologicalReflex_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.like, reflexPathologicalReflex_like));}
		            if(reflexPathologicalReflex_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNull, reflexPathologicalReflex_isNull));}
		            if(reflexPathologicalReflex_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNotNull, reflexPathologicalReflex_isNotNull));}
				    if(reflexPathologicalReflex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.in, reflexPathologicalReflex_in));}
				  															  					if(walkingAbilityWalkingAlone!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.eq, walkingAbilityWalkingAlone));}
		            if(walkingAbilityWalkingAlone_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.like, walkingAbilityWalkingAlone_like));}
		            if(walkingAbilityWalkingAlone_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNull, walkingAbilityWalkingAlone_isNull));}
		            if(walkingAbilityWalkingAlone_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNotNull, walkingAbilityWalkingAlone_isNotNull));}
				    if(walkingAbilityWalkingAlone_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.in, walkingAbilityWalkingAlone_in));}
				  															  					if(withTheSupportOfAssistiveWalking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.eq, withTheSupportOfAssistiveWalking));}
		            if(withTheSupportOfAssistiveWalking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.like, withTheSupportOfAssistiveWalking_like));}
		            if(withTheSupportOfAssistiveWalking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNull, withTheSupportOfAssistiveWalking_isNull));}
		            if(withTheSupportOfAssistiveWalking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNotNull, withTheSupportOfAssistiveWalking_isNotNull));}
				    if(withTheSupportOfAssistiveWalking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.in, withTheSupportOfAssistiveWalking_in));}
				  															  					if(canNotWalk!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.eq, canNotWalk));}
		            if(canNotWalk_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.like, canNotWalk_like));}
		            if(canNotWalk_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNull, canNotWalk_isNull));}
		            if(canNotWalk_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNotNull, canNotWalk_isNotNull));}
				    if(canNotWalk_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.in, canNotWalk_in));}
				  															  					if(coordinatedFingerNoseTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.eq, coordinatedFingerNoseTest));}
		            if(coordinatedFingerNoseTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.like, coordinatedFingerNoseTest_like));}
		            if(coordinatedFingerNoseTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNull, coordinatedFingerNoseTest_isNull));}
		            if(coordinatedFingerNoseTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNotNull, coordinatedFingerNoseTest_isNotNull));}
				    if(coordinatedFingerNoseTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.in, coordinatedFingerNoseTest_in));}
				  															  					if(coordinatedStandShaking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.eq, coordinatedStandShaking));}
		            if(coordinatedStandShaking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.like, coordinatedStandShaking_like));}
		            if(coordinatedStandShaking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNull, coordinatedStandShaking_isNull));}
		            if(coordinatedStandShaking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNotNull, coordinatedStandShaking_isNotNull));}
				    if(coordinatedStandShaking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.in, coordinatedStandShaking_in));}
				  															  					if(coordinatedTremor!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.eq, coordinatedTremor));}
		            if(coordinatedTremor_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.like, coordinatedTremor_like));}
		            if(coordinatedTremor_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNull, coordinatedTremor_isNull));}
		            if(coordinatedTremor_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNotNull, coordinatedTremor_isNotNull));}
				    if(coordinatedTremor_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.in, coordinatedTremor_in));}
				  															  					if(coordinationAndKneeTibiaTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.eq, coordinationAndKneeTibiaTest));}
		            if(coordinationAndKneeTibiaTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.like, coordinationAndKneeTibiaTest_like));}
		            if(coordinationAndKneeTibiaTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNull, coordinationAndKneeTibiaTest_isNull));}
		            if(coordinationAndKneeTibiaTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNotNull, coordinationAndKneeTibiaTest_isNotNull));}
				    if(coordinationAndKneeTibiaTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.in, coordinationAndKneeTibiaTest_in));}
				  																if(barthelIndex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.eq, barthelIndex));}
					if(barthelIndex_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.gt, barthelIndex_gt));}
					if(barthelIndex_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.ge, barthelIndex_ge));}
					if(barthelIndex_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.lt, barthelIndex_lt));}
					if(barthelIndex_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.le, barthelIndex_le));}
					if(barthelIndex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.in, barthelIndex_in));}
																if(masEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.eq, masEvaluation));}
					if(masEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.gt, masEvaluation_gt));}
					if(masEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.ge, masEvaluation_ge));}
					if(masEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.lt, masEvaluation_lt));}
					if(masEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.le, masEvaluation_le));}
					if(masEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.in, masEvaluation_in));}
																if(facEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.eq, facEvaluation));}
					if(facEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.gt, facEvaluation_gt));}
					if(facEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.ge, facEvaluation_ge));}
					if(facEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.lt, facEvaluation_lt));}
					if(facEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.le, facEvaluation_le));}
					if(facEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.in, facEvaluation_in));}
															  					if(shoulderSubluxation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.eq, shoulderSubluxation));}
		            if(shoulderSubluxation_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.like, shoulderSubluxation_like));}
		            if(shoulderSubluxation_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNull, shoulderSubluxation_isNull));}
		            if(shoulderSubluxation_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNotNull, shoulderSubluxation_isNotNull));}
				    if(shoulderSubluxation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.in, shoulderSubluxation_in));}
				  															  					if(contractureOfAchillesTendon!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.eq, contractureOfAchillesTendon));}
		            if(contractureOfAchillesTendon_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.like, contractureOfAchillesTendon_like));}
		            if(contractureOfAchillesTendon_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNull, contractureOfAchillesTendon_isNull));}
		            if(contractureOfAchillesTendon_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNotNull, contractureOfAchillesTendon_isNotNull));}
				    if(contractureOfAchillesTendon_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.in, contractureOfAchillesTendon_in));}
				  															  					if(varusFootDrop!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.eq, varusFootDrop));}
		            if(varusFootDrop_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.like, varusFootDrop_like));}
		            if(varusFootDrop_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNull, varusFootDrop_isNull));}
		            if(varusFootDrop_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNotNull, varusFootDrop_isNotNull));}
				    if(varusFootDrop_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.in, varusFootDrop_in));}
				  															  					if(kneeTooDeep!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.eq, kneeTooDeep));}
		            if(kneeTooDeep_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.like, kneeTooDeep_like));}
		            if(kneeTooDeep_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNull, kneeTooDeep_isNull));}
		            if(kneeTooDeep_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNotNull, kneeTooDeep_isNotNull));}
				    if(kneeTooDeep_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.in, kneeTooDeep_in));}
				  															  					if(shallowFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.eq, shallowFeeling));}
		            if(shallowFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.like, shallowFeeling_like));}
		            if(shallowFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNull, shallowFeeling_isNull));}
		            if(shallowFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNotNull, shallowFeeling_isNotNull));}
				    if(shallowFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.in, shallowFeeling_in));}
				  															  					if(deepFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.eq, deepFeeling));}
		            if(deepFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.like, deepFeeling_like));}
		            if(deepFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNull, deepFeeling_isNull));}
		            if(deepFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNotNull, deepFeeling_isNotNull));}
				    if(deepFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.in, deepFeeling_in));}
				  															  					if(complexFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.eq, complexFeeling));}
		            if(complexFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.like, complexFeeling_like));}
		            if(complexFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNull, complexFeeling_isNull));}
		            if(complexFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNotNull, complexFeeling_isNotNull));}
				    if(complexFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.in, complexFeeling_in));}
				  															  					if(pain!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.eq, pain));}
		            if(pain_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.like, pain_like));}
		            if(pain_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNull, pain_isNull));}
		            if(pain_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNotNull, pain_isNotNull));}
				    if(pain_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.in, pain_in));}
				  															  					if(jointMobility!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.eq, jointMobility));}
		            if(jointMobility_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.like, jointMobility_like));}
		            if(jointMobility_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNull, jointMobility_isNull));}
		            if(jointMobility_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNotNull, jointMobility_isNotNull));}
				    if(jointMobility_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.in, jointMobility_in));}
				  										
						  			            list = dbManager.queryByCondition(RecoveryEntity.class,qc);    
            if(list!=null&&list.size()>0){
               returnlist = new ArrayList<RecoveryEntity>();
               for (Object obj:list) {           
                 returnlist.add((RecoveryEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		
		/**
		 * 根据条件查询记录集合（不分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 		             	                 	     * @param skinLesionsListShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     				     		 		 * @return
		 */
		public List<RecoveryEntity> getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,Boolean skinLesionsListShow) {
			List<RecoveryEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																					Object recoveryTimeForTheFirstTime_gt=queryMap.get("recoveryTimeForTheFirstTime_gt");
					Object recoveryTimeForTheFirstTime_ge=queryMap.get("recoveryTimeForTheFirstTime_ge");
					Object recoveryTimeForTheFirstTime_lt=queryMap.get("recoveryTimeForTheFirstTime_lt");
					Object recoveryTimeForTheFirstTime_le=queryMap.get("recoveryTimeForTheFirstTime_le");
																					Object bloodPressure1=queryMap.get("bloodPressure1");
					Object bloodPressure1_gt=queryMap.get("bloodPressure1_gt");
					Object bloodPressure1_ge=queryMap.get("bloodPressure1_ge");
					Object bloodPressure1_lt=queryMap.get("bloodPressure1_lt");
					Object bloodPressure1_le=queryMap.get("bloodPressure1_le");
					Object bloodPressure1_in=queryMap.get("bloodPressure1_in");
																Object bloodPressure2=queryMap.get("bloodPressure2");
					Object bloodPressure2_gt=queryMap.get("bloodPressure2_gt");
					Object bloodPressure2_ge=queryMap.get("bloodPressure2_ge");
					Object bloodPressure2_lt=queryMap.get("bloodPressure2_lt");
					Object bloodPressure2_le=queryMap.get("bloodPressure2_le");
					Object bloodPressure2_in=queryMap.get("bloodPressure2_in");
																Object pulse=queryMap.get("pulse");
					Object pulse_gt=queryMap.get("pulse_gt");
					Object pulse_ge=queryMap.get("pulse_ge");
					Object pulse_lt=queryMap.get("pulse_lt");
					Object pulse_le=queryMap.get("pulse_le");
					Object pulse_in=queryMap.get("pulse_in");
																Object heartRate=queryMap.get("heartRate");
					Object heartRate_gt=queryMap.get("heartRate_gt");
					Object heartRate_ge=queryMap.get("heartRate_ge");
					Object heartRate_lt=queryMap.get("heartRate_lt");
					Object heartRate_le=queryMap.get("heartRate_le");
					Object heartRate_in=queryMap.get("heartRate_in");
																					Object rhythm=queryMap.get("rhythm");
					Object rhythm_like=queryMap.get("rhythm_like");
					Object rhythm_isNull=queryMap.get("rhythm_isNull");
					Object rhythm_isNotNull=queryMap.get("rhythm_isNotNull");
					Object rhythm_in=queryMap.get("rhythm_in");
																					Object breathing=queryMap.get("breathing");
					Object breathing_gt=queryMap.get("breathing_gt");
					Object breathing_ge=queryMap.get("breathing_ge");
					Object breathing_lt=queryMap.get("breathing_lt");
					Object breathing_le=queryMap.get("breathing_le");
					Object breathing_in=queryMap.get("breathing_in");
																					Object skinLesions=queryMap.get("skinLesions");
					Object skinLesions_like=queryMap.get("skinLesions_like");
					Object skinLesions_isNull=queryMap.get("skinLesions_isNull");
					Object skinLesions_isNotNull=queryMap.get("skinLesions_isNotNull");
					Object skinLesions_in=queryMap.get("skinLesions_in");
																										Object stateOfConsciousness=queryMap.get("stateOfConsciousness");
					Object stateOfConsciousness_like=queryMap.get("stateOfConsciousness_like");
					Object stateOfConsciousness_isNull=queryMap.get("stateOfConsciousness_isNull");
					Object stateOfConsciousness_isNotNull=queryMap.get("stateOfConsciousness_isNotNull");
					Object stateOfConsciousness_in=queryMap.get("stateOfConsciousness_in");
																										Object languageFunction=queryMap.get("languageFunction");
					Object languageFunction_like=queryMap.get("languageFunction_like");
					Object languageFunction_isNull=queryMap.get("languageFunction_isNull");
					Object languageFunction_isNotNull=queryMap.get("languageFunction_isNotNull");
					Object languageFunction_in=queryMap.get("languageFunction_in");
																										Object bilateralNormal=queryMap.get("bilateralNormal");
					Object bilateralNormal_like=queryMap.get("bilateralNormal_like");
					Object bilateralNormal_isNull=queryMap.get("bilateralNormal_isNull");
					Object bilateralNormal_isNotNull=queryMap.get("bilateralNormal_isNotNull");
					Object bilateralNormal_in=queryMap.get("bilateralNormal_in");
																										Object dysfunction=queryMap.get("dysfunction");
					Object dysfunction_like=queryMap.get("dysfunction_like");
					Object dysfunction_isNull=queryMap.get("dysfunction_isNull");
					Object dysfunction_isNotNull=queryMap.get("dysfunction_isNotNull");
					Object dysfunction_in=queryMap.get("dysfunction_in");
																										Object handedness=queryMap.get("handedness");
					Object handedness_like=queryMap.get("handedness_like");
					Object handedness_isNull=queryMap.get("handedness_isNull");
					Object handedness_isNotNull=queryMap.get("handedness_isNotNull");
					Object handedness_in=queryMap.get("handedness_in");
																										Object limitedJointMovementOrFracture=queryMap.get("limitedJointMovementOrFracture");
					Object limitedJointMovementOrFracture_like=queryMap.get("limitedJointMovementOrFracture_like");
					Object limitedJointMovementOrFracture_isNull=queryMap.get("limitedJointMovementOrFracture_isNull");
					Object limitedJointMovementOrFracture_isNotNull=queryMap.get("limitedJointMovementOrFracture_isNotNull");
					Object limitedJointMovementOrFracture_in=queryMap.get("limitedJointMovementOrFracture_in");
																										Object muscleToneUpperLimb=queryMap.get("muscleToneUpperLimb");
					Object muscleToneUpperLimb_like=queryMap.get("muscleToneUpperLimb_like");
					Object muscleToneUpperLimb_isNull=queryMap.get("muscleToneUpperLimb_isNull");
					Object muscleToneUpperLimb_isNotNull=queryMap.get("muscleToneUpperLimb_isNotNull");
					Object muscleToneUpperLimb_in=queryMap.get("muscleToneUpperLimb_in");
																										Object muscleToneLowerLimb=queryMap.get("muscleToneLowerLimb");
					Object muscleToneLowerLimb_like=queryMap.get("muscleToneLowerLimb_like");
					Object muscleToneLowerLimb_isNull=queryMap.get("muscleToneLowerLimb_isNull");
					Object muscleToneLowerLimb_isNotNull=queryMap.get("muscleToneLowerLimb_isNotNull");
					Object muscleToneLowerLimb_in=queryMap.get("muscleToneLowerLimb_in");
																										Object theBalanceFunctionOfTheSeat=queryMap.get("theBalanceFunctionOfTheSeat");
					Object theBalanceFunctionOfTheSeat_like=queryMap.get("theBalanceFunctionOfTheSeat_like");
					Object theBalanceFunctionOfTheSeat_isNull=queryMap.get("theBalanceFunctionOfTheSeat_isNull");
					Object theBalanceFunctionOfTheSeat_isNotNull=queryMap.get("theBalanceFunctionOfTheSeat_isNotNull");
					Object theBalanceFunctionOfTheSeat_in=queryMap.get("theBalanceFunctionOfTheSeat_in");
																										Object balanceFunction=queryMap.get("balanceFunction");
					Object balanceFunction_like=queryMap.get("balanceFunction_like");
					Object balanceFunction_isNull=queryMap.get("balanceFunction_isNull");
					Object balanceFunction_isNotNull=queryMap.get("balanceFunction_isNotNull");
					Object balanceFunction_in=queryMap.get("balanceFunction_in");
																										Object upperLimbMuscleStrength=queryMap.get("upperLimbMuscleStrength");
					Object upperLimbMuscleStrength_like=queryMap.get("upperLimbMuscleStrength_like");
					Object upperLimbMuscleStrength_isNull=queryMap.get("upperLimbMuscleStrength_isNull");
					Object upperLimbMuscleStrength_isNotNull=queryMap.get("upperLimbMuscleStrength_isNotNull");
					Object upperLimbMuscleStrength_in=queryMap.get("upperLimbMuscleStrength_in");
																										Object muscleStrengthOfLowerLimb=queryMap.get("muscleStrengthOfLowerLimb");
					Object muscleStrengthOfLowerLimb_like=queryMap.get("muscleStrengthOfLowerLimb_like");
					Object muscleStrengthOfLowerLimb_isNull=queryMap.get("muscleStrengthOfLowerLimb_isNull");
					Object muscleStrengthOfLowerLimb_isNotNull=queryMap.get("muscleStrengthOfLowerLimb_isNotNull");
					Object muscleStrengthOfLowerLimb_in=queryMap.get("muscleStrengthOfLowerLimb_in");
																										Object reflectionDeepReflection=queryMap.get("reflectionDeepReflection");
					Object reflectionDeepReflection_like=queryMap.get("reflectionDeepReflection_like");
					Object reflectionDeepReflection_isNull=queryMap.get("reflectionDeepReflection_isNull");
					Object reflectionDeepReflection_isNotNull=queryMap.get("reflectionDeepReflection_isNotNull");
					Object reflectionDeepReflection_in=queryMap.get("reflectionDeepReflection_in");
																										Object reflexShallowReflection=queryMap.get("reflexShallowReflection");
					Object reflexShallowReflection_like=queryMap.get("reflexShallowReflection_like");
					Object reflexShallowReflection_isNull=queryMap.get("reflexShallowReflection_isNull");
					Object reflexShallowReflection_isNotNull=queryMap.get("reflexShallowReflection_isNotNull");
					Object reflexShallowReflection_in=queryMap.get("reflexShallowReflection_in");
																										Object reflexPathologicalReflex=queryMap.get("reflexPathologicalReflex");
					Object reflexPathologicalReflex_like=queryMap.get("reflexPathologicalReflex_like");
					Object reflexPathologicalReflex_isNull=queryMap.get("reflexPathologicalReflex_isNull");
					Object reflexPathologicalReflex_isNotNull=queryMap.get("reflexPathologicalReflex_isNotNull");
					Object reflexPathologicalReflex_in=queryMap.get("reflexPathologicalReflex_in");
																										Object walkingAbilityWalkingAlone=queryMap.get("walkingAbilityWalkingAlone");
					Object walkingAbilityWalkingAlone_like=queryMap.get("walkingAbilityWalkingAlone_like");
					Object walkingAbilityWalkingAlone_isNull=queryMap.get("walkingAbilityWalkingAlone_isNull");
					Object walkingAbilityWalkingAlone_isNotNull=queryMap.get("walkingAbilityWalkingAlone_isNotNull");
					Object walkingAbilityWalkingAlone_in=queryMap.get("walkingAbilityWalkingAlone_in");
																										Object withTheSupportOfAssistiveWalking=queryMap.get("withTheSupportOfAssistiveWalking");
					Object withTheSupportOfAssistiveWalking_like=queryMap.get("withTheSupportOfAssistiveWalking_like");
					Object withTheSupportOfAssistiveWalking_isNull=queryMap.get("withTheSupportOfAssistiveWalking_isNull");
					Object withTheSupportOfAssistiveWalking_isNotNull=queryMap.get("withTheSupportOfAssistiveWalking_isNotNull");
					Object withTheSupportOfAssistiveWalking_in=queryMap.get("withTheSupportOfAssistiveWalking_in");
																										Object canNotWalk=queryMap.get("canNotWalk");
					Object canNotWalk_like=queryMap.get("canNotWalk_like");
					Object canNotWalk_isNull=queryMap.get("canNotWalk_isNull");
					Object canNotWalk_isNotNull=queryMap.get("canNotWalk_isNotNull");
					Object canNotWalk_in=queryMap.get("canNotWalk_in");
																										Object coordinatedFingerNoseTest=queryMap.get("coordinatedFingerNoseTest");
					Object coordinatedFingerNoseTest_like=queryMap.get("coordinatedFingerNoseTest_like");
					Object coordinatedFingerNoseTest_isNull=queryMap.get("coordinatedFingerNoseTest_isNull");
					Object coordinatedFingerNoseTest_isNotNull=queryMap.get("coordinatedFingerNoseTest_isNotNull");
					Object coordinatedFingerNoseTest_in=queryMap.get("coordinatedFingerNoseTest_in");
																										Object coordinatedStandShaking=queryMap.get("coordinatedStandShaking");
					Object coordinatedStandShaking_like=queryMap.get("coordinatedStandShaking_like");
					Object coordinatedStandShaking_isNull=queryMap.get("coordinatedStandShaking_isNull");
					Object coordinatedStandShaking_isNotNull=queryMap.get("coordinatedStandShaking_isNotNull");
					Object coordinatedStandShaking_in=queryMap.get("coordinatedStandShaking_in");
																										Object coordinatedTremor=queryMap.get("coordinatedTremor");
					Object coordinatedTremor_like=queryMap.get("coordinatedTremor_like");
					Object coordinatedTremor_isNull=queryMap.get("coordinatedTremor_isNull");
					Object coordinatedTremor_isNotNull=queryMap.get("coordinatedTremor_isNotNull");
					Object coordinatedTremor_in=queryMap.get("coordinatedTremor_in");
																										Object coordinationAndKneeTibiaTest=queryMap.get("coordinationAndKneeTibiaTest");
					Object coordinationAndKneeTibiaTest_like=queryMap.get("coordinationAndKneeTibiaTest_like");
					Object coordinationAndKneeTibiaTest_isNull=queryMap.get("coordinationAndKneeTibiaTest_isNull");
					Object coordinationAndKneeTibiaTest_isNotNull=queryMap.get("coordinationAndKneeTibiaTest_isNotNull");
					Object coordinationAndKneeTibiaTest_in=queryMap.get("coordinationAndKneeTibiaTest_in");
																					Object barthelIndex=queryMap.get("barthelIndex");
					Object barthelIndex_gt=queryMap.get("barthelIndex_gt");
					Object barthelIndex_ge=queryMap.get("barthelIndex_ge");
					Object barthelIndex_lt=queryMap.get("barthelIndex_lt");
					Object barthelIndex_le=queryMap.get("barthelIndex_le");
					Object barthelIndex_in=queryMap.get("barthelIndex_in");
																Object masEvaluation=queryMap.get("masEvaluation");
					Object masEvaluation_gt=queryMap.get("masEvaluation_gt");
					Object masEvaluation_ge=queryMap.get("masEvaluation_ge");
					Object masEvaluation_lt=queryMap.get("masEvaluation_lt");
					Object masEvaluation_le=queryMap.get("masEvaluation_le");
					Object masEvaluation_in=queryMap.get("masEvaluation_in");
																Object facEvaluation=queryMap.get("facEvaluation");
					Object facEvaluation_gt=queryMap.get("facEvaluation_gt");
					Object facEvaluation_ge=queryMap.get("facEvaluation_ge");
					Object facEvaluation_lt=queryMap.get("facEvaluation_lt");
					Object facEvaluation_le=queryMap.get("facEvaluation_le");
					Object facEvaluation_in=queryMap.get("facEvaluation_in");
																					Object shoulderSubluxation=queryMap.get("shoulderSubluxation");
					Object shoulderSubluxation_like=queryMap.get("shoulderSubluxation_like");
					Object shoulderSubluxation_isNull=queryMap.get("shoulderSubluxation_isNull");
					Object shoulderSubluxation_isNotNull=queryMap.get("shoulderSubluxation_isNotNull");
					Object shoulderSubluxation_in=queryMap.get("shoulderSubluxation_in");
																										Object contractureOfAchillesTendon=queryMap.get("contractureOfAchillesTendon");
					Object contractureOfAchillesTendon_like=queryMap.get("contractureOfAchillesTendon_like");
					Object contractureOfAchillesTendon_isNull=queryMap.get("contractureOfAchillesTendon_isNull");
					Object contractureOfAchillesTendon_isNotNull=queryMap.get("contractureOfAchillesTendon_isNotNull");
					Object contractureOfAchillesTendon_in=queryMap.get("contractureOfAchillesTendon_in");
																										Object varusFootDrop=queryMap.get("varusFootDrop");
					Object varusFootDrop_like=queryMap.get("varusFootDrop_like");
					Object varusFootDrop_isNull=queryMap.get("varusFootDrop_isNull");
					Object varusFootDrop_isNotNull=queryMap.get("varusFootDrop_isNotNull");
					Object varusFootDrop_in=queryMap.get("varusFootDrop_in");
																										Object kneeTooDeep=queryMap.get("kneeTooDeep");
					Object kneeTooDeep_like=queryMap.get("kneeTooDeep_like");
					Object kneeTooDeep_isNull=queryMap.get("kneeTooDeep_isNull");
					Object kneeTooDeep_isNotNull=queryMap.get("kneeTooDeep_isNotNull");
					Object kneeTooDeep_in=queryMap.get("kneeTooDeep_in");
																										Object shallowFeeling=queryMap.get("shallowFeeling");
					Object shallowFeeling_like=queryMap.get("shallowFeeling_like");
					Object shallowFeeling_isNull=queryMap.get("shallowFeeling_isNull");
					Object shallowFeeling_isNotNull=queryMap.get("shallowFeeling_isNotNull");
					Object shallowFeeling_in=queryMap.get("shallowFeeling_in");
																										Object deepFeeling=queryMap.get("deepFeeling");
					Object deepFeeling_like=queryMap.get("deepFeeling_like");
					Object deepFeeling_isNull=queryMap.get("deepFeeling_isNull");
					Object deepFeeling_isNotNull=queryMap.get("deepFeeling_isNotNull");
					Object deepFeeling_in=queryMap.get("deepFeeling_in");
																										Object complexFeeling=queryMap.get("complexFeeling");
					Object complexFeeling_like=queryMap.get("complexFeeling_like");
					Object complexFeeling_isNull=queryMap.get("complexFeeling_isNull");
					Object complexFeeling_isNotNull=queryMap.get("complexFeeling_isNotNull");
					Object complexFeeling_in=queryMap.get("complexFeeling_in");
																										Object pain=queryMap.get("pain");
					Object pain_like=queryMap.get("pain_like");
					Object pain_isNull=queryMap.get("pain_isNull");
					Object pain_isNotNull=queryMap.get("pain_isNotNull");
					Object pain_in=queryMap.get("pain_in");
																										Object jointMobility=queryMap.get("jointMobility");
					Object jointMobility_like=queryMap.get("jointMobility_like");
					Object jointMobility_isNull=queryMap.get("jointMobility_isNull");
					Object jointMobility_isNotNull=queryMap.get("jointMobility_isNotNull");
					Object jointMobility_in=queryMap.get("jointMobility_in");
												
			

													
			
			QueryCondition qc = new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.in, id_in));}
															  					if(recoveryTimeForTheFirstTime_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.gt, recoveryTimeForTheFirstTime_gt));}
					if(recoveryTimeForTheFirstTime_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.ge, recoveryTimeForTheFirstTime_ge));}
					if(recoveryTimeForTheFirstTime_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.lt, recoveryTimeForTheFirstTime_lt));}
					if(recoveryTimeForTheFirstTime_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.le, recoveryTimeForTheFirstTime_le));}
				  																if(bloodPressure1!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.eq, bloodPressure1));}
					if(bloodPressure1_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.gt, bloodPressure1_gt));}
					if(bloodPressure1_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.ge, bloodPressure1_ge));}
					if(bloodPressure1_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.lt, bloodPressure1_lt));}
					if(bloodPressure1_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.le, bloodPressure1_le));}
					if(bloodPressure1_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.in, bloodPressure1_in));}
																if(bloodPressure2!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.eq, bloodPressure2));}
					if(bloodPressure2_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.gt, bloodPressure2_gt));}
					if(bloodPressure2_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.ge, bloodPressure2_ge));}
					if(bloodPressure2_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.lt, bloodPressure2_lt));}
					if(bloodPressure2_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.le, bloodPressure2_le));}
					if(bloodPressure2_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.in, bloodPressure2_in));}
																if(pulse!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.eq, pulse));}
					if(pulse_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.gt, pulse_gt));}
					if(pulse_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.ge, pulse_ge));}
					if(pulse_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.lt, pulse_lt));}
					if(pulse_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.le, pulse_le));}
					if(pulse_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.in, pulse_in));}
																if(heartRate!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.eq, heartRate));}
					if(heartRate_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.gt, heartRate_gt));}
					if(heartRate_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.ge, heartRate_ge));}
					if(heartRate_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.lt, heartRate_lt));}
					if(heartRate_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.le, heartRate_le));}
					if(heartRate_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.in, heartRate_in));}
															  					if(rhythm!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.eq, rhythm));}
		            if(rhythm_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.like, rhythm_like));}
		            if(rhythm_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNull, rhythm_isNull));}
		            if(rhythm_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNotNull, rhythm_isNotNull));}
				    if(rhythm_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.in, rhythm_in));}
				  																if(breathing!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.eq, breathing));}
					if(breathing_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.gt, breathing_gt));}
					if(breathing_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.ge, breathing_ge));}
					if(breathing_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.lt, breathing_lt));}
					if(breathing_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.le, breathing_le));}
					if(breathing_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.in, breathing_in));}
															  					if(skinLesions!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.eq, skinLesions));}
		            if(skinLesions_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.like, skinLesions_like));}
		            if(skinLesions_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNull, skinLesions_isNull));}
		            if(skinLesions_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNotNull, skinLesions_isNotNull));}
				    if(skinLesions_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.in, skinLesions_in));}
				  															  					if(stateOfConsciousness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.eq, stateOfConsciousness));}
		            if(stateOfConsciousness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.like, stateOfConsciousness_like));}
		            if(stateOfConsciousness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNull, stateOfConsciousness_isNull));}
		            if(stateOfConsciousness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNotNull, stateOfConsciousness_isNotNull));}
				    if(stateOfConsciousness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.in, stateOfConsciousness_in));}
				  															  					if(languageFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.eq, languageFunction));}
		            if(languageFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.like, languageFunction_like));}
		            if(languageFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNull, languageFunction_isNull));}
		            if(languageFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNotNull, languageFunction_isNotNull));}
				    if(languageFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.in, languageFunction_in));}
				  															  					if(bilateralNormal!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.eq, bilateralNormal));}
		            if(bilateralNormal_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.like, bilateralNormal_like));}
		            if(bilateralNormal_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNull, bilateralNormal_isNull));}
		            if(bilateralNormal_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNotNull, bilateralNormal_isNotNull));}
				    if(bilateralNormal_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.in, bilateralNormal_in));}
				  															  					if(dysfunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.eq, dysfunction));}
		            if(dysfunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.like, dysfunction_like));}
		            if(dysfunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNull, dysfunction_isNull));}
		            if(dysfunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNotNull, dysfunction_isNotNull));}
				    if(dysfunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.in, dysfunction_in));}
				  															  					if(handedness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.eq, handedness));}
		            if(handedness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.like, handedness_like));}
		            if(handedness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNull, handedness_isNull));}
		            if(handedness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNotNull, handedness_isNotNull));}
				    if(handedness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.in, handedness_in));}
				  															  					if(limitedJointMovementOrFracture!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.eq, limitedJointMovementOrFracture));}
		            if(limitedJointMovementOrFracture_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.like, limitedJointMovementOrFracture_like));}
		            if(limitedJointMovementOrFracture_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNull, limitedJointMovementOrFracture_isNull));}
		            if(limitedJointMovementOrFracture_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNotNull, limitedJointMovementOrFracture_isNotNull));}
				    if(limitedJointMovementOrFracture_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.in, limitedJointMovementOrFracture_in));}
				  															  					if(muscleToneUpperLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.eq, muscleToneUpperLimb));}
		            if(muscleToneUpperLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.like, muscleToneUpperLimb_like));}
		            if(muscleToneUpperLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNull, muscleToneUpperLimb_isNull));}
		            if(muscleToneUpperLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNotNull, muscleToneUpperLimb_isNotNull));}
				    if(muscleToneUpperLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.in, muscleToneUpperLimb_in));}
				  															  					if(muscleToneLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.eq, muscleToneLowerLimb));}
		            if(muscleToneLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.like, muscleToneLowerLimb_like));}
		            if(muscleToneLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNull, muscleToneLowerLimb_isNull));}
		            if(muscleToneLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNotNull, muscleToneLowerLimb_isNotNull));}
				    if(muscleToneLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.in, muscleToneLowerLimb_in));}
				  															  					if(theBalanceFunctionOfTheSeat!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.eq, theBalanceFunctionOfTheSeat));}
		            if(theBalanceFunctionOfTheSeat_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.like, theBalanceFunctionOfTheSeat_like));}
		            if(theBalanceFunctionOfTheSeat_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNull, theBalanceFunctionOfTheSeat_isNull));}
		            if(theBalanceFunctionOfTheSeat_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNotNull, theBalanceFunctionOfTheSeat_isNotNull));}
				    if(theBalanceFunctionOfTheSeat_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.in, theBalanceFunctionOfTheSeat_in));}
				  															  					if(balanceFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.eq, balanceFunction));}
		            if(balanceFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.like, balanceFunction_like));}
		            if(balanceFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNull, balanceFunction_isNull));}
		            if(balanceFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNotNull, balanceFunction_isNotNull));}
				    if(balanceFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.in, balanceFunction_in));}
				  															  					if(upperLimbMuscleStrength!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.eq, upperLimbMuscleStrength));}
		            if(upperLimbMuscleStrength_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.like, upperLimbMuscleStrength_like));}
		            if(upperLimbMuscleStrength_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNull, upperLimbMuscleStrength_isNull));}
		            if(upperLimbMuscleStrength_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNotNull, upperLimbMuscleStrength_isNotNull));}
				    if(upperLimbMuscleStrength_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.in, upperLimbMuscleStrength_in));}
				  															  					if(muscleStrengthOfLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.eq, muscleStrengthOfLowerLimb));}
		            if(muscleStrengthOfLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.like, muscleStrengthOfLowerLimb_like));}
		            if(muscleStrengthOfLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNull, muscleStrengthOfLowerLimb_isNull));}
		            if(muscleStrengthOfLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNotNull, muscleStrengthOfLowerLimb_isNotNull));}
				    if(muscleStrengthOfLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.in, muscleStrengthOfLowerLimb_in));}
				  															  					if(reflectionDeepReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.eq, reflectionDeepReflection));}
		            if(reflectionDeepReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.like, reflectionDeepReflection_like));}
		            if(reflectionDeepReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNull, reflectionDeepReflection_isNull));}
		            if(reflectionDeepReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNotNull, reflectionDeepReflection_isNotNull));}
				    if(reflectionDeepReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.in, reflectionDeepReflection_in));}
				  															  					if(reflexShallowReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.eq, reflexShallowReflection));}
		            if(reflexShallowReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.like, reflexShallowReflection_like));}
		            if(reflexShallowReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNull, reflexShallowReflection_isNull));}
		            if(reflexShallowReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNotNull, reflexShallowReflection_isNotNull));}
				    if(reflexShallowReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.in, reflexShallowReflection_in));}
				  															  					if(reflexPathologicalReflex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.eq, reflexPathologicalReflex));}
		            if(reflexPathologicalReflex_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.like, reflexPathologicalReflex_like));}
		            if(reflexPathologicalReflex_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNull, reflexPathologicalReflex_isNull));}
		            if(reflexPathologicalReflex_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNotNull, reflexPathologicalReflex_isNotNull));}
				    if(reflexPathologicalReflex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.in, reflexPathologicalReflex_in));}
				  															  					if(walkingAbilityWalkingAlone!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.eq, walkingAbilityWalkingAlone));}
		            if(walkingAbilityWalkingAlone_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.like, walkingAbilityWalkingAlone_like));}
		            if(walkingAbilityWalkingAlone_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNull, walkingAbilityWalkingAlone_isNull));}
		            if(walkingAbilityWalkingAlone_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNotNull, walkingAbilityWalkingAlone_isNotNull));}
				    if(walkingAbilityWalkingAlone_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.in, walkingAbilityWalkingAlone_in));}
				  															  					if(withTheSupportOfAssistiveWalking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.eq, withTheSupportOfAssistiveWalking));}
		            if(withTheSupportOfAssistiveWalking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.like, withTheSupportOfAssistiveWalking_like));}
		            if(withTheSupportOfAssistiveWalking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNull, withTheSupportOfAssistiveWalking_isNull));}
		            if(withTheSupportOfAssistiveWalking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNotNull, withTheSupportOfAssistiveWalking_isNotNull));}
				    if(withTheSupportOfAssistiveWalking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.in, withTheSupportOfAssistiveWalking_in));}
				  															  					if(canNotWalk!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.eq, canNotWalk));}
		            if(canNotWalk_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.like, canNotWalk_like));}
		            if(canNotWalk_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNull, canNotWalk_isNull));}
		            if(canNotWalk_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNotNull, canNotWalk_isNotNull));}
				    if(canNotWalk_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.in, canNotWalk_in));}
				  															  					if(coordinatedFingerNoseTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.eq, coordinatedFingerNoseTest));}
		            if(coordinatedFingerNoseTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.like, coordinatedFingerNoseTest_like));}
		            if(coordinatedFingerNoseTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNull, coordinatedFingerNoseTest_isNull));}
		            if(coordinatedFingerNoseTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNotNull, coordinatedFingerNoseTest_isNotNull));}
				    if(coordinatedFingerNoseTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.in, coordinatedFingerNoseTest_in));}
				  															  					if(coordinatedStandShaking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.eq, coordinatedStandShaking));}
		            if(coordinatedStandShaking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.like, coordinatedStandShaking_like));}
		            if(coordinatedStandShaking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNull, coordinatedStandShaking_isNull));}
		            if(coordinatedStandShaking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNotNull, coordinatedStandShaking_isNotNull));}
				    if(coordinatedStandShaking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.in, coordinatedStandShaking_in));}
				  															  					if(coordinatedTremor!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.eq, coordinatedTremor));}
		            if(coordinatedTremor_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.like, coordinatedTremor_like));}
		            if(coordinatedTremor_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNull, coordinatedTremor_isNull));}
		            if(coordinatedTremor_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNotNull, coordinatedTremor_isNotNull));}
				    if(coordinatedTremor_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.in, coordinatedTremor_in));}
				  															  					if(coordinationAndKneeTibiaTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.eq, coordinationAndKneeTibiaTest));}
		            if(coordinationAndKneeTibiaTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.like, coordinationAndKneeTibiaTest_like));}
		            if(coordinationAndKneeTibiaTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNull, coordinationAndKneeTibiaTest_isNull));}
		            if(coordinationAndKneeTibiaTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNotNull, coordinationAndKneeTibiaTest_isNotNull));}
				    if(coordinationAndKneeTibiaTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.in, coordinationAndKneeTibiaTest_in));}
				  																if(barthelIndex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.eq, barthelIndex));}
					if(barthelIndex_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.gt, barthelIndex_gt));}
					if(barthelIndex_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.ge, barthelIndex_ge));}
					if(barthelIndex_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.lt, barthelIndex_lt));}
					if(barthelIndex_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.le, barthelIndex_le));}
					if(barthelIndex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.in, barthelIndex_in));}
																if(masEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.eq, masEvaluation));}
					if(masEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.gt, masEvaluation_gt));}
					if(masEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.ge, masEvaluation_ge));}
					if(masEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.lt, masEvaluation_lt));}
					if(masEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.le, masEvaluation_le));}
					if(masEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.in, masEvaluation_in));}
																if(facEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.eq, facEvaluation));}
					if(facEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.gt, facEvaluation_gt));}
					if(facEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.ge, facEvaluation_ge));}
					if(facEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.lt, facEvaluation_lt));}
					if(facEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.le, facEvaluation_le));}
					if(facEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.in, facEvaluation_in));}
															  					if(shoulderSubluxation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.eq, shoulderSubluxation));}
		            if(shoulderSubluxation_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.like, shoulderSubluxation_like));}
		            if(shoulderSubluxation_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNull, shoulderSubluxation_isNull));}
		            if(shoulderSubluxation_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNotNull, shoulderSubluxation_isNotNull));}
				    if(shoulderSubluxation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.in, shoulderSubluxation_in));}
				  															  					if(contractureOfAchillesTendon!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.eq, contractureOfAchillesTendon));}
		            if(contractureOfAchillesTendon_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.like, contractureOfAchillesTendon_like));}
		            if(contractureOfAchillesTendon_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNull, contractureOfAchillesTendon_isNull));}
		            if(contractureOfAchillesTendon_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNotNull, contractureOfAchillesTendon_isNotNull));}
				    if(contractureOfAchillesTendon_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.in, contractureOfAchillesTendon_in));}
				  															  					if(varusFootDrop!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.eq, varusFootDrop));}
		            if(varusFootDrop_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.like, varusFootDrop_like));}
		            if(varusFootDrop_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNull, varusFootDrop_isNull));}
		            if(varusFootDrop_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNotNull, varusFootDrop_isNotNull));}
				    if(varusFootDrop_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.in, varusFootDrop_in));}
				  															  					if(kneeTooDeep!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.eq, kneeTooDeep));}
		            if(kneeTooDeep_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.like, kneeTooDeep_like));}
		            if(kneeTooDeep_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNull, kneeTooDeep_isNull));}
		            if(kneeTooDeep_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNotNull, kneeTooDeep_isNotNull));}
				    if(kneeTooDeep_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.in, kneeTooDeep_in));}
				  															  					if(shallowFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.eq, shallowFeeling));}
		            if(shallowFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.like, shallowFeeling_like));}
		            if(shallowFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNull, shallowFeeling_isNull));}
		            if(shallowFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNotNull, shallowFeeling_isNotNull));}
				    if(shallowFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.in, shallowFeeling_in));}
				  															  					if(deepFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.eq, deepFeeling));}
		            if(deepFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.like, deepFeeling_like));}
		            if(deepFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNull, deepFeeling_isNull));}
		            if(deepFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNotNull, deepFeeling_isNotNull));}
				    if(deepFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.in, deepFeeling_in));}
				  															  					if(complexFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.eq, complexFeeling));}
		            if(complexFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.like, complexFeeling_like));}
		            if(complexFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNull, complexFeeling_isNull));}
		            if(complexFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNotNull, complexFeeling_isNotNull));}
				    if(complexFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.in, complexFeeling_in));}
				  															  					if(pain!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.eq, pain));}
		            if(pain_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.like, pain_like));}
		            if(pain_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNull, pain_isNull));}
		            if(pain_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNotNull, pain_isNotNull));}
				    if(pain_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.in, pain_in));}
				  															  					if(jointMobility!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.eq, jointMobility));}
		            if(jointMobility_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.like, jointMobility_like));}
		            if(jointMobility_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNull, jointMobility_isNull));}
		            if(jointMobility_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNotNull, jointMobility_isNotNull));}
				    if(jointMobility_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.in, jointMobility_in));}
				  										
						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}			
            list = dbManager.queryByConditions(RecoveryEntity.class,qc,oc);
                                    int a=0;
            					             	                 	                 if(skinLesionsListShow!=null&&skinLesionsListShow.booleanValue()){
						a++;
					 }
				     				     				     				     		    		                if(a>0&&list!=null&&list.size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<list.size();i++){
					RecoveryEntity obj = (RecoveryEntity)list.get(i);
										 	                 	                    //查询关联内容
						if(skinLesionsListShow!=null&&skinLesionsListShow.booleanValue()&&obj!=null&&obj.getId()!=null&&obj.getId()>0){
							List<Object> objList = dbManager.searchListByColumn(SkinLesionsEntity.class, SkinLesionsEntity.RECOVERY_ID, String.valueOf(obj.getId()));
			            	  if(objList!=null&&objList.size()>0){
			            		  List<SkinLesionsEntity> skinLesionsList= new ArrayList<SkinLesionsEntity>();
			            		  for(Object o:objList){
			            			  skinLesionsList.add((SkinLesionsEntity)o);
			            		  }
			            		  obj.setSkinLesionsList(skinLesionsList);          		  
			            	  }	            	  	  
						}
				     				     				     				     				    					result.add(obj);					
				}
				list=result;			
		}	
					if(list!=null&&list.size()>0){
               returnlist = new ArrayList<RecoveryEntity>();
               for (Object obj:list) {           
                 returnlist.add((RecoveryEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数		
		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,int pageno,int pagesize) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
															  					Object recoveryTimeForTheFirstTime_gt=queryMap.get("recoveryTimeForTheFirstTime_gt");
					Object recoveryTimeForTheFirstTime_ge=queryMap.get("recoveryTimeForTheFirstTime_ge");
					Object recoveryTimeForTheFirstTime_lt=queryMap.get("recoveryTimeForTheFirstTime_lt");
					Object recoveryTimeForTheFirstTime_le=queryMap.get("recoveryTimeForTheFirstTime_le");
				  																Object bloodPressure1=queryMap.get("bloodPressure1");
					Object bloodPressure1_gt=queryMap.get("bloodPressure1_gt");
					Object bloodPressure1_ge=queryMap.get("bloodPressure1_ge");
					Object bloodPressure1_lt=queryMap.get("bloodPressure1_lt");
					Object bloodPressure1_le=queryMap.get("bloodPressure1_le");
					Object bloodPressure1_in=queryMap.get("bloodPressure1_in");
																Object bloodPressure2=queryMap.get("bloodPressure2");
					Object bloodPressure2_gt=queryMap.get("bloodPressure2_gt");
					Object bloodPressure2_ge=queryMap.get("bloodPressure2_ge");
					Object bloodPressure2_lt=queryMap.get("bloodPressure2_lt");
					Object bloodPressure2_le=queryMap.get("bloodPressure2_le");
					Object bloodPressure2_in=queryMap.get("bloodPressure2_in");
																Object pulse=queryMap.get("pulse");
					Object pulse_gt=queryMap.get("pulse_gt");
					Object pulse_ge=queryMap.get("pulse_ge");
					Object pulse_lt=queryMap.get("pulse_lt");
					Object pulse_le=queryMap.get("pulse_le");
					Object pulse_in=queryMap.get("pulse_in");
																Object heartRate=queryMap.get("heartRate");
					Object heartRate_gt=queryMap.get("heartRate_gt");
					Object heartRate_ge=queryMap.get("heartRate_ge");
					Object heartRate_lt=queryMap.get("heartRate_lt");
					Object heartRate_le=queryMap.get("heartRate_le");
					Object heartRate_in=queryMap.get("heartRate_in");
															  					Object rhythm=queryMap.get("rhythm");
					Object rhythm_like=queryMap.get("rhythm_like");
					Object rhythm_isNull=queryMap.get("rhythm_isNull");
					Object rhythm_isNotNull=queryMap.get("rhythm_isNotNull");
					Object rhythm_in=queryMap.get("rhythm_in");
				   																Object breathing=queryMap.get("breathing");
					Object breathing_gt=queryMap.get("breathing_gt");
					Object breathing_ge=queryMap.get("breathing_ge");
					Object breathing_lt=queryMap.get("breathing_lt");
					Object breathing_le=queryMap.get("breathing_le");
					Object breathing_in=queryMap.get("breathing_in");
															  					Object skinLesions=queryMap.get("skinLesions");
					Object skinLesions_like=queryMap.get("skinLesions_like");
					Object skinLesions_isNull=queryMap.get("skinLesions_isNull");
					Object skinLesions_isNotNull=queryMap.get("skinLesions_isNotNull");
					Object skinLesions_in=queryMap.get("skinLesions_in");
				   															  					Object stateOfConsciousness=queryMap.get("stateOfConsciousness");
					Object stateOfConsciousness_like=queryMap.get("stateOfConsciousness_like");
					Object stateOfConsciousness_isNull=queryMap.get("stateOfConsciousness_isNull");
					Object stateOfConsciousness_isNotNull=queryMap.get("stateOfConsciousness_isNotNull");
					Object stateOfConsciousness_in=queryMap.get("stateOfConsciousness_in");
				   															  					Object languageFunction=queryMap.get("languageFunction");
					Object languageFunction_like=queryMap.get("languageFunction_like");
					Object languageFunction_isNull=queryMap.get("languageFunction_isNull");
					Object languageFunction_isNotNull=queryMap.get("languageFunction_isNotNull");
					Object languageFunction_in=queryMap.get("languageFunction_in");
				   															  					Object bilateralNormal=queryMap.get("bilateralNormal");
					Object bilateralNormal_like=queryMap.get("bilateralNormal_like");
					Object bilateralNormal_isNull=queryMap.get("bilateralNormal_isNull");
					Object bilateralNormal_isNotNull=queryMap.get("bilateralNormal_isNotNull");
					Object bilateralNormal_in=queryMap.get("bilateralNormal_in");
				   															  					Object dysfunction=queryMap.get("dysfunction");
					Object dysfunction_like=queryMap.get("dysfunction_like");
					Object dysfunction_isNull=queryMap.get("dysfunction_isNull");
					Object dysfunction_isNotNull=queryMap.get("dysfunction_isNotNull");
					Object dysfunction_in=queryMap.get("dysfunction_in");
				   															  					Object handedness=queryMap.get("handedness");
					Object handedness_like=queryMap.get("handedness_like");
					Object handedness_isNull=queryMap.get("handedness_isNull");
					Object handedness_isNotNull=queryMap.get("handedness_isNotNull");
					Object handedness_in=queryMap.get("handedness_in");
				   															  					Object limitedJointMovementOrFracture=queryMap.get("limitedJointMovementOrFracture");
					Object limitedJointMovementOrFracture_like=queryMap.get("limitedJointMovementOrFracture_like");
					Object limitedJointMovementOrFracture_isNull=queryMap.get("limitedJointMovementOrFracture_isNull");
					Object limitedJointMovementOrFracture_isNotNull=queryMap.get("limitedJointMovementOrFracture_isNotNull");
					Object limitedJointMovementOrFracture_in=queryMap.get("limitedJointMovementOrFracture_in");
				   															  					Object muscleToneUpperLimb=queryMap.get("muscleToneUpperLimb");
					Object muscleToneUpperLimb_like=queryMap.get("muscleToneUpperLimb_like");
					Object muscleToneUpperLimb_isNull=queryMap.get("muscleToneUpperLimb_isNull");
					Object muscleToneUpperLimb_isNotNull=queryMap.get("muscleToneUpperLimb_isNotNull");
					Object muscleToneUpperLimb_in=queryMap.get("muscleToneUpperLimb_in");
				   															  					Object muscleToneLowerLimb=queryMap.get("muscleToneLowerLimb");
					Object muscleToneLowerLimb_like=queryMap.get("muscleToneLowerLimb_like");
					Object muscleToneLowerLimb_isNull=queryMap.get("muscleToneLowerLimb_isNull");
					Object muscleToneLowerLimb_isNotNull=queryMap.get("muscleToneLowerLimb_isNotNull");
					Object muscleToneLowerLimb_in=queryMap.get("muscleToneLowerLimb_in");
				   															  					Object theBalanceFunctionOfTheSeat=queryMap.get("theBalanceFunctionOfTheSeat");
					Object theBalanceFunctionOfTheSeat_like=queryMap.get("theBalanceFunctionOfTheSeat_like");
					Object theBalanceFunctionOfTheSeat_isNull=queryMap.get("theBalanceFunctionOfTheSeat_isNull");
					Object theBalanceFunctionOfTheSeat_isNotNull=queryMap.get("theBalanceFunctionOfTheSeat_isNotNull");
					Object theBalanceFunctionOfTheSeat_in=queryMap.get("theBalanceFunctionOfTheSeat_in");
				   															  					Object balanceFunction=queryMap.get("balanceFunction");
					Object balanceFunction_like=queryMap.get("balanceFunction_like");
					Object balanceFunction_isNull=queryMap.get("balanceFunction_isNull");
					Object balanceFunction_isNotNull=queryMap.get("balanceFunction_isNotNull");
					Object balanceFunction_in=queryMap.get("balanceFunction_in");
				   															  					Object upperLimbMuscleStrength=queryMap.get("upperLimbMuscleStrength");
					Object upperLimbMuscleStrength_like=queryMap.get("upperLimbMuscleStrength_like");
					Object upperLimbMuscleStrength_isNull=queryMap.get("upperLimbMuscleStrength_isNull");
					Object upperLimbMuscleStrength_isNotNull=queryMap.get("upperLimbMuscleStrength_isNotNull");
					Object upperLimbMuscleStrength_in=queryMap.get("upperLimbMuscleStrength_in");
				   															  					Object muscleStrengthOfLowerLimb=queryMap.get("muscleStrengthOfLowerLimb");
					Object muscleStrengthOfLowerLimb_like=queryMap.get("muscleStrengthOfLowerLimb_like");
					Object muscleStrengthOfLowerLimb_isNull=queryMap.get("muscleStrengthOfLowerLimb_isNull");
					Object muscleStrengthOfLowerLimb_isNotNull=queryMap.get("muscleStrengthOfLowerLimb_isNotNull");
					Object muscleStrengthOfLowerLimb_in=queryMap.get("muscleStrengthOfLowerLimb_in");
				   															  					Object reflectionDeepReflection=queryMap.get("reflectionDeepReflection");
					Object reflectionDeepReflection_like=queryMap.get("reflectionDeepReflection_like");
					Object reflectionDeepReflection_isNull=queryMap.get("reflectionDeepReflection_isNull");
					Object reflectionDeepReflection_isNotNull=queryMap.get("reflectionDeepReflection_isNotNull");
					Object reflectionDeepReflection_in=queryMap.get("reflectionDeepReflection_in");
				   															  					Object reflexShallowReflection=queryMap.get("reflexShallowReflection");
					Object reflexShallowReflection_like=queryMap.get("reflexShallowReflection_like");
					Object reflexShallowReflection_isNull=queryMap.get("reflexShallowReflection_isNull");
					Object reflexShallowReflection_isNotNull=queryMap.get("reflexShallowReflection_isNotNull");
					Object reflexShallowReflection_in=queryMap.get("reflexShallowReflection_in");
				   															  					Object reflexPathologicalReflex=queryMap.get("reflexPathologicalReflex");
					Object reflexPathologicalReflex_like=queryMap.get("reflexPathologicalReflex_like");
					Object reflexPathologicalReflex_isNull=queryMap.get("reflexPathologicalReflex_isNull");
					Object reflexPathologicalReflex_isNotNull=queryMap.get("reflexPathologicalReflex_isNotNull");
					Object reflexPathologicalReflex_in=queryMap.get("reflexPathologicalReflex_in");
				   															  					Object walkingAbilityWalkingAlone=queryMap.get("walkingAbilityWalkingAlone");
					Object walkingAbilityWalkingAlone_like=queryMap.get("walkingAbilityWalkingAlone_like");
					Object walkingAbilityWalkingAlone_isNull=queryMap.get("walkingAbilityWalkingAlone_isNull");
					Object walkingAbilityWalkingAlone_isNotNull=queryMap.get("walkingAbilityWalkingAlone_isNotNull");
					Object walkingAbilityWalkingAlone_in=queryMap.get("walkingAbilityWalkingAlone_in");
				   															  					Object withTheSupportOfAssistiveWalking=queryMap.get("withTheSupportOfAssistiveWalking");
					Object withTheSupportOfAssistiveWalking_like=queryMap.get("withTheSupportOfAssistiveWalking_like");
					Object withTheSupportOfAssistiveWalking_isNull=queryMap.get("withTheSupportOfAssistiveWalking_isNull");
					Object withTheSupportOfAssistiveWalking_isNotNull=queryMap.get("withTheSupportOfAssistiveWalking_isNotNull");
					Object withTheSupportOfAssistiveWalking_in=queryMap.get("withTheSupportOfAssistiveWalking_in");
				   															  					Object canNotWalk=queryMap.get("canNotWalk");
					Object canNotWalk_like=queryMap.get("canNotWalk_like");
					Object canNotWalk_isNull=queryMap.get("canNotWalk_isNull");
					Object canNotWalk_isNotNull=queryMap.get("canNotWalk_isNotNull");
					Object canNotWalk_in=queryMap.get("canNotWalk_in");
				   															  					Object coordinatedFingerNoseTest=queryMap.get("coordinatedFingerNoseTest");
					Object coordinatedFingerNoseTest_like=queryMap.get("coordinatedFingerNoseTest_like");
					Object coordinatedFingerNoseTest_isNull=queryMap.get("coordinatedFingerNoseTest_isNull");
					Object coordinatedFingerNoseTest_isNotNull=queryMap.get("coordinatedFingerNoseTest_isNotNull");
					Object coordinatedFingerNoseTest_in=queryMap.get("coordinatedFingerNoseTest_in");
				   															  					Object coordinatedStandShaking=queryMap.get("coordinatedStandShaking");
					Object coordinatedStandShaking_like=queryMap.get("coordinatedStandShaking_like");
					Object coordinatedStandShaking_isNull=queryMap.get("coordinatedStandShaking_isNull");
					Object coordinatedStandShaking_isNotNull=queryMap.get("coordinatedStandShaking_isNotNull");
					Object coordinatedStandShaking_in=queryMap.get("coordinatedStandShaking_in");
				   															  					Object coordinatedTremor=queryMap.get("coordinatedTremor");
					Object coordinatedTremor_like=queryMap.get("coordinatedTremor_like");
					Object coordinatedTremor_isNull=queryMap.get("coordinatedTremor_isNull");
					Object coordinatedTremor_isNotNull=queryMap.get("coordinatedTremor_isNotNull");
					Object coordinatedTremor_in=queryMap.get("coordinatedTremor_in");
				   															  					Object coordinationAndKneeTibiaTest=queryMap.get("coordinationAndKneeTibiaTest");
					Object coordinationAndKneeTibiaTest_like=queryMap.get("coordinationAndKneeTibiaTest_like");
					Object coordinationAndKneeTibiaTest_isNull=queryMap.get("coordinationAndKneeTibiaTest_isNull");
					Object coordinationAndKneeTibiaTest_isNotNull=queryMap.get("coordinationAndKneeTibiaTest_isNotNull");
					Object coordinationAndKneeTibiaTest_in=queryMap.get("coordinationAndKneeTibiaTest_in");
				   																Object barthelIndex=queryMap.get("barthelIndex");
					Object barthelIndex_gt=queryMap.get("barthelIndex_gt");
					Object barthelIndex_ge=queryMap.get("barthelIndex_ge");
					Object barthelIndex_lt=queryMap.get("barthelIndex_lt");
					Object barthelIndex_le=queryMap.get("barthelIndex_le");
					Object barthelIndex_in=queryMap.get("barthelIndex_in");
																Object masEvaluation=queryMap.get("masEvaluation");
					Object masEvaluation_gt=queryMap.get("masEvaluation_gt");
					Object masEvaluation_ge=queryMap.get("masEvaluation_ge");
					Object masEvaluation_lt=queryMap.get("masEvaluation_lt");
					Object masEvaluation_le=queryMap.get("masEvaluation_le");
					Object masEvaluation_in=queryMap.get("masEvaluation_in");
																Object facEvaluation=queryMap.get("facEvaluation");
					Object facEvaluation_gt=queryMap.get("facEvaluation_gt");
					Object facEvaluation_ge=queryMap.get("facEvaluation_ge");
					Object facEvaluation_lt=queryMap.get("facEvaluation_lt");
					Object facEvaluation_le=queryMap.get("facEvaluation_le");
					Object facEvaluation_in=queryMap.get("facEvaluation_in");
															  					Object shoulderSubluxation=queryMap.get("shoulderSubluxation");
					Object shoulderSubluxation_like=queryMap.get("shoulderSubluxation_like");
					Object shoulderSubluxation_isNull=queryMap.get("shoulderSubluxation_isNull");
					Object shoulderSubluxation_isNotNull=queryMap.get("shoulderSubluxation_isNotNull");
					Object shoulderSubluxation_in=queryMap.get("shoulderSubluxation_in");
				   															  					Object contractureOfAchillesTendon=queryMap.get("contractureOfAchillesTendon");
					Object contractureOfAchillesTendon_like=queryMap.get("contractureOfAchillesTendon_like");
					Object contractureOfAchillesTendon_isNull=queryMap.get("contractureOfAchillesTendon_isNull");
					Object contractureOfAchillesTendon_isNotNull=queryMap.get("contractureOfAchillesTendon_isNotNull");
					Object contractureOfAchillesTendon_in=queryMap.get("contractureOfAchillesTendon_in");
				   															  					Object varusFootDrop=queryMap.get("varusFootDrop");
					Object varusFootDrop_like=queryMap.get("varusFootDrop_like");
					Object varusFootDrop_isNull=queryMap.get("varusFootDrop_isNull");
					Object varusFootDrop_isNotNull=queryMap.get("varusFootDrop_isNotNull");
					Object varusFootDrop_in=queryMap.get("varusFootDrop_in");
				   															  					Object kneeTooDeep=queryMap.get("kneeTooDeep");
					Object kneeTooDeep_like=queryMap.get("kneeTooDeep_like");
					Object kneeTooDeep_isNull=queryMap.get("kneeTooDeep_isNull");
					Object kneeTooDeep_isNotNull=queryMap.get("kneeTooDeep_isNotNull");
					Object kneeTooDeep_in=queryMap.get("kneeTooDeep_in");
				   															  					Object shallowFeeling=queryMap.get("shallowFeeling");
					Object shallowFeeling_like=queryMap.get("shallowFeeling_like");
					Object shallowFeeling_isNull=queryMap.get("shallowFeeling_isNull");
					Object shallowFeeling_isNotNull=queryMap.get("shallowFeeling_isNotNull");
					Object shallowFeeling_in=queryMap.get("shallowFeeling_in");
				   															  					Object deepFeeling=queryMap.get("deepFeeling");
					Object deepFeeling_like=queryMap.get("deepFeeling_like");
					Object deepFeeling_isNull=queryMap.get("deepFeeling_isNull");
					Object deepFeeling_isNotNull=queryMap.get("deepFeeling_isNotNull");
					Object deepFeeling_in=queryMap.get("deepFeeling_in");
				   															  					Object complexFeeling=queryMap.get("complexFeeling");
					Object complexFeeling_like=queryMap.get("complexFeeling_like");
					Object complexFeeling_isNull=queryMap.get("complexFeeling_isNull");
					Object complexFeeling_isNotNull=queryMap.get("complexFeeling_isNotNull");
					Object complexFeeling_in=queryMap.get("complexFeeling_in");
				   															  					Object pain=queryMap.get("pain");
					Object pain_like=queryMap.get("pain_like");
					Object pain_isNull=queryMap.get("pain_isNull");
					Object pain_isNotNull=queryMap.get("pain_isNotNull");
					Object pain_in=queryMap.get("pain_in");
				   															  					Object jointMobility=queryMap.get("jointMobility");
					Object jointMobility_like=queryMap.get("jointMobility_like");
					Object jointMobility_isNull=queryMap.get("jointMobility_isNull");
					Object jointMobility_isNotNull=queryMap.get("jointMobility_isNotNull");
					Object jointMobility_in=queryMap.get("jointMobility_in");
				   							
			

													
			
			QueryCondition qc = new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.in, id_in));}
															  					if(recoveryTimeForTheFirstTime_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.gt, recoveryTimeForTheFirstTime_gt));}
					if(recoveryTimeForTheFirstTime_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.ge, recoveryTimeForTheFirstTime_ge));}
					if(recoveryTimeForTheFirstTime_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.lt, recoveryTimeForTheFirstTime_lt));}
					if(recoveryTimeForTheFirstTime_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.le, recoveryTimeForTheFirstTime_le));}
				  																if(bloodPressure1!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.eq, bloodPressure1));}
					if(bloodPressure1_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.gt, bloodPressure1_gt));}
					if(bloodPressure1_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.ge, bloodPressure1_ge));}
					if(bloodPressure1_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.lt, bloodPressure1_lt));}
					if(bloodPressure1_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.le, bloodPressure1_le));}
					if(bloodPressure1_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.in, bloodPressure1_in));}
																if(bloodPressure2!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.eq, bloodPressure2));}
					if(bloodPressure2_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.gt, bloodPressure2_gt));}
					if(bloodPressure2_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.ge, bloodPressure2_ge));}
					if(bloodPressure2_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.lt, bloodPressure2_lt));}
					if(bloodPressure2_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.le, bloodPressure2_le));}
					if(bloodPressure2_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.in, bloodPressure2_in));}
																if(pulse!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.eq, pulse));}
					if(pulse_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.gt, pulse_gt));}
					if(pulse_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.ge, pulse_ge));}
					if(pulse_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.lt, pulse_lt));}
					if(pulse_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.le, pulse_le));}
					if(pulse_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.in, pulse_in));}
																if(heartRate!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.eq, heartRate));}
					if(heartRate_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.gt, heartRate_gt));}
					if(heartRate_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.ge, heartRate_ge));}
					if(heartRate_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.lt, heartRate_lt));}
					if(heartRate_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.le, heartRate_le));}
					if(heartRate_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.in, heartRate_in));}
															  					if(rhythm!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.eq, rhythm));}
		            if(rhythm_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.like, rhythm_like));}
		            if(rhythm_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNull, rhythm_isNull));}
		            if(rhythm_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNotNull, rhythm_isNotNull));}
				    if(rhythm_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.in, rhythm_in));}
				  																if(breathing!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.eq, breathing));}
					if(breathing_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.gt, breathing_gt));}
					if(breathing_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.ge, breathing_ge));}
					if(breathing_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.lt, breathing_lt));}
					if(breathing_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.le, breathing_le));}
					if(breathing_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.in, breathing_in));}
															  					if(skinLesions!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.eq, skinLesions));}
		            if(skinLesions_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.like, skinLesions_like));}
		            if(skinLesions_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNull, skinLesions_isNull));}
		            if(skinLesions_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNotNull, skinLesions_isNotNull));}
				    if(skinLesions_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.in, skinLesions_in));}
				  															  					if(stateOfConsciousness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.eq, stateOfConsciousness));}
		            if(stateOfConsciousness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.like, stateOfConsciousness_like));}
		            if(stateOfConsciousness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNull, stateOfConsciousness_isNull));}
		            if(stateOfConsciousness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNotNull, stateOfConsciousness_isNotNull));}
				    if(stateOfConsciousness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.in, stateOfConsciousness_in));}
				  															  					if(languageFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.eq, languageFunction));}
		            if(languageFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.like, languageFunction_like));}
		            if(languageFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNull, languageFunction_isNull));}
		            if(languageFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNotNull, languageFunction_isNotNull));}
				    if(languageFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.in, languageFunction_in));}
				  															  					if(bilateralNormal!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.eq, bilateralNormal));}
		            if(bilateralNormal_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.like, bilateralNormal_like));}
		            if(bilateralNormal_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNull, bilateralNormal_isNull));}
		            if(bilateralNormal_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNotNull, bilateralNormal_isNotNull));}
				    if(bilateralNormal_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.in, bilateralNormal_in));}
				  															  					if(dysfunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.eq, dysfunction));}
		            if(dysfunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.like, dysfunction_like));}
		            if(dysfunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNull, dysfunction_isNull));}
		            if(dysfunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNotNull, dysfunction_isNotNull));}
				    if(dysfunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.in, dysfunction_in));}
				  															  					if(handedness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.eq, handedness));}
		            if(handedness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.like, handedness_like));}
		            if(handedness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNull, handedness_isNull));}
		            if(handedness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNotNull, handedness_isNotNull));}
				    if(handedness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.in, handedness_in));}
				  															  					if(limitedJointMovementOrFracture!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.eq, limitedJointMovementOrFracture));}
		            if(limitedJointMovementOrFracture_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.like, limitedJointMovementOrFracture_like));}
		            if(limitedJointMovementOrFracture_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNull, limitedJointMovementOrFracture_isNull));}
		            if(limitedJointMovementOrFracture_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNotNull, limitedJointMovementOrFracture_isNotNull));}
				    if(limitedJointMovementOrFracture_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.in, limitedJointMovementOrFracture_in));}
				  															  					if(muscleToneUpperLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.eq, muscleToneUpperLimb));}
		            if(muscleToneUpperLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.like, muscleToneUpperLimb_like));}
		            if(muscleToneUpperLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNull, muscleToneUpperLimb_isNull));}
		            if(muscleToneUpperLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNotNull, muscleToneUpperLimb_isNotNull));}
				    if(muscleToneUpperLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.in, muscleToneUpperLimb_in));}
				  															  					if(muscleToneLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.eq, muscleToneLowerLimb));}
		            if(muscleToneLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.like, muscleToneLowerLimb_like));}
		            if(muscleToneLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNull, muscleToneLowerLimb_isNull));}
		            if(muscleToneLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNotNull, muscleToneLowerLimb_isNotNull));}
				    if(muscleToneLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.in, muscleToneLowerLimb_in));}
				  															  					if(theBalanceFunctionOfTheSeat!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.eq, theBalanceFunctionOfTheSeat));}
		            if(theBalanceFunctionOfTheSeat_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.like, theBalanceFunctionOfTheSeat_like));}
		            if(theBalanceFunctionOfTheSeat_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNull, theBalanceFunctionOfTheSeat_isNull));}
		            if(theBalanceFunctionOfTheSeat_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNotNull, theBalanceFunctionOfTheSeat_isNotNull));}
				    if(theBalanceFunctionOfTheSeat_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.in, theBalanceFunctionOfTheSeat_in));}
				  															  					if(balanceFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.eq, balanceFunction));}
		            if(balanceFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.like, balanceFunction_like));}
		            if(balanceFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNull, balanceFunction_isNull));}
		            if(balanceFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNotNull, balanceFunction_isNotNull));}
				    if(balanceFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.in, balanceFunction_in));}
				  															  					if(upperLimbMuscleStrength!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.eq, upperLimbMuscleStrength));}
		            if(upperLimbMuscleStrength_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.like, upperLimbMuscleStrength_like));}
		            if(upperLimbMuscleStrength_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNull, upperLimbMuscleStrength_isNull));}
		            if(upperLimbMuscleStrength_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNotNull, upperLimbMuscleStrength_isNotNull));}
				    if(upperLimbMuscleStrength_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.in, upperLimbMuscleStrength_in));}
				  															  					if(muscleStrengthOfLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.eq, muscleStrengthOfLowerLimb));}
		            if(muscleStrengthOfLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.like, muscleStrengthOfLowerLimb_like));}
		            if(muscleStrengthOfLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNull, muscleStrengthOfLowerLimb_isNull));}
		            if(muscleStrengthOfLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNotNull, muscleStrengthOfLowerLimb_isNotNull));}
				    if(muscleStrengthOfLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.in, muscleStrengthOfLowerLimb_in));}
				  															  					if(reflectionDeepReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.eq, reflectionDeepReflection));}
		            if(reflectionDeepReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.like, reflectionDeepReflection_like));}
		            if(reflectionDeepReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNull, reflectionDeepReflection_isNull));}
		            if(reflectionDeepReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNotNull, reflectionDeepReflection_isNotNull));}
				    if(reflectionDeepReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.in, reflectionDeepReflection_in));}
				  															  					if(reflexShallowReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.eq, reflexShallowReflection));}
		            if(reflexShallowReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.like, reflexShallowReflection_like));}
		            if(reflexShallowReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNull, reflexShallowReflection_isNull));}
		            if(reflexShallowReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNotNull, reflexShallowReflection_isNotNull));}
				    if(reflexShallowReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.in, reflexShallowReflection_in));}
				  															  					if(reflexPathologicalReflex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.eq, reflexPathologicalReflex));}
		            if(reflexPathologicalReflex_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.like, reflexPathologicalReflex_like));}
		            if(reflexPathologicalReflex_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNull, reflexPathologicalReflex_isNull));}
		            if(reflexPathologicalReflex_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNotNull, reflexPathologicalReflex_isNotNull));}
				    if(reflexPathologicalReflex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.in, reflexPathologicalReflex_in));}
				  															  					if(walkingAbilityWalkingAlone!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.eq, walkingAbilityWalkingAlone));}
		            if(walkingAbilityWalkingAlone_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.like, walkingAbilityWalkingAlone_like));}
		            if(walkingAbilityWalkingAlone_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNull, walkingAbilityWalkingAlone_isNull));}
		            if(walkingAbilityWalkingAlone_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNotNull, walkingAbilityWalkingAlone_isNotNull));}
				    if(walkingAbilityWalkingAlone_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.in, walkingAbilityWalkingAlone_in));}
				  															  					if(withTheSupportOfAssistiveWalking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.eq, withTheSupportOfAssistiveWalking));}
		            if(withTheSupportOfAssistiveWalking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.like, withTheSupportOfAssistiveWalking_like));}
		            if(withTheSupportOfAssistiveWalking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNull, withTheSupportOfAssistiveWalking_isNull));}
		            if(withTheSupportOfAssistiveWalking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNotNull, withTheSupportOfAssistiveWalking_isNotNull));}
				    if(withTheSupportOfAssistiveWalking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.in, withTheSupportOfAssistiveWalking_in));}
				  															  					if(canNotWalk!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.eq, canNotWalk));}
		            if(canNotWalk_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.like, canNotWalk_like));}
		            if(canNotWalk_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNull, canNotWalk_isNull));}
		            if(canNotWalk_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNotNull, canNotWalk_isNotNull));}
				    if(canNotWalk_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.in, canNotWalk_in));}
				  															  					if(coordinatedFingerNoseTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.eq, coordinatedFingerNoseTest));}
		            if(coordinatedFingerNoseTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.like, coordinatedFingerNoseTest_like));}
		            if(coordinatedFingerNoseTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNull, coordinatedFingerNoseTest_isNull));}
		            if(coordinatedFingerNoseTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNotNull, coordinatedFingerNoseTest_isNotNull));}
				    if(coordinatedFingerNoseTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.in, coordinatedFingerNoseTest_in));}
				  															  					if(coordinatedStandShaking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.eq, coordinatedStandShaking));}
		            if(coordinatedStandShaking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.like, coordinatedStandShaking_like));}
		            if(coordinatedStandShaking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNull, coordinatedStandShaking_isNull));}
		            if(coordinatedStandShaking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNotNull, coordinatedStandShaking_isNotNull));}
				    if(coordinatedStandShaking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.in, coordinatedStandShaking_in));}
				  															  					if(coordinatedTremor!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.eq, coordinatedTremor));}
		            if(coordinatedTremor_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.like, coordinatedTremor_like));}
		            if(coordinatedTremor_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNull, coordinatedTremor_isNull));}
		            if(coordinatedTremor_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNotNull, coordinatedTremor_isNotNull));}
				    if(coordinatedTremor_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.in, coordinatedTremor_in));}
				  															  					if(coordinationAndKneeTibiaTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.eq, coordinationAndKneeTibiaTest));}
		            if(coordinationAndKneeTibiaTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.like, coordinationAndKneeTibiaTest_like));}
		            if(coordinationAndKneeTibiaTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNull, coordinationAndKneeTibiaTest_isNull));}
		            if(coordinationAndKneeTibiaTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNotNull, coordinationAndKneeTibiaTest_isNotNull));}
				    if(coordinationAndKneeTibiaTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.in, coordinationAndKneeTibiaTest_in));}
				  																if(barthelIndex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.eq, barthelIndex));}
					if(barthelIndex_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.gt, barthelIndex_gt));}
					if(barthelIndex_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.ge, barthelIndex_ge));}
					if(barthelIndex_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.lt, barthelIndex_lt));}
					if(barthelIndex_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.le, barthelIndex_le));}
					if(barthelIndex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.in, barthelIndex_in));}
																if(masEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.eq, masEvaluation));}
					if(masEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.gt, masEvaluation_gt));}
					if(masEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.ge, masEvaluation_ge));}
					if(masEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.lt, masEvaluation_lt));}
					if(masEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.le, masEvaluation_le));}
					if(masEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.in, masEvaluation_in));}
																if(facEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.eq, facEvaluation));}
					if(facEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.gt, facEvaluation_gt));}
					if(facEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.ge, facEvaluation_ge));}
					if(facEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.lt, facEvaluation_lt));}
					if(facEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.le, facEvaluation_le));}
					if(facEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.in, facEvaluation_in));}
															  					if(shoulderSubluxation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.eq, shoulderSubluxation));}
		            if(shoulderSubluxation_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.like, shoulderSubluxation_like));}
		            if(shoulderSubluxation_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNull, shoulderSubluxation_isNull));}
		            if(shoulderSubluxation_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNotNull, shoulderSubluxation_isNotNull));}
				    if(shoulderSubluxation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.in, shoulderSubluxation_in));}
				  															  					if(contractureOfAchillesTendon!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.eq, contractureOfAchillesTendon));}
		            if(contractureOfAchillesTendon_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.like, contractureOfAchillesTendon_like));}
		            if(contractureOfAchillesTendon_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNull, contractureOfAchillesTendon_isNull));}
		            if(contractureOfAchillesTendon_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNotNull, contractureOfAchillesTendon_isNotNull));}
				    if(contractureOfAchillesTendon_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.in, contractureOfAchillesTendon_in));}
				  															  					if(varusFootDrop!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.eq, varusFootDrop));}
		            if(varusFootDrop_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.like, varusFootDrop_like));}
		            if(varusFootDrop_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNull, varusFootDrop_isNull));}
		            if(varusFootDrop_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNotNull, varusFootDrop_isNotNull));}
				    if(varusFootDrop_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.in, varusFootDrop_in));}
				  															  					if(kneeTooDeep!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.eq, kneeTooDeep));}
		            if(kneeTooDeep_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.like, kneeTooDeep_like));}
		            if(kneeTooDeep_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNull, kneeTooDeep_isNull));}
		            if(kneeTooDeep_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNotNull, kneeTooDeep_isNotNull));}
				    if(kneeTooDeep_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.in, kneeTooDeep_in));}
				  															  					if(shallowFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.eq, shallowFeeling));}
		            if(shallowFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.like, shallowFeeling_like));}
		            if(shallowFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNull, shallowFeeling_isNull));}
		            if(shallowFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNotNull, shallowFeeling_isNotNull));}
				    if(shallowFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.in, shallowFeeling_in));}
				  															  					if(deepFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.eq, deepFeeling));}
		            if(deepFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.like, deepFeeling_like));}
		            if(deepFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNull, deepFeeling_isNull));}
		            if(deepFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNotNull, deepFeeling_isNotNull));}
				    if(deepFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.in, deepFeeling_in));}
				  															  					if(complexFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.eq, complexFeeling));}
		            if(complexFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.like, complexFeeling_like));}
		            if(complexFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNull, complexFeeling_isNull));}
		            if(complexFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNotNull, complexFeeling_isNotNull));}
				    if(complexFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.in, complexFeeling_in));}
				  															  					if(pain!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.eq, pain));}
		            if(pain_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.like, pain_like));}
		            if(pain_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNull, pain_isNull));}
		            if(pain_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNotNull, pain_isNotNull));}
				    if(pain_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.in, pain_in));}
				  															  					if(jointMobility!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.eq, jointMobility));}
		            if(jointMobility_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.like, jointMobility_like));}
		            if(jointMobility_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNull, jointMobility_isNull));}
		            if(jointMobility_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNotNull, jointMobility_isNotNull));}
				    if(jointMobility_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.in, jointMobility_in));}
				  										
						  			            pagelist = dbManager.queryByCondition(RecoveryEntity.class,qc,pageno,pagesize);	                      			
			return pagelist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数
		 		             	                 	     * @param skinLesionsListShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     				     		 		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,int pageno,int pagesize,Boolean skinLesionsListShow) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
															  					Object recoveryTimeForTheFirstTime_gt=queryMap.get("recoveryTimeForTheFirstTime_gt");
					Object recoveryTimeForTheFirstTime_ge=queryMap.get("recoveryTimeForTheFirstTime_ge");
					Object recoveryTimeForTheFirstTime_lt=queryMap.get("recoveryTimeForTheFirstTime_lt");
					Object recoveryTimeForTheFirstTime_le=queryMap.get("recoveryTimeForTheFirstTime_le");
				  																Object bloodPressure1=queryMap.get("bloodPressure1");
					Object bloodPressure1_gt=queryMap.get("bloodPressure1_gt");
					Object bloodPressure1_ge=queryMap.get("bloodPressure1_ge");
					Object bloodPressure1_lt=queryMap.get("bloodPressure1_lt");
					Object bloodPressure1_le=queryMap.get("bloodPressure1_le");
					Object bloodPressure1_in=queryMap.get("bloodPressure1_in");
																Object bloodPressure2=queryMap.get("bloodPressure2");
					Object bloodPressure2_gt=queryMap.get("bloodPressure2_gt");
					Object bloodPressure2_ge=queryMap.get("bloodPressure2_ge");
					Object bloodPressure2_lt=queryMap.get("bloodPressure2_lt");
					Object bloodPressure2_le=queryMap.get("bloodPressure2_le");
					Object bloodPressure2_in=queryMap.get("bloodPressure2_in");
																Object pulse=queryMap.get("pulse");
					Object pulse_gt=queryMap.get("pulse_gt");
					Object pulse_ge=queryMap.get("pulse_ge");
					Object pulse_lt=queryMap.get("pulse_lt");
					Object pulse_le=queryMap.get("pulse_le");
					Object pulse_in=queryMap.get("pulse_in");
																Object heartRate=queryMap.get("heartRate");
					Object heartRate_gt=queryMap.get("heartRate_gt");
					Object heartRate_ge=queryMap.get("heartRate_ge");
					Object heartRate_lt=queryMap.get("heartRate_lt");
					Object heartRate_le=queryMap.get("heartRate_le");
					Object heartRate_in=queryMap.get("heartRate_in");
															  					Object rhythm=queryMap.get("rhythm");
					Object rhythm_like=queryMap.get("rhythm_like");
					Object rhythm_isNull=queryMap.get("rhythm_isNull");
					Object rhythm_isNotNull=queryMap.get("rhythm_isNotNull");
					Object rhythm_in=queryMap.get("rhythm_in");
				   																Object breathing=queryMap.get("breathing");
					Object breathing_gt=queryMap.get("breathing_gt");
					Object breathing_ge=queryMap.get("breathing_ge");
					Object breathing_lt=queryMap.get("breathing_lt");
					Object breathing_le=queryMap.get("breathing_le");
					Object breathing_in=queryMap.get("breathing_in");
															  					Object skinLesions=queryMap.get("skinLesions");
					Object skinLesions_like=queryMap.get("skinLesions_like");
					Object skinLesions_isNull=queryMap.get("skinLesions_isNull");
					Object skinLesions_isNotNull=queryMap.get("skinLesions_isNotNull");
					Object skinLesions_in=queryMap.get("skinLesions_in");
				   															  					Object stateOfConsciousness=queryMap.get("stateOfConsciousness");
					Object stateOfConsciousness_like=queryMap.get("stateOfConsciousness_like");
					Object stateOfConsciousness_isNull=queryMap.get("stateOfConsciousness_isNull");
					Object stateOfConsciousness_isNotNull=queryMap.get("stateOfConsciousness_isNotNull");
					Object stateOfConsciousness_in=queryMap.get("stateOfConsciousness_in");
				   															  					Object languageFunction=queryMap.get("languageFunction");
					Object languageFunction_like=queryMap.get("languageFunction_like");
					Object languageFunction_isNull=queryMap.get("languageFunction_isNull");
					Object languageFunction_isNotNull=queryMap.get("languageFunction_isNotNull");
					Object languageFunction_in=queryMap.get("languageFunction_in");
				   															  					Object bilateralNormal=queryMap.get("bilateralNormal");
					Object bilateralNormal_like=queryMap.get("bilateralNormal_like");
					Object bilateralNormal_isNull=queryMap.get("bilateralNormal_isNull");
					Object bilateralNormal_isNotNull=queryMap.get("bilateralNormal_isNotNull");
					Object bilateralNormal_in=queryMap.get("bilateralNormal_in");
				   															  					Object dysfunction=queryMap.get("dysfunction");
					Object dysfunction_like=queryMap.get("dysfunction_like");
					Object dysfunction_isNull=queryMap.get("dysfunction_isNull");
					Object dysfunction_isNotNull=queryMap.get("dysfunction_isNotNull");
					Object dysfunction_in=queryMap.get("dysfunction_in");
				   															  					Object handedness=queryMap.get("handedness");
					Object handedness_like=queryMap.get("handedness_like");
					Object handedness_isNull=queryMap.get("handedness_isNull");
					Object handedness_isNotNull=queryMap.get("handedness_isNotNull");
					Object handedness_in=queryMap.get("handedness_in");
				   															  					Object limitedJointMovementOrFracture=queryMap.get("limitedJointMovementOrFracture");
					Object limitedJointMovementOrFracture_like=queryMap.get("limitedJointMovementOrFracture_like");
					Object limitedJointMovementOrFracture_isNull=queryMap.get("limitedJointMovementOrFracture_isNull");
					Object limitedJointMovementOrFracture_isNotNull=queryMap.get("limitedJointMovementOrFracture_isNotNull");
					Object limitedJointMovementOrFracture_in=queryMap.get("limitedJointMovementOrFracture_in");
				   															  					Object muscleToneUpperLimb=queryMap.get("muscleToneUpperLimb");
					Object muscleToneUpperLimb_like=queryMap.get("muscleToneUpperLimb_like");
					Object muscleToneUpperLimb_isNull=queryMap.get("muscleToneUpperLimb_isNull");
					Object muscleToneUpperLimb_isNotNull=queryMap.get("muscleToneUpperLimb_isNotNull");
					Object muscleToneUpperLimb_in=queryMap.get("muscleToneUpperLimb_in");
				   															  					Object muscleToneLowerLimb=queryMap.get("muscleToneLowerLimb");
					Object muscleToneLowerLimb_like=queryMap.get("muscleToneLowerLimb_like");
					Object muscleToneLowerLimb_isNull=queryMap.get("muscleToneLowerLimb_isNull");
					Object muscleToneLowerLimb_isNotNull=queryMap.get("muscleToneLowerLimb_isNotNull");
					Object muscleToneLowerLimb_in=queryMap.get("muscleToneLowerLimb_in");
				   															  					Object theBalanceFunctionOfTheSeat=queryMap.get("theBalanceFunctionOfTheSeat");
					Object theBalanceFunctionOfTheSeat_like=queryMap.get("theBalanceFunctionOfTheSeat_like");
					Object theBalanceFunctionOfTheSeat_isNull=queryMap.get("theBalanceFunctionOfTheSeat_isNull");
					Object theBalanceFunctionOfTheSeat_isNotNull=queryMap.get("theBalanceFunctionOfTheSeat_isNotNull");
					Object theBalanceFunctionOfTheSeat_in=queryMap.get("theBalanceFunctionOfTheSeat_in");
				   															  					Object balanceFunction=queryMap.get("balanceFunction");
					Object balanceFunction_like=queryMap.get("balanceFunction_like");
					Object balanceFunction_isNull=queryMap.get("balanceFunction_isNull");
					Object balanceFunction_isNotNull=queryMap.get("balanceFunction_isNotNull");
					Object balanceFunction_in=queryMap.get("balanceFunction_in");
				   															  					Object upperLimbMuscleStrength=queryMap.get("upperLimbMuscleStrength");
					Object upperLimbMuscleStrength_like=queryMap.get("upperLimbMuscleStrength_like");
					Object upperLimbMuscleStrength_isNull=queryMap.get("upperLimbMuscleStrength_isNull");
					Object upperLimbMuscleStrength_isNotNull=queryMap.get("upperLimbMuscleStrength_isNotNull");
					Object upperLimbMuscleStrength_in=queryMap.get("upperLimbMuscleStrength_in");
				   															  					Object muscleStrengthOfLowerLimb=queryMap.get("muscleStrengthOfLowerLimb");
					Object muscleStrengthOfLowerLimb_like=queryMap.get("muscleStrengthOfLowerLimb_like");
					Object muscleStrengthOfLowerLimb_isNull=queryMap.get("muscleStrengthOfLowerLimb_isNull");
					Object muscleStrengthOfLowerLimb_isNotNull=queryMap.get("muscleStrengthOfLowerLimb_isNotNull");
					Object muscleStrengthOfLowerLimb_in=queryMap.get("muscleStrengthOfLowerLimb_in");
				   															  					Object reflectionDeepReflection=queryMap.get("reflectionDeepReflection");
					Object reflectionDeepReflection_like=queryMap.get("reflectionDeepReflection_like");
					Object reflectionDeepReflection_isNull=queryMap.get("reflectionDeepReflection_isNull");
					Object reflectionDeepReflection_isNotNull=queryMap.get("reflectionDeepReflection_isNotNull");
					Object reflectionDeepReflection_in=queryMap.get("reflectionDeepReflection_in");
				   															  					Object reflexShallowReflection=queryMap.get("reflexShallowReflection");
					Object reflexShallowReflection_like=queryMap.get("reflexShallowReflection_like");
					Object reflexShallowReflection_isNull=queryMap.get("reflexShallowReflection_isNull");
					Object reflexShallowReflection_isNotNull=queryMap.get("reflexShallowReflection_isNotNull");
					Object reflexShallowReflection_in=queryMap.get("reflexShallowReflection_in");
				   															  					Object reflexPathologicalReflex=queryMap.get("reflexPathologicalReflex");
					Object reflexPathologicalReflex_like=queryMap.get("reflexPathologicalReflex_like");
					Object reflexPathologicalReflex_isNull=queryMap.get("reflexPathologicalReflex_isNull");
					Object reflexPathologicalReflex_isNotNull=queryMap.get("reflexPathologicalReflex_isNotNull");
					Object reflexPathologicalReflex_in=queryMap.get("reflexPathologicalReflex_in");
				   															  					Object walkingAbilityWalkingAlone=queryMap.get("walkingAbilityWalkingAlone");
					Object walkingAbilityWalkingAlone_like=queryMap.get("walkingAbilityWalkingAlone_like");
					Object walkingAbilityWalkingAlone_isNull=queryMap.get("walkingAbilityWalkingAlone_isNull");
					Object walkingAbilityWalkingAlone_isNotNull=queryMap.get("walkingAbilityWalkingAlone_isNotNull");
					Object walkingAbilityWalkingAlone_in=queryMap.get("walkingAbilityWalkingAlone_in");
				   															  					Object withTheSupportOfAssistiveWalking=queryMap.get("withTheSupportOfAssistiveWalking");
					Object withTheSupportOfAssistiveWalking_like=queryMap.get("withTheSupportOfAssistiveWalking_like");
					Object withTheSupportOfAssistiveWalking_isNull=queryMap.get("withTheSupportOfAssistiveWalking_isNull");
					Object withTheSupportOfAssistiveWalking_isNotNull=queryMap.get("withTheSupportOfAssistiveWalking_isNotNull");
					Object withTheSupportOfAssistiveWalking_in=queryMap.get("withTheSupportOfAssistiveWalking_in");
				   															  					Object canNotWalk=queryMap.get("canNotWalk");
					Object canNotWalk_like=queryMap.get("canNotWalk_like");
					Object canNotWalk_isNull=queryMap.get("canNotWalk_isNull");
					Object canNotWalk_isNotNull=queryMap.get("canNotWalk_isNotNull");
					Object canNotWalk_in=queryMap.get("canNotWalk_in");
				   															  					Object coordinatedFingerNoseTest=queryMap.get("coordinatedFingerNoseTest");
					Object coordinatedFingerNoseTest_like=queryMap.get("coordinatedFingerNoseTest_like");
					Object coordinatedFingerNoseTest_isNull=queryMap.get("coordinatedFingerNoseTest_isNull");
					Object coordinatedFingerNoseTest_isNotNull=queryMap.get("coordinatedFingerNoseTest_isNotNull");
					Object coordinatedFingerNoseTest_in=queryMap.get("coordinatedFingerNoseTest_in");
				   															  					Object coordinatedStandShaking=queryMap.get("coordinatedStandShaking");
					Object coordinatedStandShaking_like=queryMap.get("coordinatedStandShaking_like");
					Object coordinatedStandShaking_isNull=queryMap.get("coordinatedStandShaking_isNull");
					Object coordinatedStandShaking_isNotNull=queryMap.get("coordinatedStandShaking_isNotNull");
					Object coordinatedStandShaking_in=queryMap.get("coordinatedStandShaking_in");
				   															  					Object coordinatedTremor=queryMap.get("coordinatedTremor");
					Object coordinatedTremor_like=queryMap.get("coordinatedTremor_like");
					Object coordinatedTremor_isNull=queryMap.get("coordinatedTremor_isNull");
					Object coordinatedTremor_isNotNull=queryMap.get("coordinatedTremor_isNotNull");
					Object coordinatedTremor_in=queryMap.get("coordinatedTremor_in");
				   															  					Object coordinationAndKneeTibiaTest=queryMap.get("coordinationAndKneeTibiaTest");
					Object coordinationAndKneeTibiaTest_like=queryMap.get("coordinationAndKneeTibiaTest_like");
					Object coordinationAndKneeTibiaTest_isNull=queryMap.get("coordinationAndKneeTibiaTest_isNull");
					Object coordinationAndKneeTibiaTest_isNotNull=queryMap.get("coordinationAndKneeTibiaTest_isNotNull");
					Object coordinationAndKneeTibiaTest_in=queryMap.get("coordinationAndKneeTibiaTest_in");
				   																Object barthelIndex=queryMap.get("barthelIndex");
					Object barthelIndex_gt=queryMap.get("barthelIndex_gt");
					Object barthelIndex_ge=queryMap.get("barthelIndex_ge");
					Object barthelIndex_lt=queryMap.get("barthelIndex_lt");
					Object barthelIndex_le=queryMap.get("barthelIndex_le");
					Object barthelIndex_in=queryMap.get("barthelIndex_in");
																Object masEvaluation=queryMap.get("masEvaluation");
					Object masEvaluation_gt=queryMap.get("masEvaluation_gt");
					Object masEvaluation_ge=queryMap.get("masEvaluation_ge");
					Object masEvaluation_lt=queryMap.get("masEvaluation_lt");
					Object masEvaluation_le=queryMap.get("masEvaluation_le");
					Object masEvaluation_in=queryMap.get("masEvaluation_in");
																Object facEvaluation=queryMap.get("facEvaluation");
					Object facEvaluation_gt=queryMap.get("facEvaluation_gt");
					Object facEvaluation_ge=queryMap.get("facEvaluation_ge");
					Object facEvaluation_lt=queryMap.get("facEvaluation_lt");
					Object facEvaluation_le=queryMap.get("facEvaluation_le");
					Object facEvaluation_in=queryMap.get("facEvaluation_in");
															  					Object shoulderSubluxation=queryMap.get("shoulderSubluxation");
					Object shoulderSubluxation_like=queryMap.get("shoulderSubluxation_like");
					Object shoulderSubluxation_isNull=queryMap.get("shoulderSubluxation_isNull");
					Object shoulderSubluxation_isNotNull=queryMap.get("shoulderSubluxation_isNotNull");
					Object shoulderSubluxation_in=queryMap.get("shoulderSubluxation_in");
				   															  					Object contractureOfAchillesTendon=queryMap.get("contractureOfAchillesTendon");
					Object contractureOfAchillesTendon_like=queryMap.get("contractureOfAchillesTendon_like");
					Object contractureOfAchillesTendon_isNull=queryMap.get("contractureOfAchillesTendon_isNull");
					Object contractureOfAchillesTendon_isNotNull=queryMap.get("contractureOfAchillesTendon_isNotNull");
					Object contractureOfAchillesTendon_in=queryMap.get("contractureOfAchillesTendon_in");
				   															  					Object varusFootDrop=queryMap.get("varusFootDrop");
					Object varusFootDrop_like=queryMap.get("varusFootDrop_like");
					Object varusFootDrop_isNull=queryMap.get("varusFootDrop_isNull");
					Object varusFootDrop_isNotNull=queryMap.get("varusFootDrop_isNotNull");
					Object varusFootDrop_in=queryMap.get("varusFootDrop_in");
				   															  					Object kneeTooDeep=queryMap.get("kneeTooDeep");
					Object kneeTooDeep_like=queryMap.get("kneeTooDeep_like");
					Object kneeTooDeep_isNull=queryMap.get("kneeTooDeep_isNull");
					Object kneeTooDeep_isNotNull=queryMap.get("kneeTooDeep_isNotNull");
					Object kneeTooDeep_in=queryMap.get("kneeTooDeep_in");
				   															  					Object shallowFeeling=queryMap.get("shallowFeeling");
					Object shallowFeeling_like=queryMap.get("shallowFeeling_like");
					Object shallowFeeling_isNull=queryMap.get("shallowFeeling_isNull");
					Object shallowFeeling_isNotNull=queryMap.get("shallowFeeling_isNotNull");
					Object shallowFeeling_in=queryMap.get("shallowFeeling_in");
				   															  					Object deepFeeling=queryMap.get("deepFeeling");
					Object deepFeeling_like=queryMap.get("deepFeeling_like");
					Object deepFeeling_isNull=queryMap.get("deepFeeling_isNull");
					Object deepFeeling_isNotNull=queryMap.get("deepFeeling_isNotNull");
					Object deepFeeling_in=queryMap.get("deepFeeling_in");
				   															  					Object complexFeeling=queryMap.get("complexFeeling");
					Object complexFeeling_like=queryMap.get("complexFeeling_like");
					Object complexFeeling_isNull=queryMap.get("complexFeeling_isNull");
					Object complexFeeling_isNotNull=queryMap.get("complexFeeling_isNotNull");
					Object complexFeeling_in=queryMap.get("complexFeeling_in");
				   															  					Object pain=queryMap.get("pain");
					Object pain_like=queryMap.get("pain_like");
					Object pain_isNull=queryMap.get("pain_isNull");
					Object pain_isNotNull=queryMap.get("pain_isNotNull");
					Object pain_in=queryMap.get("pain_in");
				   															  					Object jointMobility=queryMap.get("jointMobility");
					Object jointMobility_like=queryMap.get("jointMobility_like");
					Object jointMobility_isNull=queryMap.get("jointMobility_isNull");
					Object jointMobility_isNotNull=queryMap.get("jointMobility_isNotNull");
					Object jointMobility_in=queryMap.get("jointMobility_in");
				   							
			

													
			
			QueryCondition qc = new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.in, id_in));}
															  					if(recoveryTimeForTheFirstTime_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.gt, recoveryTimeForTheFirstTime_gt));}
					if(recoveryTimeForTheFirstTime_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.ge, recoveryTimeForTheFirstTime_ge));}
					if(recoveryTimeForTheFirstTime_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.lt, recoveryTimeForTheFirstTime_lt));}
					if(recoveryTimeForTheFirstTime_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.le, recoveryTimeForTheFirstTime_le));}
				  																if(bloodPressure1!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.eq, bloodPressure1));}
					if(bloodPressure1_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.gt, bloodPressure1_gt));}
					if(bloodPressure1_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.ge, bloodPressure1_ge));}
					if(bloodPressure1_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.lt, bloodPressure1_lt));}
					if(bloodPressure1_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.le, bloodPressure1_le));}
					if(bloodPressure1_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.in, bloodPressure1_in));}
																if(bloodPressure2!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.eq, bloodPressure2));}
					if(bloodPressure2_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.gt, bloodPressure2_gt));}
					if(bloodPressure2_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.ge, bloodPressure2_ge));}
					if(bloodPressure2_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.lt, bloodPressure2_lt));}
					if(bloodPressure2_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.le, bloodPressure2_le));}
					if(bloodPressure2_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.in, bloodPressure2_in));}
																if(pulse!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.eq, pulse));}
					if(pulse_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.gt, pulse_gt));}
					if(pulse_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.ge, pulse_ge));}
					if(pulse_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.lt, pulse_lt));}
					if(pulse_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.le, pulse_le));}
					if(pulse_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.in, pulse_in));}
																if(heartRate!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.eq, heartRate));}
					if(heartRate_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.gt, heartRate_gt));}
					if(heartRate_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.ge, heartRate_ge));}
					if(heartRate_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.lt, heartRate_lt));}
					if(heartRate_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.le, heartRate_le));}
					if(heartRate_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.in, heartRate_in));}
															  					if(rhythm!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.eq, rhythm));}
		            if(rhythm_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.like, rhythm_like));}
		            if(rhythm_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNull, rhythm_isNull));}
		            if(rhythm_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNotNull, rhythm_isNotNull));}
				    if(rhythm_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.in, rhythm_in));}
				  																if(breathing!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.eq, breathing));}
					if(breathing_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.gt, breathing_gt));}
					if(breathing_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.ge, breathing_ge));}
					if(breathing_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.lt, breathing_lt));}
					if(breathing_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.le, breathing_le));}
					if(breathing_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.in, breathing_in));}
															  					if(skinLesions!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.eq, skinLesions));}
		            if(skinLesions_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.like, skinLesions_like));}
		            if(skinLesions_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNull, skinLesions_isNull));}
		            if(skinLesions_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNotNull, skinLesions_isNotNull));}
				    if(skinLesions_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.in, skinLesions_in));}
				  															  					if(stateOfConsciousness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.eq, stateOfConsciousness));}
		            if(stateOfConsciousness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.like, stateOfConsciousness_like));}
		            if(stateOfConsciousness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNull, stateOfConsciousness_isNull));}
		            if(stateOfConsciousness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNotNull, stateOfConsciousness_isNotNull));}
				    if(stateOfConsciousness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.in, stateOfConsciousness_in));}
				  															  					if(languageFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.eq, languageFunction));}
		            if(languageFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.like, languageFunction_like));}
		            if(languageFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNull, languageFunction_isNull));}
		            if(languageFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNotNull, languageFunction_isNotNull));}
				    if(languageFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.in, languageFunction_in));}
				  															  					if(bilateralNormal!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.eq, bilateralNormal));}
		            if(bilateralNormal_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.like, bilateralNormal_like));}
		            if(bilateralNormal_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNull, bilateralNormal_isNull));}
		            if(bilateralNormal_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNotNull, bilateralNormal_isNotNull));}
				    if(bilateralNormal_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.in, bilateralNormal_in));}
				  															  					if(dysfunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.eq, dysfunction));}
		            if(dysfunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.like, dysfunction_like));}
		            if(dysfunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNull, dysfunction_isNull));}
		            if(dysfunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNotNull, dysfunction_isNotNull));}
				    if(dysfunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.in, dysfunction_in));}
				  															  					if(handedness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.eq, handedness));}
		            if(handedness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.like, handedness_like));}
		            if(handedness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNull, handedness_isNull));}
		            if(handedness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNotNull, handedness_isNotNull));}
				    if(handedness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.in, handedness_in));}
				  															  					if(limitedJointMovementOrFracture!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.eq, limitedJointMovementOrFracture));}
		            if(limitedJointMovementOrFracture_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.like, limitedJointMovementOrFracture_like));}
		            if(limitedJointMovementOrFracture_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNull, limitedJointMovementOrFracture_isNull));}
		            if(limitedJointMovementOrFracture_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNotNull, limitedJointMovementOrFracture_isNotNull));}
				    if(limitedJointMovementOrFracture_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.in, limitedJointMovementOrFracture_in));}
				  															  					if(muscleToneUpperLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.eq, muscleToneUpperLimb));}
		            if(muscleToneUpperLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.like, muscleToneUpperLimb_like));}
		            if(muscleToneUpperLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNull, muscleToneUpperLimb_isNull));}
		            if(muscleToneUpperLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNotNull, muscleToneUpperLimb_isNotNull));}
				    if(muscleToneUpperLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.in, muscleToneUpperLimb_in));}
				  															  					if(muscleToneLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.eq, muscleToneLowerLimb));}
		            if(muscleToneLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.like, muscleToneLowerLimb_like));}
		            if(muscleToneLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNull, muscleToneLowerLimb_isNull));}
		            if(muscleToneLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNotNull, muscleToneLowerLimb_isNotNull));}
				    if(muscleToneLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.in, muscleToneLowerLimb_in));}
				  															  					if(theBalanceFunctionOfTheSeat!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.eq, theBalanceFunctionOfTheSeat));}
		            if(theBalanceFunctionOfTheSeat_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.like, theBalanceFunctionOfTheSeat_like));}
		            if(theBalanceFunctionOfTheSeat_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNull, theBalanceFunctionOfTheSeat_isNull));}
		            if(theBalanceFunctionOfTheSeat_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNotNull, theBalanceFunctionOfTheSeat_isNotNull));}
				    if(theBalanceFunctionOfTheSeat_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.in, theBalanceFunctionOfTheSeat_in));}
				  															  					if(balanceFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.eq, balanceFunction));}
		            if(balanceFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.like, balanceFunction_like));}
		            if(balanceFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNull, balanceFunction_isNull));}
		            if(balanceFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNotNull, balanceFunction_isNotNull));}
				    if(balanceFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.in, balanceFunction_in));}
				  															  					if(upperLimbMuscleStrength!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.eq, upperLimbMuscleStrength));}
		            if(upperLimbMuscleStrength_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.like, upperLimbMuscleStrength_like));}
		            if(upperLimbMuscleStrength_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNull, upperLimbMuscleStrength_isNull));}
		            if(upperLimbMuscleStrength_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNotNull, upperLimbMuscleStrength_isNotNull));}
				    if(upperLimbMuscleStrength_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.in, upperLimbMuscleStrength_in));}
				  															  					if(muscleStrengthOfLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.eq, muscleStrengthOfLowerLimb));}
		            if(muscleStrengthOfLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.like, muscleStrengthOfLowerLimb_like));}
		            if(muscleStrengthOfLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNull, muscleStrengthOfLowerLimb_isNull));}
		            if(muscleStrengthOfLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNotNull, muscleStrengthOfLowerLimb_isNotNull));}
				    if(muscleStrengthOfLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.in, muscleStrengthOfLowerLimb_in));}
				  															  					if(reflectionDeepReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.eq, reflectionDeepReflection));}
		            if(reflectionDeepReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.like, reflectionDeepReflection_like));}
		            if(reflectionDeepReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNull, reflectionDeepReflection_isNull));}
		            if(reflectionDeepReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNotNull, reflectionDeepReflection_isNotNull));}
				    if(reflectionDeepReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.in, reflectionDeepReflection_in));}
				  															  					if(reflexShallowReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.eq, reflexShallowReflection));}
		            if(reflexShallowReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.like, reflexShallowReflection_like));}
		            if(reflexShallowReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNull, reflexShallowReflection_isNull));}
		            if(reflexShallowReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNotNull, reflexShallowReflection_isNotNull));}
				    if(reflexShallowReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.in, reflexShallowReflection_in));}
				  															  					if(reflexPathologicalReflex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.eq, reflexPathologicalReflex));}
		            if(reflexPathologicalReflex_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.like, reflexPathologicalReflex_like));}
		            if(reflexPathologicalReflex_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNull, reflexPathologicalReflex_isNull));}
		            if(reflexPathologicalReflex_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNotNull, reflexPathologicalReflex_isNotNull));}
				    if(reflexPathologicalReflex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.in, reflexPathologicalReflex_in));}
				  															  					if(walkingAbilityWalkingAlone!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.eq, walkingAbilityWalkingAlone));}
		            if(walkingAbilityWalkingAlone_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.like, walkingAbilityWalkingAlone_like));}
		            if(walkingAbilityWalkingAlone_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNull, walkingAbilityWalkingAlone_isNull));}
		            if(walkingAbilityWalkingAlone_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNotNull, walkingAbilityWalkingAlone_isNotNull));}
				    if(walkingAbilityWalkingAlone_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.in, walkingAbilityWalkingAlone_in));}
				  															  					if(withTheSupportOfAssistiveWalking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.eq, withTheSupportOfAssistiveWalking));}
		            if(withTheSupportOfAssistiveWalking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.like, withTheSupportOfAssistiveWalking_like));}
		            if(withTheSupportOfAssistiveWalking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNull, withTheSupportOfAssistiveWalking_isNull));}
		            if(withTheSupportOfAssistiveWalking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNotNull, withTheSupportOfAssistiveWalking_isNotNull));}
				    if(withTheSupportOfAssistiveWalking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.in, withTheSupportOfAssistiveWalking_in));}
				  															  					if(canNotWalk!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.eq, canNotWalk));}
		            if(canNotWalk_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.like, canNotWalk_like));}
		            if(canNotWalk_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNull, canNotWalk_isNull));}
		            if(canNotWalk_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNotNull, canNotWalk_isNotNull));}
				    if(canNotWalk_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.in, canNotWalk_in));}
				  															  					if(coordinatedFingerNoseTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.eq, coordinatedFingerNoseTest));}
		            if(coordinatedFingerNoseTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.like, coordinatedFingerNoseTest_like));}
		            if(coordinatedFingerNoseTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNull, coordinatedFingerNoseTest_isNull));}
		            if(coordinatedFingerNoseTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNotNull, coordinatedFingerNoseTest_isNotNull));}
				    if(coordinatedFingerNoseTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.in, coordinatedFingerNoseTest_in));}
				  															  					if(coordinatedStandShaking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.eq, coordinatedStandShaking));}
		            if(coordinatedStandShaking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.like, coordinatedStandShaking_like));}
		            if(coordinatedStandShaking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNull, coordinatedStandShaking_isNull));}
		            if(coordinatedStandShaking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNotNull, coordinatedStandShaking_isNotNull));}
				    if(coordinatedStandShaking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.in, coordinatedStandShaking_in));}
				  															  					if(coordinatedTremor!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.eq, coordinatedTremor));}
		            if(coordinatedTremor_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.like, coordinatedTremor_like));}
		            if(coordinatedTremor_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNull, coordinatedTremor_isNull));}
		            if(coordinatedTremor_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNotNull, coordinatedTremor_isNotNull));}
				    if(coordinatedTremor_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.in, coordinatedTremor_in));}
				  															  					if(coordinationAndKneeTibiaTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.eq, coordinationAndKneeTibiaTest));}
		            if(coordinationAndKneeTibiaTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.like, coordinationAndKneeTibiaTest_like));}
		            if(coordinationAndKneeTibiaTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNull, coordinationAndKneeTibiaTest_isNull));}
		            if(coordinationAndKneeTibiaTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNotNull, coordinationAndKneeTibiaTest_isNotNull));}
				    if(coordinationAndKneeTibiaTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.in, coordinationAndKneeTibiaTest_in));}
				  																if(barthelIndex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.eq, barthelIndex));}
					if(barthelIndex_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.gt, barthelIndex_gt));}
					if(barthelIndex_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.ge, barthelIndex_ge));}
					if(barthelIndex_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.lt, barthelIndex_lt));}
					if(barthelIndex_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.le, barthelIndex_le));}
					if(barthelIndex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.in, barthelIndex_in));}
																if(masEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.eq, masEvaluation));}
					if(masEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.gt, masEvaluation_gt));}
					if(masEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.ge, masEvaluation_ge));}
					if(masEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.lt, masEvaluation_lt));}
					if(masEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.le, masEvaluation_le));}
					if(masEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.in, masEvaluation_in));}
																if(facEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.eq, facEvaluation));}
					if(facEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.gt, facEvaluation_gt));}
					if(facEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.ge, facEvaluation_ge));}
					if(facEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.lt, facEvaluation_lt));}
					if(facEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.le, facEvaluation_le));}
					if(facEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.in, facEvaluation_in));}
															  					if(shoulderSubluxation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.eq, shoulderSubluxation));}
		            if(shoulderSubluxation_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.like, shoulderSubluxation_like));}
		            if(shoulderSubluxation_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNull, shoulderSubluxation_isNull));}
		            if(shoulderSubluxation_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNotNull, shoulderSubluxation_isNotNull));}
				    if(shoulderSubluxation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.in, shoulderSubluxation_in));}
				  															  					if(contractureOfAchillesTendon!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.eq, contractureOfAchillesTendon));}
		            if(contractureOfAchillesTendon_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.like, contractureOfAchillesTendon_like));}
		            if(contractureOfAchillesTendon_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNull, contractureOfAchillesTendon_isNull));}
		            if(contractureOfAchillesTendon_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNotNull, contractureOfAchillesTendon_isNotNull));}
				    if(contractureOfAchillesTendon_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.in, contractureOfAchillesTendon_in));}
				  															  					if(varusFootDrop!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.eq, varusFootDrop));}
		            if(varusFootDrop_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.like, varusFootDrop_like));}
		            if(varusFootDrop_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNull, varusFootDrop_isNull));}
		            if(varusFootDrop_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNotNull, varusFootDrop_isNotNull));}
				    if(varusFootDrop_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.in, varusFootDrop_in));}
				  															  					if(kneeTooDeep!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.eq, kneeTooDeep));}
		            if(kneeTooDeep_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.like, kneeTooDeep_like));}
		            if(kneeTooDeep_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNull, kneeTooDeep_isNull));}
		            if(kneeTooDeep_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNotNull, kneeTooDeep_isNotNull));}
				    if(kneeTooDeep_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.in, kneeTooDeep_in));}
				  															  					if(shallowFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.eq, shallowFeeling));}
		            if(shallowFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.like, shallowFeeling_like));}
		            if(shallowFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNull, shallowFeeling_isNull));}
		            if(shallowFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNotNull, shallowFeeling_isNotNull));}
				    if(shallowFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.in, shallowFeeling_in));}
				  															  					if(deepFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.eq, deepFeeling));}
		            if(deepFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.like, deepFeeling_like));}
		            if(deepFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNull, deepFeeling_isNull));}
		            if(deepFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNotNull, deepFeeling_isNotNull));}
				    if(deepFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.in, deepFeeling_in));}
				  															  					if(complexFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.eq, complexFeeling));}
		            if(complexFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.like, complexFeeling_like));}
		            if(complexFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNull, complexFeeling_isNull));}
		            if(complexFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNotNull, complexFeeling_isNotNull));}
				    if(complexFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.in, complexFeeling_in));}
				  															  					if(pain!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.eq, pain));}
		            if(pain_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.like, pain_like));}
		            if(pain_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNull, pain_isNull));}
		            if(pain_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNotNull, pain_isNotNull));}
				    if(pain_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.in, pain_in));}
				  															  					if(jointMobility!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.eq, jointMobility));}
		            if(jointMobility_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.like, jointMobility_like));}
		            if(jointMobility_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNull, jointMobility_isNull));}
		            if(jointMobility_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNotNull, jointMobility_isNotNull));}
				    if(jointMobility_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.in, jointMobility_in));}
				  										
						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}		
            pagelist = dbManager.queryByConditions(RecoveryEntity.class,qc,oc,pageno,pagesize);	           
                                    int a=0;
            					             	                 	                 if(skinLesionsListShow!=null&&skinLesionsListShow.booleanValue()){
						a++;
					 }
				     				     				     				     		    		                if(a>0&&pagelist!=null&&pagelist.getResultList()!=null&&pagelist.getResultList().size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<pagelist.getResultList().size();i++){
					RecoveryEntity obj = (RecoveryEntity)pagelist.getResultList().get(i);
										 	                 	                    //查询关联内容
						if(skinLesionsListShow!=null&&skinLesionsListShow.booleanValue()&&obj!=null&&obj.getId()!=null&&obj.getId()>0){
							List<Object> objList = dbManager.searchListByColumn(SkinLesionsEntity.class, SkinLesionsEntity.RECOVERY_ID, String.valueOf(obj.getId()));
			            	  if(objList!=null&&objList.size()>0){
			            		  List<SkinLesionsEntity> skinLesionsList= new ArrayList<SkinLesionsEntity>();
			            		  for(Object o:objList){
			            			  skinLesionsList.add((SkinLesionsEntity)o);
			            		  }
			            		  obj.setSkinLesionsList(skinLesionsList);          		  
			            	  }	            	  	  
						}
				     				     				     				     				    					result.add(obj);					
				}
				pagelist.setResultList(result);			
		}	
					return pagelist;
		}
		
		/**
		 * 删除记录
		 * 
		 * @param id 主键
		 * @param obj
		 */
		public boolean del(Integer id,Boolean delSkinLesionsList) {
			boolean result = false;
			if (id !=null&&id>0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 					
										 	                 	                    //删除关联信息
						if(delSkinLesionsList!=null&&delSkinLesionsList.booleanValue()){
							QueryCondition qc = new QueryCondition(SkinLesionsEntity.RECOVERY_ID, QueryCondition.eq, id);
							dbManager.delByConditionsNoTransaction(SkinLesionsEntity.class, qc);
						}
				     				     				     				     										result = dbManager.delNoTransaction(id, RecoveryEntity.class);
					tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		/**
		 * 批量删除记录
		 * 
		 * @param ids
		 *            主键 英文逗号间隔
		 * @param obj
		 */
		public boolean del(String ids) {
			boolean result = false;
			if (ids != null && !"".equals(ids.trim())) {
				TransactionManager tx = DbUtils.getTranManager();
				try {
					tx.beginTransaction();
					QueryCondition qc = new QueryCondition(RecoveryEntity.ID,QueryCondition.in, ids);
					result = dbManager.delByConditionsNoTransaction(RecoveryEntity.class, qc);
					tx.commitAndClose();
				} catch (Exception e) {
					logger.error("数据库提交失败！");
					logger.error(e);
					result = false;
					try {
						tx.rollbackAndClose();
					} catch (Exception ex) {
						logger.error("数据库回滚失败！");
						logger.error(ex);
					}
				}
			}
			return result;
		}

		/**
		 * 批量条件删除记录
		 * @param queryMap 查询条件集合
		 */
		public boolean delList(Map<String,Object> queryMap,Boolean delSkinLesionsList) {
			boolean result = false;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
															  					Object recoveryTimeForTheFirstTime_gt=queryMap.get("recoveryTimeForTheFirstTime_gt");
					Object recoveryTimeForTheFirstTime_ge=queryMap.get("recoveryTimeForTheFirstTime_ge");
					Object recoveryTimeForTheFirstTime_lt=queryMap.get("recoveryTimeForTheFirstTime_lt");
					Object recoveryTimeForTheFirstTime_le=queryMap.get("recoveryTimeForTheFirstTime_le");
				  																Object bloodPressure1=queryMap.get("bloodPressure1");
					Object bloodPressure1_gt=queryMap.get("bloodPressure1_gt");
					Object bloodPressure1_ge=queryMap.get("bloodPressure1_ge");
					Object bloodPressure1_lt=queryMap.get("bloodPressure1_lt");
					Object bloodPressure1_le=queryMap.get("bloodPressure1_le");
					Object bloodPressure1_in=queryMap.get("bloodPressure1_in");
																Object bloodPressure2=queryMap.get("bloodPressure2");
					Object bloodPressure2_gt=queryMap.get("bloodPressure2_gt");
					Object bloodPressure2_ge=queryMap.get("bloodPressure2_ge");
					Object bloodPressure2_lt=queryMap.get("bloodPressure2_lt");
					Object bloodPressure2_le=queryMap.get("bloodPressure2_le");
					Object bloodPressure2_in=queryMap.get("bloodPressure2_in");
																Object pulse=queryMap.get("pulse");
					Object pulse_gt=queryMap.get("pulse_gt");
					Object pulse_ge=queryMap.get("pulse_ge");
					Object pulse_lt=queryMap.get("pulse_lt");
					Object pulse_le=queryMap.get("pulse_le");
					Object pulse_in=queryMap.get("pulse_in");
																Object heartRate=queryMap.get("heartRate");
					Object heartRate_gt=queryMap.get("heartRate_gt");
					Object heartRate_ge=queryMap.get("heartRate_ge");
					Object heartRate_lt=queryMap.get("heartRate_lt");
					Object heartRate_le=queryMap.get("heartRate_le");
					Object heartRate_in=queryMap.get("heartRate_in");
															  					Object rhythm=queryMap.get("rhythm");
					Object rhythm_like=queryMap.get("rhythm_like");
					Object rhythm_isNull=queryMap.get("rhythm_isNull");
					Object rhythm_isNotNull=queryMap.get("rhythm_isNotNull");
					Object rhythm_in=queryMap.get("rhythm_in");
				  																Object breathing=queryMap.get("breathing");
					Object breathing_gt=queryMap.get("breathing_gt");
					Object breathing_ge=queryMap.get("breathing_ge");
					Object breathing_lt=queryMap.get("breathing_lt");
					Object breathing_le=queryMap.get("breathing_le");
					Object breathing_in=queryMap.get("breathing_in");
															  					Object skinLesions=queryMap.get("skinLesions");
					Object skinLesions_like=queryMap.get("skinLesions_like");
					Object skinLesions_isNull=queryMap.get("skinLesions_isNull");
					Object skinLesions_isNotNull=queryMap.get("skinLesions_isNotNull");
					Object skinLesions_in=queryMap.get("skinLesions_in");
				  															  					Object stateOfConsciousness=queryMap.get("stateOfConsciousness");
					Object stateOfConsciousness_like=queryMap.get("stateOfConsciousness_like");
					Object stateOfConsciousness_isNull=queryMap.get("stateOfConsciousness_isNull");
					Object stateOfConsciousness_isNotNull=queryMap.get("stateOfConsciousness_isNotNull");
					Object stateOfConsciousness_in=queryMap.get("stateOfConsciousness_in");
				  															  					Object languageFunction=queryMap.get("languageFunction");
					Object languageFunction_like=queryMap.get("languageFunction_like");
					Object languageFunction_isNull=queryMap.get("languageFunction_isNull");
					Object languageFunction_isNotNull=queryMap.get("languageFunction_isNotNull");
					Object languageFunction_in=queryMap.get("languageFunction_in");
				  															  					Object bilateralNormal=queryMap.get("bilateralNormal");
					Object bilateralNormal_like=queryMap.get("bilateralNormal_like");
					Object bilateralNormal_isNull=queryMap.get("bilateralNormal_isNull");
					Object bilateralNormal_isNotNull=queryMap.get("bilateralNormal_isNotNull");
					Object bilateralNormal_in=queryMap.get("bilateralNormal_in");
				  															  					Object dysfunction=queryMap.get("dysfunction");
					Object dysfunction_like=queryMap.get("dysfunction_like");
					Object dysfunction_isNull=queryMap.get("dysfunction_isNull");
					Object dysfunction_isNotNull=queryMap.get("dysfunction_isNotNull");
					Object dysfunction_in=queryMap.get("dysfunction_in");
				  															  					Object handedness=queryMap.get("handedness");
					Object handedness_like=queryMap.get("handedness_like");
					Object handedness_isNull=queryMap.get("handedness_isNull");
					Object handedness_isNotNull=queryMap.get("handedness_isNotNull");
					Object handedness_in=queryMap.get("handedness_in");
				  															  					Object limitedJointMovementOrFracture=queryMap.get("limitedJointMovementOrFracture");
					Object limitedJointMovementOrFracture_like=queryMap.get("limitedJointMovementOrFracture_like");
					Object limitedJointMovementOrFracture_isNull=queryMap.get("limitedJointMovementOrFracture_isNull");
					Object limitedJointMovementOrFracture_isNotNull=queryMap.get("limitedJointMovementOrFracture_isNotNull");
					Object limitedJointMovementOrFracture_in=queryMap.get("limitedJointMovementOrFracture_in");
				  															  					Object muscleToneUpperLimb=queryMap.get("muscleToneUpperLimb");
					Object muscleToneUpperLimb_like=queryMap.get("muscleToneUpperLimb_like");
					Object muscleToneUpperLimb_isNull=queryMap.get("muscleToneUpperLimb_isNull");
					Object muscleToneUpperLimb_isNotNull=queryMap.get("muscleToneUpperLimb_isNotNull");
					Object muscleToneUpperLimb_in=queryMap.get("muscleToneUpperLimb_in");
				  															  					Object muscleToneLowerLimb=queryMap.get("muscleToneLowerLimb");
					Object muscleToneLowerLimb_like=queryMap.get("muscleToneLowerLimb_like");
					Object muscleToneLowerLimb_isNull=queryMap.get("muscleToneLowerLimb_isNull");
					Object muscleToneLowerLimb_isNotNull=queryMap.get("muscleToneLowerLimb_isNotNull");
					Object muscleToneLowerLimb_in=queryMap.get("muscleToneLowerLimb_in");
				  															  					Object theBalanceFunctionOfTheSeat=queryMap.get("theBalanceFunctionOfTheSeat");
					Object theBalanceFunctionOfTheSeat_like=queryMap.get("theBalanceFunctionOfTheSeat_like");
					Object theBalanceFunctionOfTheSeat_isNull=queryMap.get("theBalanceFunctionOfTheSeat_isNull");
					Object theBalanceFunctionOfTheSeat_isNotNull=queryMap.get("theBalanceFunctionOfTheSeat_isNotNull");
					Object theBalanceFunctionOfTheSeat_in=queryMap.get("theBalanceFunctionOfTheSeat_in");
				  															  					Object balanceFunction=queryMap.get("balanceFunction");
					Object balanceFunction_like=queryMap.get("balanceFunction_like");
					Object balanceFunction_isNull=queryMap.get("balanceFunction_isNull");
					Object balanceFunction_isNotNull=queryMap.get("balanceFunction_isNotNull");
					Object balanceFunction_in=queryMap.get("balanceFunction_in");
				  															  					Object upperLimbMuscleStrength=queryMap.get("upperLimbMuscleStrength");
					Object upperLimbMuscleStrength_like=queryMap.get("upperLimbMuscleStrength_like");
					Object upperLimbMuscleStrength_isNull=queryMap.get("upperLimbMuscleStrength_isNull");
					Object upperLimbMuscleStrength_isNotNull=queryMap.get("upperLimbMuscleStrength_isNotNull");
					Object upperLimbMuscleStrength_in=queryMap.get("upperLimbMuscleStrength_in");
				  															  					Object muscleStrengthOfLowerLimb=queryMap.get("muscleStrengthOfLowerLimb");
					Object muscleStrengthOfLowerLimb_like=queryMap.get("muscleStrengthOfLowerLimb_like");
					Object muscleStrengthOfLowerLimb_isNull=queryMap.get("muscleStrengthOfLowerLimb_isNull");
					Object muscleStrengthOfLowerLimb_isNotNull=queryMap.get("muscleStrengthOfLowerLimb_isNotNull");
					Object muscleStrengthOfLowerLimb_in=queryMap.get("muscleStrengthOfLowerLimb_in");
				  															  					Object reflectionDeepReflection=queryMap.get("reflectionDeepReflection");
					Object reflectionDeepReflection_like=queryMap.get("reflectionDeepReflection_like");
					Object reflectionDeepReflection_isNull=queryMap.get("reflectionDeepReflection_isNull");
					Object reflectionDeepReflection_isNotNull=queryMap.get("reflectionDeepReflection_isNotNull");
					Object reflectionDeepReflection_in=queryMap.get("reflectionDeepReflection_in");
				  															  					Object reflexShallowReflection=queryMap.get("reflexShallowReflection");
					Object reflexShallowReflection_like=queryMap.get("reflexShallowReflection_like");
					Object reflexShallowReflection_isNull=queryMap.get("reflexShallowReflection_isNull");
					Object reflexShallowReflection_isNotNull=queryMap.get("reflexShallowReflection_isNotNull");
					Object reflexShallowReflection_in=queryMap.get("reflexShallowReflection_in");
				  															  					Object reflexPathologicalReflex=queryMap.get("reflexPathologicalReflex");
					Object reflexPathologicalReflex_like=queryMap.get("reflexPathologicalReflex_like");
					Object reflexPathologicalReflex_isNull=queryMap.get("reflexPathologicalReflex_isNull");
					Object reflexPathologicalReflex_isNotNull=queryMap.get("reflexPathologicalReflex_isNotNull");
					Object reflexPathologicalReflex_in=queryMap.get("reflexPathologicalReflex_in");
				  															  					Object walkingAbilityWalkingAlone=queryMap.get("walkingAbilityWalkingAlone");
					Object walkingAbilityWalkingAlone_like=queryMap.get("walkingAbilityWalkingAlone_like");
					Object walkingAbilityWalkingAlone_isNull=queryMap.get("walkingAbilityWalkingAlone_isNull");
					Object walkingAbilityWalkingAlone_isNotNull=queryMap.get("walkingAbilityWalkingAlone_isNotNull");
					Object walkingAbilityWalkingAlone_in=queryMap.get("walkingAbilityWalkingAlone_in");
				  															  					Object withTheSupportOfAssistiveWalking=queryMap.get("withTheSupportOfAssistiveWalking");
					Object withTheSupportOfAssistiveWalking_like=queryMap.get("withTheSupportOfAssistiveWalking_like");
					Object withTheSupportOfAssistiveWalking_isNull=queryMap.get("withTheSupportOfAssistiveWalking_isNull");
					Object withTheSupportOfAssistiveWalking_isNotNull=queryMap.get("withTheSupportOfAssistiveWalking_isNotNull");
					Object withTheSupportOfAssistiveWalking_in=queryMap.get("withTheSupportOfAssistiveWalking_in");
				  															  					Object canNotWalk=queryMap.get("canNotWalk");
					Object canNotWalk_like=queryMap.get("canNotWalk_like");
					Object canNotWalk_isNull=queryMap.get("canNotWalk_isNull");
					Object canNotWalk_isNotNull=queryMap.get("canNotWalk_isNotNull");
					Object canNotWalk_in=queryMap.get("canNotWalk_in");
				  															  					Object coordinatedFingerNoseTest=queryMap.get("coordinatedFingerNoseTest");
					Object coordinatedFingerNoseTest_like=queryMap.get("coordinatedFingerNoseTest_like");
					Object coordinatedFingerNoseTest_isNull=queryMap.get("coordinatedFingerNoseTest_isNull");
					Object coordinatedFingerNoseTest_isNotNull=queryMap.get("coordinatedFingerNoseTest_isNotNull");
					Object coordinatedFingerNoseTest_in=queryMap.get("coordinatedFingerNoseTest_in");
				  															  					Object coordinatedStandShaking=queryMap.get("coordinatedStandShaking");
					Object coordinatedStandShaking_like=queryMap.get("coordinatedStandShaking_like");
					Object coordinatedStandShaking_isNull=queryMap.get("coordinatedStandShaking_isNull");
					Object coordinatedStandShaking_isNotNull=queryMap.get("coordinatedStandShaking_isNotNull");
					Object coordinatedStandShaking_in=queryMap.get("coordinatedStandShaking_in");
				  															  					Object coordinatedTremor=queryMap.get("coordinatedTremor");
					Object coordinatedTremor_like=queryMap.get("coordinatedTremor_like");
					Object coordinatedTremor_isNull=queryMap.get("coordinatedTremor_isNull");
					Object coordinatedTremor_isNotNull=queryMap.get("coordinatedTremor_isNotNull");
					Object coordinatedTremor_in=queryMap.get("coordinatedTremor_in");
				  															  					Object coordinationAndKneeTibiaTest=queryMap.get("coordinationAndKneeTibiaTest");
					Object coordinationAndKneeTibiaTest_like=queryMap.get("coordinationAndKneeTibiaTest_like");
					Object coordinationAndKneeTibiaTest_isNull=queryMap.get("coordinationAndKneeTibiaTest_isNull");
					Object coordinationAndKneeTibiaTest_isNotNull=queryMap.get("coordinationAndKneeTibiaTest_isNotNull");
					Object coordinationAndKneeTibiaTest_in=queryMap.get("coordinationAndKneeTibiaTest_in");
				  																Object barthelIndex=queryMap.get("barthelIndex");
					Object barthelIndex_gt=queryMap.get("barthelIndex_gt");
					Object barthelIndex_ge=queryMap.get("barthelIndex_ge");
					Object barthelIndex_lt=queryMap.get("barthelIndex_lt");
					Object barthelIndex_le=queryMap.get("barthelIndex_le");
					Object barthelIndex_in=queryMap.get("barthelIndex_in");
																Object masEvaluation=queryMap.get("masEvaluation");
					Object masEvaluation_gt=queryMap.get("masEvaluation_gt");
					Object masEvaluation_ge=queryMap.get("masEvaluation_ge");
					Object masEvaluation_lt=queryMap.get("masEvaluation_lt");
					Object masEvaluation_le=queryMap.get("masEvaluation_le");
					Object masEvaluation_in=queryMap.get("masEvaluation_in");
																Object facEvaluation=queryMap.get("facEvaluation");
					Object facEvaluation_gt=queryMap.get("facEvaluation_gt");
					Object facEvaluation_ge=queryMap.get("facEvaluation_ge");
					Object facEvaluation_lt=queryMap.get("facEvaluation_lt");
					Object facEvaluation_le=queryMap.get("facEvaluation_le");
					Object facEvaluation_in=queryMap.get("facEvaluation_in");
															  					Object shoulderSubluxation=queryMap.get("shoulderSubluxation");
					Object shoulderSubluxation_like=queryMap.get("shoulderSubluxation_like");
					Object shoulderSubluxation_isNull=queryMap.get("shoulderSubluxation_isNull");
					Object shoulderSubluxation_isNotNull=queryMap.get("shoulderSubluxation_isNotNull");
					Object shoulderSubluxation_in=queryMap.get("shoulderSubluxation_in");
				  															  					Object contractureOfAchillesTendon=queryMap.get("contractureOfAchillesTendon");
					Object contractureOfAchillesTendon_like=queryMap.get("contractureOfAchillesTendon_like");
					Object contractureOfAchillesTendon_isNull=queryMap.get("contractureOfAchillesTendon_isNull");
					Object contractureOfAchillesTendon_isNotNull=queryMap.get("contractureOfAchillesTendon_isNotNull");
					Object contractureOfAchillesTendon_in=queryMap.get("contractureOfAchillesTendon_in");
				  															  					Object varusFootDrop=queryMap.get("varusFootDrop");
					Object varusFootDrop_like=queryMap.get("varusFootDrop_like");
					Object varusFootDrop_isNull=queryMap.get("varusFootDrop_isNull");
					Object varusFootDrop_isNotNull=queryMap.get("varusFootDrop_isNotNull");
					Object varusFootDrop_in=queryMap.get("varusFootDrop_in");
				  															  					Object kneeTooDeep=queryMap.get("kneeTooDeep");
					Object kneeTooDeep_like=queryMap.get("kneeTooDeep_like");
					Object kneeTooDeep_isNull=queryMap.get("kneeTooDeep_isNull");
					Object kneeTooDeep_isNotNull=queryMap.get("kneeTooDeep_isNotNull");
					Object kneeTooDeep_in=queryMap.get("kneeTooDeep_in");
				  															  					Object shallowFeeling=queryMap.get("shallowFeeling");
					Object shallowFeeling_like=queryMap.get("shallowFeeling_like");
					Object shallowFeeling_isNull=queryMap.get("shallowFeeling_isNull");
					Object shallowFeeling_isNotNull=queryMap.get("shallowFeeling_isNotNull");
					Object shallowFeeling_in=queryMap.get("shallowFeeling_in");
				  															  					Object deepFeeling=queryMap.get("deepFeeling");
					Object deepFeeling_like=queryMap.get("deepFeeling_like");
					Object deepFeeling_isNull=queryMap.get("deepFeeling_isNull");
					Object deepFeeling_isNotNull=queryMap.get("deepFeeling_isNotNull");
					Object deepFeeling_in=queryMap.get("deepFeeling_in");
				  															  					Object complexFeeling=queryMap.get("complexFeeling");
					Object complexFeeling_like=queryMap.get("complexFeeling_like");
					Object complexFeeling_isNull=queryMap.get("complexFeeling_isNull");
					Object complexFeeling_isNotNull=queryMap.get("complexFeeling_isNotNull");
					Object complexFeeling_in=queryMap.get("complexFeeling_in");
				  															  					Object pain=queryMap.get("pain");
					Object pain_like=queryMap.get("pain_like");
					Object pain_isNull=queryMap.get("pain_isNull");
					Object pain_isNotNull=queryMap.get("pain_isNotNull");
					Object pain_in=queryMap.get("pain_in");
				  															  					Object jointMobility=queryMap.get("jointMobility");
					Object jointMobility_like=queryMap.get("jointMobility_like");
					Object jointMobility_isNull=queryMap.get("jointMobility_isNull");
					Object jointMobility_isNotNull=queryMap.get("jointMobility_isNotNull");
					Object jointMobility_in=queryMap.get("jointMobility_in");
				  																				
			QueryCondition qc = new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.ID, QueryCondition.in, id_in));}
															  					if(recoveryTimeForTheFirstTime_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.gt, recoveryTimeForTheFirstTime_gt));}
					if(recoveryTimeForTheFirstTime_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.ge, recoveryTimeForTheFirstTime_ge));}
					if(recoveryTimeForTheFirstTime_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.lt, recoveryTimeForTheFirstTime_lt));}
					if(recoveryTimeForTheFirstTime_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RECOVERY_TIME_FOR_THE_FIRST_TIME, QueryCondition.le, recoveryTimeForTheFirstTime_le));}
				  																if(bloodPressure1!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.eq, bloodPressure1));}
					if(bloodPressure1_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.gt, bloodPressure1_gt));}
					if(bloodPressure1_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.ge, bloodPressure1_ge));}
					if(bloodPressure1_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.lt, bloodPressure1_lt));}
					if(bloodPressure1_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.le, bloodPressure1_le));}
					if(bloodPressure1_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE1, QueryCondition.in, bloodPressure1_in));}
																if(bloodPressure2!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.eq, bloodPressure2));}
					if(bloodPressure2_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.gt, bloodPressure2_gt));}
					if(bloodPressure2_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.ge, bloodPressure2_ge));}
					if(bloodPressure2_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.lt, bloodPressure2_lt));}
					if(bloodPressure2_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.le, bloodPressure2_le));}
					if(bloodPressure2_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BLOOD_PRESSURE2, QueryCondition.in, bloodPressure2_in));}
																if(pulse!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.eq, pulse));}
					if(pulse_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.gt, pulse_gt));}
					if(pulse_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.ge, pulse_ge));}
					if(pulse_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.lt, pulse_lt));}
					if(pulse_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.le, pulse_le));}
					if(pulse_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PULSE, QueryCondition.in, pulse_in));}
																if(heartRate!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.eq, heartRate));}
					if(heartRate_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.gt, heartRate_gt));}
					if(heartRate_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.ge, heartRate_ge));}
					if(heartRate_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.lt, heartRate_lt));}
					if(heartRate_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.le, heartRate_le));}
					if(heartRate_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HEART_RATE, QueryCondition.in, heartRate_in));}
															  					if(rhythm!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.eq, rhythm));}
		            if(rhythm_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.like, rhythm_like));}
		            if(rhythm_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNull, rhythm_isNull));}
		            if(rhythm_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.isNotNull, rhythm_isNotNull));}
				    if(rhythm_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.RHYTHM, QueryCondition.in, rhythm_in));}
				  																if(breathing!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.eq, breathing));}
					if(breathing_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.gt, breathing_gt));}
					if(breathing_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.ge, breathing_ge));}
					if(breathing_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.lt, breathing_lt));}
					if(breathing_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.le, breathing_le));}
					if(breathing_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BREATHING, QueryCondition.in, breathing_in));}
															  					if(skinLesions!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.eq, skinLesions));}
		            if(skinLesions_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.like, skinLesions_like));}
		            if(skinLesions_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNull, skinLesions_isNull));}
		            if(skinLesions_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.isNotNull, skinLesions_isNotNull));}
				    if(skinLesions_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SKIN_LESIONS, QueryCondition.in, skinLesions_in));}
				  															  					if(stateOfConsciousness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.eq, stateOfConsciousness));}
		            if(stateOfConsciousness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.like, stateOfConsciousness_like));}
		            if(stateOfConsciousness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNull, stateOfConsciousness_isNull));}
		            if(stateOfConsciousness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.isNotNull, stateOfConsciousness_isNotNull));}
				    if(stateOfConsciousness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.STATE_OF_CONSCIOUSNESS, QueryCondition.in, stateOfConsciousness_in));}
				  															  					if(languageFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.eq, languageFunction));}
		            if(languageFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.like, languageFunction_like));}
		            if(languageFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNull, languageFunction_isNull));}
		            if(languageFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.isNotNull, languageFunction_isNotNull));}
				    if(languageFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LANGUAGE_FUNCTION, QueryCondition.in, languageFunction_in));}
				  															  					if(bilateralNormal!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.eq, bilateralNormal));}
		            if(bilateralNormal_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.like, bilateralNormal_like));}
		            if(bilateralNormal_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNull, bilateralNormal_isNull));}
		            if(bilateralNormal_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.isNotNull, bilateralNormal_isNotNull));}
				    if(bilateralNormal_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BILATERAL_NORMAL, QueryCondition.in, bilateralNormal_in));}
				  															  					if(dysfunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.eq, dysfunction));}
		            if(dysfunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.like, dysfunction_like));}
		            if(dysfunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNull, dysfunction_isNull));}
		            if(dysfunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.isNotNull, dysfunction_isNotNull));}
				    if(dysfunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DYSFUNCTION, QueryCondition.in, dysfunction_in));}
				  															  					if(handedness!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.eq, handedness));}
		            if(handedness_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.like, handedness_like));}
		            if(handedness_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNull, handedness_isNull));}
		            if(handedness_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.isNotNull, handedness_isNotNull));}
				    if(handedness_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.HANDEDNESS, QueryCondition.in, handedness_in));}
				  															  					if(limitedJointMovementOrFracture!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.eq, limitedJointMovementOrFracture));}
		            if(limitedJointMovementOrFracture_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.like, limitedJointMovementOrFracture_like));}
		            if(limitedJointMovementOrFracture_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNull, limitedJointMovementOrFracture_isNull));}
		            if(limitedJointMovementOrFracture_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.isNotNull, limitedJointMovementOrFracture_isNotNull));}
				    if(limitedJointMovementOrFracture_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.LIMITED_JOINT_MOVEMENT_OR_FRACTURE, QueryCondition.in, limitedJointMovementOrFracture_in));}
				  															  					if(muscleToneUpperLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.eq, muscleToneUpperLimb));}
		            if(muscleToneUpperLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.like, muscleToneUpperLimb_like));}
		            if(muscleToneUpperLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNull, muscleToneUpperLimb_isNull));}
		            if(muscleToneUpperLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.isNotNull, muscleToneUpperLimb_isNotNull));}
				    if(muscleToneUpperLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_UPPER_LIMB, QueryCondition.in, muscleToneUpperLimb_in));}
				  															  					if(muscleToneLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.eq, muscleToneLowerLimb));}
		            if(muscleToneLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.like, muscleToneLowerLimb_like));}
		            if(muscleToneLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNull, muscleToneLowerLimb_isNull));}
		            if(muscleToneLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.isNotNull, muscleToneLowerLimb_isNotNull));}
				    if(muscleToneLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_TONE_LOWER_LIMB, QueryCondition.in, muscleToneLowerLimb_in));}
				  															  					if(theBalanceFunctionOfTheSeat!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.eq, theBalanceFunctionOfTheSeat));}
		            if(theBalanceFunctionOfTheSeat_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.like, theBalanceFunctionOfTheSeat_like));}
		            if(theBalanceFunctionOfTheSeat_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNull, theBalanceFunctionOfTheSeat_isNull));}
		            if(theBalanceFunctionOfTheSeat_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.isNotNull, theBalanceFunctionOfTheSeat_isNotNull));}
				    if(theBalanceFunctionOfTheSeat_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.THE_BALANCE_FUNCTION_OF_THE_SEAT, QueryCondition.in, theBalanceFunctionOfTheSeat_in));}
				  															  					if(balanceFunction!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.eq, balanceFunction));}
		            if(balanceFunction_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.like, balanceFunction_like));}
		            if(balanceFunction_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNull, balanceFunction_isNull));}
		            if(balanceFunction_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.isNotNull, balanceFunction_isNotNull));}
				    if(balanceFunction_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BALANCE_FUNCTION, QueryCondition.in, balanceFunction_in));}
				  															  					if(upperLimbMuscleStrength!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.eq, upperLimbMuscleStrength));}
		            if(upperLimbMuscleStrength_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.like, upperLimbMuscleStrength_like));}
		            if(upperLimbMuscleStrength_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNull, upperLimbMuscleStrength_isNull));}
		            if(upperLimbMuscleStrength_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.isNotNull, upperLimbMuscleStrength_isNotNull));}
				    if(upperLimbMuscleStrength_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.UPPER_LIMB_MUSCLE_STRENGTH, QueryCondition.in, upperLimbMuscleStrength_in));}
				  															  					if(muscleStrengthOfLowerLimb!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.eq, muscleStrengthOfLowerLimb));}
		            if(muscleStrengthOfLowerLimb_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.like, muscleStrengthOfLowerLimb_like));}
		            if(muscleStrengthOfLowerLimb_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNull, muscleStrengthOfLowerLimb_isNull));}
		            if(muscleStrengthOfLowerLimb_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.isNotNull, muscleStrengthOfLowerLimb_isNotNull));}
				    if(muscleStrengthOfLowerLimb_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MUSCLE_STRENGTH_OF_LOWER_LIMB, QueryCondition.in, muscleStrengthOfLowerLimb_in));}
				  															  					if(reflectionDeepReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.eq, reflectionDeepReflection));}
		            if(reflectionDeepReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.like, reflectionDeepReflection_like));}
		            if(reflectionDeepReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNull, reflectionDeepReflection_isNull));}
		            if(reflectionDeepReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.isNotNull, reflectionDeepReflection_isNotNull));}
				    if(reflectionDeepReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLECTION_DEEP_REFLECTION, QueryCondition.in, reflectionDeepReflection_in));}
				  															  					if(reflexShallowReflection!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.eq, reflexShallowReflection));}
		            if(reflexShallowReflection_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.like, reflexShallowReflection_like));}
		            if(reflexShallowReflection_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNull, reflexShallowReflection_isNull));}
		            if(reflexShallowReflection_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.isNotNull, reflexShallowReflection_isNotNull));}
				    if(reflexShallowReflection_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_SHALLOW_REFLECTION, QueryCondition.in, reflexShallowReflection_in));}
				  															  					if(reflexPathologicalReflex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.eq, reflexPathologicalReflex));}
		            if(reflexPathologicalReflex_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.like, reflexPathologicalReflex_like));}
		            if(reflexPathologicalReflex_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNull, reflexPathologicalReflex_isNull));}
		            if(reflexPathologicalReflex_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.isNotNull, reflexPathologicalReflex_isNotNull));}
				    if(reflexPathologicalReflex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.REFLEX_PATHOLOGICAL_REFLEX, QueryCondition.in, reflexPathologicalReflex_in));}
				  															  					if(walkingAbilityWalkingAlone!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.eq, walkingAbilityWalkingAlone));}
		            if(walkingAbilityWalkingAlone_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.like, walkingAbilityWalkingAlone_like));}
		            if(walkingAbilityWalkingAlone_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNull, walkingAbilityWalkingAlone_isNull));}
		            if(walkingAbilityWalkingAlone_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.isNotNull, walkingAbilityWalkingAlone_isNotNull));}
				    if(walkingAbilityWalkingAlone_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WALKING_ABILITY_WALKING_ALONE, QueryCondition.in, walkingAbilityWalkingAlone_in));}
				  															  					if(withTheSupportOfAssistiveWalking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.eq, withTheSupportOfAssistiveWalking));}
		            if(withTheSupportOfAssistiveWalking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.like, withTheSupportOfAssistiveWalking_like));}
		            if(withTheSupportOfAssistiveWalking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNull, withTheSupportOfAssistiveWalking_isNull));}
		            if(withTheSupportOfAssistiveWalking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.isNotNull, withTheSupportOfAssistiveWalking_isNotNull));}
				    if(withTheSupportOfAssistiveWalking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.WITH_THE_SUPPORT_OF_ASSISTIVE_WALKING, QueryCondition.in, withTheSupportOfAssistiveWalking_in));}
				  															  					if(canNotWalk!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.eq, canNotWalk));}
		            if(canNotWalk_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.like, canNotWalk_like));}
		            if(canNotWalk_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNull, canNotWalk_isNull));}
		            if(canNotWalk_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.isNotNull, canNotWalk_isNotNull));}
				    if(canNotWalk_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CAN_NOT_WALK, QueryCondition.in, canNotWalk_in));}
				  															  					if(coordinatedFingerNoseTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.eq, coordinatedFingerNoseTest));}
		            if(coordinatedFingerNoseTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.like, coordinatedFingerNoseTest_like));}
		            if(coordinatedFingerNoseTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNull, coordinatedFingerNoseTest_isNull));}
		            if(coordinatedFingerNoseTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.isNotNull, coordinatedFingerNoseTest_isNotNull));}
				    if(coordinatedFingerNoseTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_FINGER_NOSE_TEST, QueryCondition.in, coordinatedFingerNoseTest_in));}
				  															  					if(coordinatedStandShaking!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.eq, coordinatedStandShaking));}
		            if(coordinatedStandShaking_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.like, coordinatedStandShaking_like));}
		            if(coordinatedStandShaking_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNull, coordinatedStandShaking_isNull));}
		            if(coordinatedStandShaking_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.isNotNull, coordinatedStandShaking_isNotNull));}
				    if(coordinatedStandShaking_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_STAND_SHAKING, QueryCondition.in, coordinatedStandShaking_in));}
				  															  					if(coordinatedTremor!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.eq, coordinatedTremor));}
		            if(coordinatedTremor_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.like, coordinatedTremor_like));}
		            if(coordinatedTremor_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNull, coordinatedTremor_isNull));}
		            if(coordinatedTremor_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.isNotNull, coordinatedTremor_isNotNull));}
				    if(coordinatedTremor_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATED_TREMOR, QueryCondition.in, coordinatedTremor_in));}
				  															  					if(coordinationAndKneeTibiaTest!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.eq, coordinationAndKneeTibiaTest));}
		            if(coordinationAndKneeTibiaTest_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.like, coordinationAndKneeTibiaTest_like));}
		            if(coordinationAndKneeTibiaTest_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNull, coordinationAndKneeTibiaTest_isNull));}
		            if(coordinationAndKneeTibiaTest_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.isNotNull, coordinationAndKneeTibiaTest_isNotNull));}
				    if(coordinationAndKneeTibiaTest_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COORDINATION_AND_KNEE_TIBIA_TEST, QueryCondition.in, coordinationAndKneeTibiaTest_in));}
				  																if(barthelIndex!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.eq, barthelIndex));}
					if(barthelIndex_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.gt, barthelIndex_gt));}
					if(barthelIndex_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.ge, barthelIndex_ge));}
					if(barthelIndex_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.lt, barthelIndex_lt));}
					if(barthelIndex_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.le, barthelIndex_le));}
					if(barthelIndex_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.BARTHEL_INDEX, QueryCondition.in, barthelIndex_in));}
																if(masEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.eq, masEvaluation));}
					if(masEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.gt, masEvaluation_gt));}
					if(masEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.ge, masEvaluation_ge));}
					if(masEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.lt, masEvaluation_lt));}
					if(masEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.le, masEvaluation_le));}
					if(masEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.MAS_EVALUATION, QueryCondition.in, masEvaluation_in));}
																if(facEvaluation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.eq, facEvaluation));}
					if(facEvaluation_gt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.gt, facEvaluation_gt));}
					if(facEvaluation_ge!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.ge, facEvaluation_ge));}
					if(facEvaluation_lt!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.lt, facEvaluation_lt));}
					if(facEvaluation_le!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.le, facEvaluation_le));}
					if(facEvaluation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.FAC_EVALUATION, QueryCondition.in, facEvaluation_in));}
															  					if(shoulderSubluxation!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.eq, shoulderSubluxation));}
		            if(shoulderSubluxation_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.like, shoulderSubluxation_like));}
		            if(shoulderSubluxation_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNull, shoulderSubluxation_isNull));}
		            if(shoulderSubluxation_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.isNotNull, shoulderSubluxation_isNotNull));}
				    if(shoulderSubluxation_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHOULDER_SUBLUXATION, QueryCondition.in, shoulderSubluxation_in));}
				  															  					if(contractureOfAchillesTendon!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.eq, contractureOfAchillesTendon));}
		            if(contractureOfAchillesTendon_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.like, contractureOfAchillesTendon_like));}
		            if(contractureOfAchillesTendon_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNull, contractureOfAchillesTendon_isNull));}
		            if(contractureOfAchillesTendon_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.isNotNull, contractureOfAchillesTendon_isNotNull));}
				    if(contractureOfAchillesTendon_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.CONTRACTURE_OF_ACHILLES_TENDON, QueryCondition.in, contractureOfAchillesTendon_in));}
				  															  					if(varusFootDrop!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.eq, varusFootDrop));}
		            if(varusFootDrop_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.like, varusFootDrop_like));}
		            if(varusFootDrop_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNull, varusFootDrop_isNull));}
		            if(varusFootDrop_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.isNotNull, varusFootDrop_isNotNull));}
				    if(varusFootDrop_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.VARUS_FOOT_DROP, QueryCondition.in, varusFootDrop_in));}
				  															  					if(kneeTooDeep!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.eq, kneeTooDeep));}
		            if(kneeTooDeep_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.like, kneeTooDeep_like));}
		            if(kneeTooDeep_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNull, kneeTooDeep_isNull));}
		            if(kneeTooDeep_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.isNotNull, kneeTooDeep_isNotNull));}
				    if(kneeTooDeep_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.KNEE_TOO_DEEP, QueryCondition.in, kneeTooDeep_in));}
				  															  					if(shallowFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.eq, shallowFeeling));}
		            if(shallowFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.like, shallowFeeling_like));}
		            if(shallowFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNull, shallowFeeling_isNull));}
		            if(shallowFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.isNotNull, shallowFeeling_isNotNull));}
				    if(shallowFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.SHALLOW_FEELING, QueryCondition.in, shallowFeeling_in));}
				  															  					if(deepFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.eq, deepFeeling));}
		            if(deepFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.like, deepFeeling_like));}
		            if(deepFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNull, deepFeeling_isNull));}
		            if(deepFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.isNotNull, deepFeeling_isNotNull));}
				    if(deepFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.DEEP_FEELING, QueryCondition.in, deepFeeling_in));}
				  															  					if(complexFeeling!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.eq, complexFeeling));}
		            if(complexFeeling_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.like, complexFeeling_like));}
		            if(complexFeeling_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNull, complexFeeling_isNull));}
		            if(complexFeeling_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.isNotNull, complexFeeling_isNotNull));}
				    if(complexFeeling_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.COMPLEX_FEELING, QueryCondition.in, complexFeeling_in));}
				  															  					if(pain!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.eq, pain));}
		            if(pain_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.like, pain_like));}
		            if(pain_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNull, pain_isNull));}
		            if(pain_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.isNotNull, pain_isNotNull));}
				    if(pain_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.PAIN, QueryCondition.in, pain_in));}
				  															  					if(jointMobility!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.eq, jointMobility));}
		            if(jointMobility_like!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.like, jointMobility_like));}
		            if(jointMobility_isNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNull, jointMobility_isNull));}
		            if(jointMobility_isNotNull!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.isNotNull, jointMobility_isNotNull));}
				    if(jointMobility_in!=null){qc.andCondition(new QueryCondition(RecoveryEntity.JOINT_MOBILITY, QueryCondition.in, jointMobility_in));}
				  										
				            						if (qc.getQueryNextCondition()!=null) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 						
										 	                 		                 //删除关联信息
						if(delSkinLesionsList!=null&&delSkinLesionsList.booleanValue()){
							List<Object> list=dbManager.queryByConditionNoTransaction(RecoveryEntity.class,qc);
							String strIds="";
							if(list!=null&&list.size()>0){
								for(Object obj:list){
									RecoveryEntity entity=(RecoveryEntity)obj;
									strIds += entity.getId()+",";
								}
								strIds = strIds.substring(0, strIds.length()-1);
							}
							if(strIds!=null&&!"".equals(strIds)){
								QueryCondition qc1 = new QueryCondition(SkinLesionsEntity.RECOVERY_ID, QueryCondition.in, strIds);
								dbManager.delByConditionsNoTransaction(SkinLesionsEntity.class, qc1);
							}
							
						}
				     				     				     				     										result = dbManager.delByConditionsNoTransaction(RecoveryEntity.class,qc);				
					tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		
}
