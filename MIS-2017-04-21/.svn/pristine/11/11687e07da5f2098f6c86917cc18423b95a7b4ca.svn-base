package fsk.parse.ecgStick;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;
import com.framework.system.db.manager.DBManager;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.ecgStick.EcgStickEntity;

import com.framework.system.util.JsonUtil;
import com.framework.system.db.query.OrderVO;

/**
 * @Title: Parse
 * @Description: 心电数据解析器
 * @author feng.gu
 * @date 2016-12-16 16:30:04
 * @version V1.0
 * 
 */
public class EcgStickParse {
	private static Logger logger = Logger.getLogger(EcgStickParse.class);
	private static EcgStickParse ecgStickParse;
	private DBManager dbManager = DBManager.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static EcgStickParse getInstance() {
		if (ecgStickParse == null) {
			ecgStickParse = new EcgStickParse();
		}
		return ecgStickParse;
	}

	public Map<String, Object> parse(int type, String command, String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command, reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command, reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command, String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			EcgStickEntity ecgStickReturn = null;
			List<EcgStickEntity> ecgStickListReturn = null;
			Integer idReturn = null;
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;

			// json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject) reqParams.get("content");
			if ("ADD_ECG_STICK_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				ecgStickReturn = new EcgStickEntity();
				if (true) {
					if (contentreq != null) {
						Integer id = (Integer) contentreq.get("id");
						if (id != null) {
							ecgStickReturn = (EcgStickEntity) dbManager
									.getById(id, EcgStickEntity.class);
							ecgStickReturn.setId(id);
						}
						Integer physiologicalParametersHistoryId = (Integer) contentreq
								.get("physiologicalParametersHistoryId");
						if (physiologicalParametersHistoryId != null) {
							ecgStickReturn
									.setPhysiologicalParametersHistoryId(physiologicalParametersHistoryId);
						}
						int type = Integer.parseInt(contentreq.get("type").toString());
						if (type > 0) {
							ecgStickReturn.setType(type);
						}
						Object data = (Object) contentreq.get("data");
						if (data != null) {
							ecgStickReturn.setData(data);
						}
						String createTime = (String) contentreq
								.get("createTime");
						if (createTime != null) {
							ecgStickReturn.setCreateTime(createTime);
						}
					}
				}
			} else if ("QUERY_ECG_STICK_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
					}
				}
			} else if ("QUERY_ECG_STICK_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer physiologicalParametersHistoryId_gt = (Integer) contentreq
								.get("physiologicalParametersHistoryId_gt");
						Integer physiologicalParametersHistoryId_ge = (Integer) contentreq
								.get("physiologicalParametersHistoryId_ge");
						Integer physiologicalParametersHistoryId_lt = (Integer) contentreq
								.get("physiologicalParametersHistoryId_lt");
						Integer physiologicalParametersHistoryId_le = (Integer) contentreq
								.get("physiologicalParametersHistoryId_le");
						String physiologicalParametersHistoryId_in = (String) contentreq
								.get("physiologicalParametersHistoryId_in");
						Integer physiologicalParametersHistoryId = (Integer) contentreq
								.get("physiologicalParametersHistoryId");
						if (physiologicalParametersHistoryId_gt != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_gt",
									physiologicalParametersHistoryId_gt);
						}
						if (physiologicalParametersHistoryId_ge != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_ge",
									physiologicalParametersHistoryId_ge);
						}
						if (physiologicalParametersHistoryId_lt != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_lt",
									physiologicalParametersHistoryId_lt);
						}
						if (physiologicalParametersHistoryId_le != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_le",
									physiologicalParametersHistoryId_le);
						}
						if (physiologicalParametersHistoryId_in != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_in",
									physiologicalParametersHistoryId_in);
						}
						if (physiologicalParametersHistoryId != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId",
									physiologicalParametersHistoryId);
						}
						String type_like = (String) contentreq.get("type_like");
						String type_isNull = (String) contentreq
								.get("type_isNull");
						String type_isNotNull = (String) contentreq
								.get("type_isNotNull");
						String type_in = (String) contentreq.get("type_in");
						String type = (String) contentreq.get("type");
						if (type_like != null) {
							queryMapReturn.put("type_like", type_like);
						}
						if (type_isNull != null) {
							queryMapReturn.put("type_isNull", type_isNull);
						}
						if (type_isNotNull != null) {
							queryMapReturn
									.put("type_isNotNull", type_isNotNull);
						}
						if (type_in != null) {
							queryMapReturn.put("type_in", type_in);
						}
						if (type != null) {
							queryMapReturn.put("type", type);
						}
						String data_like = (String) contentreq.get("data_like");
						String data_isNull = (String) contentreq
								.get("data_isNull");
						String data_isNotNull = (String) contentreq
								.get("data_isNotNull");
						String data_in = (String) contentreq.get("data_in");
						String data = (String) contentreq.get("data");
						if (data_like != null) {
							queryMapReturn.put("data_like", data_like);
						}
						if (data_isNull != null) {
							queryMapReturn.put("data_isNull", data_isNull);
						}
						if (data_isNotNull != null) {
							queryMapReturn
									.put("data_isNotNull", data_isNotNull);
						}
						if (data_in != null) {
							queryMapReturn.put("data_in", data_in);
						}
						if (data != null) {
							queryMapReturn.put("data", data);
						}
						String createTime_gt = (String) contentreq
								.get("createTime_gt");
						String createTime_ge = (String) contentreq
								.get("createTime_ge");
						String createTime_lt = (String) contentreq
								.get("createTime_lt");
						String createTime_le = (String) contentreq
								.get("createTime_le");
						if (createTime_gt != null) {
							queryMapReturn.put("createTime_gt", createTime_gt);
						}
						if (createTime_ge != null) {
							queryMapReturn.put("createTime_ge", createTime_ge);
						}
						if (createTime_lt != null) {
							queryMapReturn.put("createTime_lt", createTime_lt);
						}
						if (createTime_le != null) {
							queryMapReturn.put("createTime_le", createTime_le);
						}

					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null)
								&& (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp)
									.intValue();
						}
						if ((pagesizetemp != null)
								&& (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp)
									.intValue();
						}
					}
					Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray) orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for (int i = 0; i < order.size(); i++) {
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String) obj.get("column"));
							orderVO.setOrderType((String) obj.get("type"));
							orderListReturn.add(orderVO);
						}
					}
				}
			} else if ("DEL_ECG_STICK_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
					}
				}
			} else if ("DEL_ECG_STICK_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer physiologicalParametersHistoryId_gt = (Integer) contentreq
								.get("physiologicalParametersHistoryId_gt");
						Integer physiologicalParametersHistoryId_ge = (Integer) contentreq
								.get("physiologicalParametersHistoryId_ge");
						Integer physiologicalParametersHistoryId_lt = (Integer) contentreq
								.get("physiologicalParametersHistoryId_lt");
						Integer physiologicalParametersHistoryId_le = (Integer) contentreq
								.get("physiologicalParametersHistoryId_le");
						String physiologicalParametersHistoryId_in = (String) contentreq
								.get("physiologicalParametersHistoryId_in");
						Integer physiologicalParametersHistoryId = (Integer) contentreq
								.get("physiologicalParametersHistoryId");
						if (physiologicalParametersHistoryId_gt != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_gt",
									physiologicalParametersHistoryId_gt);
						}
						if (physiologicalParametersHistoryId_ge != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_ge",
									physiologicalParametersHistoryId_ge);
						}
						if (physiologicalParametersHistoryId_lt != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_lt",
									physiologicalParametersHistoryId_lt);
						}
						if (physiologicalParametersHistoryId_le != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_le",
									physiologicalParametersHistoryId_le);
						}
						if (physiologicalParametersHistoryId_in != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId_in",
									physiologicalParametersHistoryId_in);
						}
						if (physiologicalParametersHistoryId != null) {
							queryMapReturn.put(
									"physiologicalParametersHistoryId",
									physiologicalParametersHistoryId);
						}
						String type_like = (String) contentreq.get("type_like");
						String type_isNull = (String) contentreq
								.get("type_isNull");
						String type_isNotNull = (String) contentreq
								.get("type_isNotNull");
						String type_in = (String) contentreq.get("type_in");
						String type = (String) contentreq.get("type");
						if (type_like != null) {
							queryMapReturn.put("type_like", type_like);
						}
						if (type_isNull != null) {
							queryMapReturn.put("type_isNull", type_isNull);
						}
						if (type_isNotNull != null) {
							queryMapReturn
									.put("type_isNotNull", type_isNotNull);
						}
						if (type_in != null) {
							queryMapReturn.put("type_in", type_in);
						}
						if (type != null) {
							queryMapReturn.put("type", type);
						}
						String data_like = (String) contentreq.get("data_like");
						String data_isNull = (String) contentreq
								.get("data_isNull");
						String data_isNotNull = (String) contentreq
								.get("data_isNotNull");
						String data_in = (String) contentreq.get("data_in");
						String data = (String) contentreq.get("data");
						if (data_like != null) {
							queryMapReturn.put("data_like", data_like);
						}
						if (data_isNull != null) {
							queryMapReturn.put("data_isNull", data_isNull);
						}
						if (data_isNotNull != null) {
							queryMapReturn
									.put("data_isNotNull", data_isNotNull);
						}
						if (data_in != null) {
							queryMapReturn.put("data_in", data_in);
						}
						if (data != null) {
							queryMapReturn.put("data", data);
						}
						String createTime_gt = (String) contentreq
								.get("createTime_gt");
						String createTime_ge = (String) contentreq
								.get("createTime_ge");
						String createTime_lt = (String) contentreq
								.get("createTime_lt");
						String createTime_le = (String) contentreq
								.get("createTime_le");
						if (createTime_gt != null) {
							queryMapReturn.put("createTime_gt", createTime_gt);
						}
						if (createTime_ge != null) {
							queryMapReturn.put("createTime_ge", createTime_ge);
						}
						if (createTime_lt != null) {
							queryMapReturn.put("createTime_lt", createTime_lt);
						}
						if (createTime_le != null) {
							queryMapReturn.put("createTime_le", createTime_le);
						}

					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null)
								&& (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp)
									.intValue();
						}
						if ((pagesizetemp != null)
								&& (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp)
									.intValue();
						}
					}
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (ecgStickReturn != null) {
				parseMap.put("ecgStick", ecgStickReturn);
			}
			if (ecgStickListReturn != null && ecgStickListReturn.size() > 0) {
				parseMap.put("ecgStickList", ecgStickListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command, String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
