package fsk.handler.sendReceiveCareful;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.log4j.Logger;

import com.framework.system.business.handler.BaseHandler;
import com.framework.system.common.service.SystemService;
import com.framework.system.db.query.OrderVO;

import fsk.entity.sendReceiveCareful.SendReceiveCarefulEntity;
import fsk.pack.sendReceiveCareful.SendReceiveCarefulPack;
import fsk.parse.sendReceiveCareful.SendReceiveCarefulParse;
import fsk.service.sendReceiveCareful.SendReceiveCarefulService;
import fsk.service.sendReceiveCarefulPhoto.SendReceiveCarefulPhotoService;

/**
 * @Title: Handler
 * @Description: 交接班注意事项业务处理器
 * @author feng.gu
 * @date 2016-10-19 13:13:16
 * @version V1.0
 * 
 */
public class SendReceiveCarefulHandler extends BaseHandler {
	private static Logger logger = Logger.getLogger(SendReceiveCarefulService.class);
	/**
	 * 解析器
	 */
	private SendReceiveCarefulParse sendReceiveCarefulParse = SendReceiveCarefulParse.getInstance();
	/**
	 * 业务处理器
	 */
	private SendReceiveCarefulService sendReceiveCarefulService = SendReceiveCarefulService.getInstance();
	private static SendReceiveCarefulPhotoService sendReceiveCarefulPhotoService = SendReceiveCarefulPhotoService.getInstance();
	/**
	 * 封装器
	 */
	private SendReceiveCarefulPack sendReceiveCarefulPack = SendReceiveCarefulPack.getInstance();

	private static SendReceiveCarefulHandler sendReceiveCarefulHandler;

	/**
	 * 系统服务类
	 */
	private SystemService systemService = SystemService.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static SendReceiveCarefulHandler getInstance() {
		if (sendReceiveCarefulHandler == null) {
			sendReceiveCarefulHandler = new SendReceiveCarefulHandler();
		}
		return sendReceiveCarefulHandler;
	}

	/**
	 * 
	 * @param type
	 *            1-json 2-xml
	 * @param entityName
	 * @param command
	 * @param reqStr
	 * @param request
	 * @param response
	 */
	public String doHandler(int type, String command, String reqStr, HttpServletRequest request, HttpServletResponse response) {
		logger.debug("请求消息：" + reqStr);
		String resultStr = "";
		try {
			// 解析
			Map<String, Object> parseMap = sendReceiveCarefulParse.parse(type, command, reqStr, request);
			String action = (String) parseMap.get("action");
			SendReceiveCarefulEntity sendReceiveCareful = (SendReceiveCarefulEntity) parseMap.get("sendReceiveCareful");
			List<SendReceiveCarefulEntity> sendReceiveCarefulList = (List<SendReceiveCarefulEntity>) parseMap.get("sendReceiveCarefulList");
			Integer id = (Integer) parseMap.get("id");
			Map<String, Object> queryMap = (Map<String, Object>) parseMap.get("queryMap");
			Integer pageno = (Integer) parseMap.get("pageno");
			Integer pagesize = (Integer) parseMap.get("pagesize");
			List<OrderVO> orderList = (List<OrderVO>) parseMap.get("orderList");

			Boolean sendReceiveShow = (Boolean) parseMap.get("sendReceiveShow");
			Boolean delSendReceive = (Boolean) parseMap.get("delSendReceive");
			Boolean sendReceiveCarefulPhotoListShow = (Boolean) parseMap.get("sendReceiveCarefulPhotoListShow");
			Boolean delSendReceiveCarefulPhotoList = (Boolean) parseMap.get("delSendReceiveCarefulPhotoList");

			// 业务处理
			Object result = null;
			if ("save".equals(action)) {
				if (sendReceiveCareful.getId() != null && sendReceiveCareful.getSendReceiveCarefulPhotoList() != null) {
					Map<String, Object> delMap = new HashMap<String, Object>();
					delMap.put("sendReceiveCarefulId", sendReceiveCareful.getId());
					sendReceiveCarefulPhotoService.delList(delMap, false);

				}
				result = sendReceiveCarefulService.save(sendReceiveCareful);
			} else if ("saveList".equals(action)) {
				result = sendReceiveCarefulService.saveList(sendReceiveCarefulList);
			} else if ("getById".equals(action)) {
				result = sendReceiveCarefulService.getById(id, sendReceiveShow, sendReceiveCarefulPhotoListShow);
			} else if ("getListByCondition".equals(action)) {
				// 根据数据权限 增加查询条件
				queryMap = systemService.addDataRuleByRoles("SendReceiveCarefulEntity", queryMap, request);
				result = sendReceiveCarefulService.getListByCondition(queryMap, orderList, pageno, pagesize, sendReceiveShow, sendReceiveCarefulPhotoListShow);
			} else if ("del".equals(action)) {
				result = sendReceiveCarefulService.del(id, delSendReceive, delSendReceiveCarefulPhotoList);
			} else if ("delList".equals(action)) {
				result = sendReceiveCarefulService.delList(queryMap, delSendReceive, delSendReceiveCarefulPhotoList);
			}
			// 封装
			Map<String, Object> packMap = sendReceiveCarefulPack.pack(type, action, result, sendReceiveCareful);
			String actionBack = (String) packMap.get("action");
			String resultBack = (String) packMap.get("result");
			String desBack = (String) packMap.get("des");
			JSONObject pageBack = (JSONObject) packMap.get("page");
			JSONObject contentBack = (JSONObject) packMap.get("content");

			JSONObject repJson = new JSONObject();
			if (actionBack != null && !"".equals(actionBack)) {
				repJson.put("action", actionBack);
			}
			if (resultBack != null && !"".equals(resultBack)) {
				repJson.put("result", resultBack);
			}
			if (desBack != null && !"".equals(desBack)) {
				repJson.put("des", desBack);
			}
			if (pageBack != null) {
				repJson.put("page", pageBack);
			}
			if (contentBack != null && !"".equals(contentBack)) {
				repJson.put("content", contentBack);
			}
			logger.debug("返回消息：" + repJson.toString());
			resultStr = repJson.toString();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return resultStr;
	}
}
