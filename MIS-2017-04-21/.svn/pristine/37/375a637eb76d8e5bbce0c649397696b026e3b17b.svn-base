package fsk.parse.assessmentTask;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.assessmentTask.AssessmentTaskEntity;

import fsk.entity.older.OlderEntity;
import fsk.entity.healthAssessment.HealthAssessmentEntity;
import fsk.entity.employee.EmployeeEntity;
import fsk.entity.employee.EmployeeEntity;
import fsk.entity.assessmentLog.AssessmentLogEntity;

import com.framework.system.util.JsonUtil;
import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.OrderVO;

/**
 * @Title: Parse
 * @Description: 评估任务解析器
 * @author feng.gu
 * @date 2016-07-19 11:09:30
 * @version V1.0
 * 
 */
public class AssessmentTaskParse {
	private static Logger logger = Logger.getLogger(AssessmentTaskParse.class);
	private static AssessmentTaskParse assessmentTaskParse;
	private DBManager dbManager = DBManager.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static AssessmentTaskParse getInstance() {
		if (assessmentTaskParse == null) {
			assessmentTaskParse = new AssessmentTaskParse();
		}
		return assessmentTaskParse;
	}

	public Map<String, Object> parse(int type, String command, String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command, reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command, reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command, String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			AssessmentTaskEntity assessmentTaskReturn = null;
			List<AssessmentTaskEntity> assessmentTaskListReturn = null;
			Integer idReturn = null;
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;

			Boolean olderShowReturn = false;
			Boolean delOlderReturn = false;
			Boolean healthAssessmentShowReturn = false;
			Boolean delHealthAssessmentReturn = false;
			Boolean distributeEmployeeShowReturn = false;
			Boolean delDistributeEmployeeReturn = false;
			Boolean assessmentEmployeeShowReturn = false;
			Boolean delAssessmentEmployeeReturn = false;
			Boolean assessmentLogListShowReturn = false;
			Boolean delAssessmentLogListReturn = false;

			// json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject) reqParams.get("content");
			if ("ADD_ASSESSMENT_TASK_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				assessmentTaskReturn = new AssessmentTaskEntity();
				if (true) {
					if (contentreq != null) {
						Integer id = (Integer) contentreq.get("id");
						if (id != null) {
							assessmentTaskReturn.setId(id);
							/*分量保存pei*/
							assessmentTaskReturn  = (AssessmentTaskEntity)dbManager.getById(id, AssessmentTaskEntity.class);
						}
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId != null) {
							assessmentTaskReturn.setOlderId(olderId);
						}
						String olderName = (String) contentreq.get("olderName");
						if (olderName != null) {
							assessmentTaskReturn.setOlderName(olderName);
						}
						String distributeTime = (String) contentreq
								.get("distributeTime");
						if (distributeTime != null) {
							assessmentTaskReturn
									.setDistributeTime(distributeTime);
						}
						Integer distributeEmployeeId = (Integer) contentreq
								.get("distributeEmployeeId");
						if (distributeEmployeeId != null) {
							assessmentTaskReturn
									.setDistributeEmployeeId(distributeEmployeeId);
						}
						String distributeName = (String) contentreq
								.get("distributeName");
						if (distributeName != null) {
							assessmentTaskReturn
									.setDistributeName(distributeName);
						}
						String expectedCompletionTime = (String) contentreq
								.get("expectedCompletionTime");
						if (expectedCompletionTime != null) {
							assessmentTaskReturn
									.setExpectedCompletionTime(expectedCompletionTime);
						}
						Integer healthAssessmentType = (Integer) contentreq
								.get("healthAssessmentType");
						if (healthAssessmentType != null) {
							assessmentTaskReturn
									.setHealthAssessmentType(healthAssessmentType);
						}
						Integer healthAssessmentId = (Integer) contentreq
								.get("healthAssessmentId");
						if (healthAssessmentId != null) {
							assessmentTaskReturn
									.setHealthAssessmentId(healthAssessmentId);
						}
						Integer healthAssessmentStatus = (Integer) contentreq
								.get("healthAssessmentStatus");
						if (healthAssessmentStatus != null) {
							assessmentTaskReturn
									.setHealthAssessmentStatus(healthAssessmentStatus);
						}
						String des = (String) contentreq.get("des");
						if (des != null) {
							assessmentTaskReturn.setDes(des);
						}
						Integer assessmentEmployeeId = (Integer) contentreq
								.get("assessmentEmployeeId");
						if (assessmentEmployeeId != null) {
							assessmentTaskReturn
									.setAssessmentEmployeeId(assessmentEmployeeId);
						}
						String assessmentName = (String) contentreq
								.get("assessmentName");
						if (assessmentName != null) {
							assessmentTaskReturn
									.setAssessmentName(assessmentName);
						}
						Integer taskStatus = (Integer) contentreq
								.get("taskStatus");
						if (taskStatus != null) {
							assessmentTaskReturn.setTaskStatus(taskStatus);
						}
						String auditPassTime = (String) contentreq
								.get("auditPassTime");
						if (auditPassTime != null) {
							assessmentTaskReturn
									.setAuditPassTime(auditPassTime);
						}
					}
				}
				if (true) {
					Object older = contentreq.get("older");
					if (older != null) {
						JSONObject obj = (JSONObject) older;
						if (obj != null) {
							OlderEntity entity = new OlderEntity();
							Integer id = (Integer) obj.get("id");
							if (id != null) {
								entity.setId(id);
							}
							Integer nurseEmployeeId = (Integer) obj
									.get("nurseEmployeeId");
							if (nurseEmployeeId != null) {
								entity.setNurseEmployeeId(nurseEmployeeId);
							}
							Integer userId = (Integer) obj.get("userId");
							if (userId != null) {
								entity.setUserId(userId);
							}
							String memberNum = (String) obj.get("memberNum");
							if (memberNum != null) {
								entity.setMemberNum(memberNum);
							}
							String memberSource = (String) obj
									.get("memberSource");
							if (memberSource != null) {
								entity.setMemberSource(memberSource);
							}
							String attentionPoint = (String) obj
									.get("attentionPoint");
							if (attentionPoint != null) {
								entity.setAttentionPoint(attentionPoint);
							}
							Integer nurseLevel = (Integer) obj
									.get("nurseLevel");
							if (nurseLevel != null) {
								entity.setNurseLevel(nurseLevel);
							}
							Integer memberStatus = (Integer) obj
									.get("memberStatus");
							if (memberStatus != null) {
								entity.setMemberStatus(memberStatus);
							}
							String lastAssessmentDate = (String) obj
									.get("lastAssessmentDate");
							if (lastAssessmentDate != null) {
								entity.setLastAssessmentDate(lastAssessmentDate);
							}
							Integer assessmentCycle = (Integer) obj
									.get("assessmentCycle");
							if (assessmentCycle != null) {
								entity.setAssessmentCycle(assessmentCycle);
							}
							Double chargeMonth = JsonUtil.getJSONDouble(obj,
									"chargeMonth");
							if (chargeMonth != null) {
								entity.setChargeMonth(BigDecimal
										.valueOf(chargeMonth));
							}
							Integer requiredServiceTimes = (Integer) obj
									.get("requiredServiceTimes");
							if (requiredServiceTimes != null) {
								entity.setRequiredServiceTimes(requiredServiceTimes);
							}
							Integer alreadyServiceTimes = (Integer) obj
									.get("alreadyServiceTimes");
							if (alreadyServiceTimes != null) {
								entity.setAlreadyServiceTimes(alreadyServiceTimes);
							}
							String mainPhoto = (String) obj.get("mainPhoto");
							if (mainPhoto != null) {
								entity.setMainPhoto(mainPhoto);
							}
							String name = (String) obj.get("name");
							if (name != null) {
								entity.setName(name);
							}
							String idnumber = (String) obj.get("idnumber");
							if (idnumber != null) {
								entity.setIdnumber(idnumber);
							}
							String socialSecurityNumber = (String) obj
									.get("socialSecurityNumber");
							if (socialSecurityNumber != null) {
								entity.setSocialSecurityNumber(socialSecurityNumber);
							}
							String gender = (String) obj.get("gender");
							if (gender != null) {
								entity.setGender(gender);
							}
							String birthdate = (String) obj.get("birthdate");
							if (birthdate != null) {
								entity.setBirthdate(birthdate);
							}
							String nation = (String) obj.get("nation");
							if (nation != null) {
								entity.setNation(nation);
							}
							String education = (String) obj.get("education");
							if (education != null) {
								entity.setEducation(education);
							}
							String maritalStatus = (String) obj
									.get("maritalStatus");
							if (maritalStatus != null) {
								entity.setMaritalStatus(maritalStatus);
							}
							String occupation = (String) obj.get("occupation");
							if (occupation != null) {
								entity.setOccupation(occupation);
							}
							String homeTel = (String) obj.get("homeTel");
							if (homeTel != null) {
								entity.setHomeTel(homeTel);
							}
							String mobileTel = (String) obj.get("mobileTel");
							if (mobileTel != null) {
								entity.setMobileTel(mobileTel);
							}
							String bloodType = (String) obj.get("bloodType");
							if (bloodType != null) {
								entity.setBloodType(bloodType);
							}
							String symptom = (String) obj.get("symptom");
							if (symptom != null) {
								entity.setSymptom(symptom);
							}
							String symptomOther = (String) obj
									.get("symptomOther");
							if (symptomOther != null) {
								entity.setSymptomOther(symptomOther);
							}
							String drugAllergy = (String) obj
									.get("drugAllergy");
							if (drugAllergy != null) {
								entity.setDrugAllergy(drugAllergy);
							}
							String drugAllergyOther = (String) obj
									.get("drugAllergyOther");
							if (drugAllergyOther != null) {
								entity.setDrugAllergyOther(drugAllergyOther);
							}
							String cognitive = (String) obj.get("cognitive");
							if (cognitive != null) {
								entity.setCognitive(cognitive);
							}
							String emotion = (String) obj.get("emotion");
							if (emotion != null) {
								entity.setEmotion(emotion);
							}
							String sportsFre = (String) obj.get("sportsFre");
							if (sportsFre != null) {
								entity.setSportsFre(sportsFre);
							}
							Integer sportsTime = (Integer) obj
									.get("sportsTime");
							if (sportsTime != null) {
								entity.setSportsTime(sportsTime);
							}
							Integer holdSportsTime = (Integer) obj
									.get("holdSportsTime");
							if (holdSportsTime != null) {
								entity.setHoldSportsTime(holdSportsTime);
							}
							String sportsType = (String) obj.get("sportsType");
							if (sportsType != null) {
								entity.setSportsType(sportsType);
							}
							String diet = (String) obj.get("diet");
							if (diet != null) {
								entity.setDiet(diet);
							}
							String smoking = (String) obj.get("smoking");
							if (smoking != null) {
								entity.setSmoking(smoking);
							}
							Integer smokingDay = (Integer) obj
									.get("smokingDay");
							if (smokingDay != null) {
								entity.setSmokingDay(smokingDay);
							}
							String quitAlcohol = (String) obj
									.get("quitAlcohol");
							if (quitAlcohol != null) {
								entity.setQuitAlcohol(quitAlcohol);
							}
							Integer quitAlcoholAge = (Integer) obj
									.get("quitAlcoholAge");
							if (quitAlcoholAge != null) {
								entity.setQuitAlcoholAge(quitAlcoholAge);
							}
							Integer startAlcoholAge = (Integer) obj
									.get("startAlcoholAge");
							if (startAlcoholAge != null) {
								entity.setStartAlcoholAge(startAlcoholAge);
							}
							Integer drunkYear = (Integer) obj.get("drunkYear");
							if (drunkYear != null) {
								entity.setDrunkYear(drunkYear);
							}
							String alcoholType = (String) obj
									.get("alcoholType");
							if (alcoholType != null) {
								entity.setAlcoholType(alcoholType);
							}
							String alcoholTypeOther = (String) obj
									.get("alcoholTypeOther");
							if (alcoholTypeOther != null) {
								entity.setAlcoholTypeOther(alcoholTypeOther);
							}
							String brainBloodVessel = (String) obj
									.get("brainBloodVessel");
							if (brainBloodVessel != null) {
								entity.setBrainBloodVessel(brainBloodVessel);
							}
							String brainBloodVesselOther = (String) obj
									.get("brainBloodVesselOther");
							if (brainBloodVesselOther != null) {
								entity.setBrainBloodVesselOther(brainBloodVesselOther);
							}
							String kindney = (String) obj.get("kindney");
							if (kindney != null) {
								entity.setKindney(kindney);
							}
							String kindneyOther = (String) obj
									.get("kindneyOther");
							if (kindneyOther != null) {
								entity.setKindneyOther(kindneyOther);
							}
							String heart = (String) obj.get("heart");
							if (heart != null) {
								entity.setHeart(heart);
							}
							String heartOther = (String) obj.get("heartOther");
							if (heartOther != null) {
								entity.setHeartOther(heartOther);
							}
							String bloodVessel = (String) obj
									.get("bloodVessel");
							if (bloodVessel != null) {
								entity.setBloodVessel(bloodVessel);
							}
							String bloodVesselOther = (String) obj
									.get("bloodVesselOther");
							if (bloodVesselOther != null) {
								entity.setBloodVesselOther(bloodVesselOther);
							}
							String eye = (String) obj.get("eye");
							if (eye != null) {
								entity.setEye(eye);
							}
							String eyeOther = (String) obj.get("eyeOther");
							if (eyeOther != null) {
								entity.setEyeOther(eyeOther);
							}
							String otherDisease = (String) obj
									.get("otherDisease");
							if (otherDisease != null) {
								entity.setOtherDisease(otherDisease);
							}
							Integer serviceProvinceId = (Integer) obj
									.get("serviceProvinceId");
							if (serviceProvinceId != null) {
								entity.setServiceProvinceId(serviceProvinceId);
							}
							Integer serviceCityId = (Integer) obj
									.get("serviceCityId");
							if (serviceCityId != null) {
								entity.setServiceCityId(serviceCityId);
							}
							Integer serviceAreaId = (Integer) obj
									.get("serviceAreaId");
							if (serviceAreaId != null) {
								entity.setServiceAreaId(serviceAreaId);
							}
							Integer serviceStreetId = (Integer) obj
									.get("serviceStreetId");
							if (serviceStreetId != null) {
								entity.setServiceStreetId(serviceStreetId);
							}
							String familyComposition = (String) obj
									.get("familyComposition");
							if (familyComposition != null) {
								entity.setFamilyComposition(familyComposition);
							}
							String live = (String) obj.get("live");
							if (live != null) {
								entity.setLive(live);
							}
							String liveOther = (String) obj.get("liveOther");
							if (liveOther != null) {
								entity.setLiveOther(liveOther);
							}
							String economic = (String) obj.get("economic");
							if (economic != null) {
								entity.setEconomic(economic);
							}
							String economicOther = (String) obj
									.get("economicOther");
							if (economicOther != null) {
								entity.setEconomicOther(economicOther);
							}
							String house = (String) obj.get("house");
							if (house != null) {
								entity.setHouse(house);
							}
							String houseOther = (String) obj.get("houseOther");
							if (houseOther != null) {
								entity.setHouseOther(houseOther);
							}
							String interest = (String) obj.get("interest");
							if (interest != null) {
								entity.setInterest(interest);
							}
							String lifeExperience = (String) obj
									.get("lifeExperience");
							if (lifeExperience != null) {
								entity.setLifeExperience(lifeExperience);
							}
							String specialExperience = (String) obj
									.get("specialExperience");
							if (specialExperience != null) {
								entity.setSpecialExperience(specialExperience);
							}
							String specialExperienceOther = (String) obj
									.get("specialExperienceOther");
							if (specialExperienceOther != null) {
								entity.setSpecialExperienceOther(specialExperienceOther);
							}
							String residence = (String) obj.get("residence");
							if (residence != null) {
								entity.setResidence(residence);
							}
							String elevator = (String) obj.get("elevator");
							if (elevator != null) {
								entity.setElevator(elevator);
							}
							String step = (String) obj.get("step");
							if (step != null) {
								entity.setStep(step);
							}
							String stepOther = (String) obj.get("stepOther");
							if (stepOther != null) {
								entity.setStepOther(stepOther);
							}
							String restroom = (String) obj.get("restroom");
							if (restroom != null) {
								entity.setRestroom(restroom);
							}
							String restroomOther = (String) obj
									.get("restroomOther");
							if (restroomOther != null) {
								entity.setRestroomOther(restroomOther);
							}
							String bathroomTub = (String) obj
									.get("bathroomTub");
							if (bathroomTub != null) {
								entity.setBathroomTub(bathroomTub);
							}
							String bathroomShower = (String) obj
									.get("bathroomShower");
							if (bathroomShower != null) {
								entity.setBathroomShower(bathroomShower);
							}
							String bathroomStrip = (String) obj
									.get("bathroomStrip");
							if (bathroomStrip != null) {
								entity.setBathroomStrip(bathroomStrip);
							}
							String kitchenOther = (String) obj
									.get("kitchenOther");
							if (kitchenOther != null) {
								entity.setKitchenOther(kitchenOther);
							}
							String kitchen = (String) obj.get("kitchen");
							if (kitchen != null) {
								entity.setKitchen(kitchen);
							}
							String clean = (String) obj.get("clean");
							if (clean != null) {
								entity.setClean(clean);
							}
							String shopping = (String) obj.get("shopping");
							if (shopping != null) {
								entity.setShopping(shopping);
							}
							String shoppingTraffic = (String) obj
									.get("shoppingTraffic");
							if (shoppingTraffic != null) {
								entity.setShoppingTraffic(shoppingTraffic);
							}
							String shoppingAccessibility = (String) obj
									.get("shoppingAccessibility");
							if (shoppingAccessibility != null) {
								entity.setShoppingAccessibility(shoppingAccessibility);
							}
							String shoppingOther = (String) obj
									.get("shoppingOther");
							if (shoppingOther != null) {
								entity.setShoppingOther(shoppingOther);
							}
							String livingEnvironmentDefect = (String) obj
									.get("livingEnvironmentDefect");
							if (livingEnvironmentDefect != null) {
								entity.setLivingEnvironmentDefect(livingEnvironmentDefect);
							}
							String dailyWater = (String) obj.get("dailyWater");
							if (dailyWater != null) {
								entity.setDailyWater(dailyWater);
							}
							String dailyDrinking = (String) obj
									.get("dailyDrinking");
							if (dailyDrinking != null) {
								entity.setDailyDrinking(dailyDrinking);
							}
							String drinking = (String) obj.get("drinking");
							if (drinking != null) {
								entity.setDrinking(drinking);
							}
							String gadget = (String) obj.get("gadget");
							if (gadget != null) {
								entity.setGadget(gadget);
							}
							String mainFood = (String) obj.get("mainFood");
							if (mainFood != null) {
								entity.setMainFood(mainFood);
							}
							String fruitsVegetables = (String) obj
									.get("fruitsVegetables");
							if (fruitsVegetables != null) {
								entity.setFruitsVegetables(fruitsVegetables);
							}
							String salt = (String) obj.get("salt");
							if (salt != null) {
								entity.setSalt(salt);
							}
							String oil = (String) obj.get("oil");
							if (oil != null) {
								entity.setOil(oil);
							}
							String fish = (String) obj.get("fish");
							if (fish != null) {
								entity.setFish(fish);
							}
							String meat = (String) obj.get("meat");
							if (meat != null) {
								entity.setMeat(meat);
							}
							String beanProducts = (String) obj
									.get("beanProducts");
							if (beanProducts != null) {
								entity.setBeanProducts(beanProducts);
							}
							String milk = (String) obj.get("milk");
							if (milk != null) {
								entity.setMilk(milk);
							}
							String foodForm = (String) obj.get("foodForm");
							if (foodForm != null) {
								entity.setFoodForm(foodForm);
							}
							String dysphagia = (String) obj.get("dysphagia");
							if (dysphagia != null) {
								entity.setDysphagia(dysphagia);
							}
							String morningSit = (String) obj.get("morningSit");
							if (morningSit != null) {
								entity.setMorningSit(morningSit);
							}
							String noonSit = (String) obj.get("noonSit");
							if (noonSit != null) {
								entity.setNoonSit(noonSit);
							}
							String nightSit = (String) obj.get("nightSit");
							if (nightSit != null) {
								entity.setNightSit(nightSit);
							}
							String lateAfternoonTea = (String) obj
									.get("lateAfternoonTea");
							if (lateAfternoonTea != null) {
								entity.setLateAfternoonTea(lateAfternoonTea);
							}
							String urine = (String) obj.get("urine");
							if (urine != null) {
								entity.setUrine(urine);
							}
							String urineNum = (String) obj.get("urineNum");
							if (urineNum != null) {
								entity.setUrineNum(urineNum);
							}
							String urineMethod = (String) obj
									.get("urineMethod");
							if (urineMethod != null) {
								entity.setUrineMethod(urineMethod);
							}
							String urineType = (String) obj.get("urineType");
							if (urineType != null) {
								entity.setUrineType(urineType);
							}
							String urineTypeOther = (String) obj
									.get("urineTypeOther");
							if (urineTypeOther != null) {
								entity.setUrineTypeOther(urineTypeOther);
							}
							String shit = (String) obj.get("shit");
							if (shit != null) {
								entity.setShit(shit);
							}
							String shitDay = (String) obj.get("shitDay");
							if (shitDay != null) {
								entity.setShitDay(shitDay);
							}
							String shitMethod = (String) obj.get("shitMethod");
							if (shitMethod != null) {
								entity.setShitMethod(shitMethod);
							}
							String shitType = (String) obj.get("shitType");
							if (shitType != null) {
								entity.setShitType(shitType);
							}
							String shitTypeOther = (String) obj
									.get("shitTypeOther");
							if (shitTypeOther != null) {
								entity.setShitTypeOther(shitTypeOther);
							}
							String sportsForm = (String) obj.get("sportsForm");
							if (sportsForm != null) {
								entity.setSportsForm(sportsForm);
							}
							String sportsT = (String) obj.get("sportsT");
							if (sportsT != null) {
								entity.setSportsT(sportsT);
							}
							String sportsF = (String) obj.get("sportsF");
							if (sportsF != null) {
								entity.setSportsF(sportsF);
							}
							String sportsNo = (String) obj.get("sportsNo");
							if (sportsNo != null) {
								entity.setSportsNo(sportsNo);
							}
							String bathNum = (String) obj.get("bathNum");
							if (bathNum != null) {
								entity.setBathNum(bathNum);
							}
							String bathMethod = (String) obj.get("bathMethod");
							if (bathMethod != null) {
								entity.setBathMethod(bathMethod);
							}
							String goOut = (String) obj.get("goOut");
							if (goOut != null) {
								entity.setGoOut(goOut);
							}
							String goOutOther = (String) obj.get("goOutOther");
							if (goOutOther != null) {
								entity.setGoOutOther(goOutOther);
							}
							String brush = (String) obj.get("brush");
							if (brush != null) {
								entity.setBrush(brush);
							}
							String communication = (String) obj
									.get("communication");
							if (communication != null) {
								entity.setCommunication(communication);
							}
							String sleepHour = (String) obj.get("sleepHour");
							if (sleepHour != null) {
								entity.setSleepHour(sleepHour);
							}
							String sleepQuality = (String) obj
									.get("sleepQuality");
							if (sleepQuality != null) {
								entity.setSleepQuality(sleepQuality);
							}
							String morningSpirit = (String) obj
									.get("morningSpirit");
							if (morningSpirit != null) {
								entity.setMorningSpirit(morningSpirit);
							}
							assessmentTaskReturn.setOlder(entity);
						}
					}
				}
				if (true) {
					Object healthAssessment = contentreq
							.get("healthAssessment");
					if (healthAssessment != null) {
						JSONObject obj = (JSONObject) healthAssessment;
						if (obj != null) {
							HealthAssessmentEntity entity = new HealthAssessmentEntity();
							Integer id = (Integer) obj.get("id");
							if (id != null) {
								entity.setId(id);
								/*分量保存*/
								entity = (HealthAssessmentEntity)dbManager.getById(id, HealthAssessmentEntity.class);
							}
							String assessmentTime = (String) obj
									.get("assessmentTime");
							if (assessmentTime != null) {
								entity.setAssessmentTime(assessmentTime);
							}
							Integer olderId = (Integer) obj.get("olderId");
							if (olderId != null) {
								entity.setOlderId(olderId);
							}
							Integer employeeId = (Integer) obj
									.get("employeeId");
							if (employeeId != null) {
								entity.setEmployeeId(employeeId);
							}
							Integer type = (Integer) obj.get("type");
							if (type != null) {
								entity.setType(type);
							}
							Integer status = (Integer) obj.get("status");
							if (status != null) {
								entity.setStatus(status);
							}
							Integer healthReportId = (Integer) obj
									.get("healthReportId");
							if (healthReportId != null) {
								entity.setHealthReportId(healthReportId);
							}
							Integer recoveryId = (Integer) obj
									.get("recoveryId");
							if (recoveryId != null) {
								entity.setRecoveryId(recoveryId);
							}
							Integer adlId = (Integer) obj.get("adlId");
							if (adlId != null) {
								entity.setAdlId(adlId);
							}
							Integer nutritionId = (Integer) obj
									.get("nutritionId");
							if (nutritionId != null) {
								entity.setNutritionId(nutritionId);
							}
							Integer fallId = (Integer) obj.get("fallId");
							if (fallId != null) {
								entity.setFallId(fallId);
							}
							Integer soreId = (Integer) obj.get("soreId");
							if (soreId != null) {
								entity.setSoreId(soreId);
							}
							Integer mmseId = (Integer) obj.get("mmseId");
							if (mmseId != null) {
								entity.setMmseId(mmseId);
							}
							Integer taskStatus = (Integer) obj
									.get("taskStatus");
							if (taskStatus != null) {
								entity.setTaskStatus(taskStatus);
							}
							Integer masId = (Integer) obj.get("masId");
							if (masId != null) {
								entity.setMasId(masId);
							}
							Integer barthelId = (Integer) obj.get("barthelId");
							if (barthelId != null) {
								entity.setBarthelId(barthelId);
							}
							Integer fcaId = (Integer) obj.get("fcaId");
							if (fcaId != null) {
								entity.setFcaId(fcaId);
							}
							assessmentTaskReturn.setHealthAssessment(entity);
						}
					}
				}
				if (true) {
					Object distributeEmployee = contentreq
							.get("distributeEmployee");
					if (distributeEmployee != null) {
						JSONObject obj = (JSONObject) distributeEmployee;
						if (obj != null) {
							EmployeeEntity entity = new EmployeeEntity();
							Integer id = (Integer) obj.get("id");
							if (id != null) {
								entity.setId(id);
							}
							Integer userId = (Integer) obj.get("userId");
							if (userId != null) {
								entity.setUserId(userId);
							}
							Integer leaderEmployeeId = (Integer) obj
									.get("leaderEmployeeId");
							if (leaderEmployeeId != null) {
								entity.setLeaderEmployeeId(leaderEmployeeId);
							}
							String mainPhoto = (String) obj.get("mainPhoto");
							if (mainPhoto != null) {
								entity.setMainPhoto(mainPhoto);
							}
							String name = (String) obj.get("name");
							if (name != null) {
								entity.setName(name);
							}
							String idnumber = (String) obj.get("idnumber");
							if (idnumber != null) {
								entity.setIdnumber(idnumber);
							}
							String gender = (String) obj.get("gender");
							if (gender != null) {
								entity.setGender(gender);
							}
							String mobileTel = (String) obj.get("mobileTel");
							if (mobileTel != null) {
								entity.setMobileTel(mobileTel);
							}
							String homeTel = (String) obj.get("homeTel");
							if (homeTel != null) {
								entity.setHomeTel(homeTel);
							}
							String birthdate = (String) obj.get("birthdate");
							if (birthdate != null) {
								entity.setBirthdate(birthdate);
							}
							Double starLevel = JsonUtil.getJSONDouble(obj,
									"starLevel");
							if (starLevel != null) {
								entity.setStarLevel(BigDecimal
										.valueOf(starLevel));
							}
							String indexNum = (String) obj.get("indexNum");
							if (indexNum != null) {
								entity.setIndexNum(indexNum);
							}
							Integer department = (Integer) obj
									.get("department");
							if (department != null) {
								entity.setDepartment(department);
							}
							Integer secondDepartmentId = (Integer) obj
									.get("secondDepartmentId");
							if (secondDepartmentId != null) {
								entity.setSecondDepartmentId(secondDepartmentId);
							}
							assessmentTaskReturn.setDistributeEmployee(entity);
						}
					}
				}
				if (true) {
					Object assessmentEmployee = contentreq
							.get("assessmentEmployee");
					if (assessmentEmployee != null) {
						JSONObject obj = (JSONObject) assessmentEmployee;
						if (obj != null) {
							EmployeeEntity entity = new EmployeeEntity();
							Integer id = (Integer) obj.get("id");
							if (id != null) {
								entity.setId(id);
							}
							Integer userId = (Integer) obj.get("userId");
							if (userId != null) {
								entity.setUserId(userId);
							}
							Integer leaderEmployeeId = (Integer) obj
									.get("leaderEmployeeId");
							if (leaderEmployeeId != null) {
								entity.setLeaderEmployeeId(leaderEmployeeId);
							}
							String mainPhoto = (String) obj.get("mainPhoto");
							if (mainPhoto != null) {
								entity.setMainPhoto(mainPhoto);
							}
							String name = (String) obj.get("name");
							if (name != null) {
								entity.setName(name);
							}
							String idnumber = (String) obj.get("idnumber");
							if (idnumber != null) {
								entity.setIdnumber(idnumber);
							}
							String gender = (String) obj.get("gender");
							if (gender != null) {
								entity.setGender(gender);
							}
							String mobileTel = (String) obj.get("mobileTel");
							if (mobileTel != null) {
								entity.setMobileTel(mobileTel);
							}
							String homeTel = (String) obj.get("homeTel");
							if (homeTel != null) {
								entity.setHomeTel(homeTel);
							}
							String birthdate = (String) obj.get("birthdate");
							if (birthdate != null) {
								entity.setBirthdate(birthdate);
							}
							Double starLevel = JsonUtil.getJSONDouble(obj,
									"starLevel");
							if (starLevel != null) {
								entity.setStarLevel(BigDecimal
										.valueOf(starLevel));
							}
							String indexNum = (String) obj.get("indexNum");
							if (indexNum != null) {
								entity.setIndexNum(indexNum);
							}
							Integer department = (Integer) obj
									.get("department");
							if (department != null) {
								entity.setDepartment(department);
							}
							Integer secondDepartmentId = (Integer) obj
									.get("secondDepartmentId");
							if (secondDepartmentId != null) {
								entity.setSecondDepartmentId(secondDepartmentId);
							}
							assessmentTaskReturn.setAssessmentEmployee(entity);
						}
					}
				}
				if (true) {
					Object assessmentLogList = contentreq
							.get("assessmentLogList");
					if (assessmentLogList != null) {
						JSONArray list = (JSONArray) assessmentLogList;
						if (list != null) {
							List<AssessmentLogEntity> entityList = new ArrayList<AssessmentLogEntity>();
							for (int i = 0; i < list.size(); i++) {
								JSONObject obj = list.getJSONObject(i);
								if (obj != null) {
									AssessmentLogEntity entity = new AssessmentLogEntity();

									Integer id = (Integer) obj.get("id");
									if (id != null) {
										entity.setId(id);
									}
									Integer type = (Integer) obj.get("type");
									if (type != null) {
										entity.setType(type);
									}
									String personName = (String) obj
											.get("personName");
									if (personName != null) {
										entity.setPersonName(personName);
									}
									String createTime = (String) obj
											.get("createTime");
									if (createTime != null) {
										entity.setCreateTime(createTime);
									}
									String des = (String) obj.get("des");
									if (des != null) {
										entity.setDes(des);
									}
									Integer assessmentTaskId = (Integer) obj
											.get("assessmentTaskId");
									if (assessmentTaskId != null) {
										entity.setAssessmentTaskId(assessmentTaskId);
									}
									entityList.add(entity);
								}
							}
							assessmentTaskReturn
									.setAssessmentLogList(entityList);
						}

					}
				}
			} else if ("QUERY_ASSESSMENT_TASK_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
						String olderShow = (String) contentreq.get("olderShow");
						if ("true".equals(olderShow)) {
							olderShowReturn = true;
						}
						String healthAssessmentShow = (String) contentreq
								.get("healthAssessmentShow");
						if ("true".equals(healthAssessmentShow)) {
							healthAssessmentShowReturn = true;
						}
						String distributeEmployeeShow = (String) contentreq
								.get("distributeEmployeeShow");
						if ("true".equals(distributeEmployeeShow)) {
							distributeEmployeeShowReturn = true;
						}
						String assessmentEmployeeShow = (String) contentreq
								.get("assessmentEmployeeShow");
						if ("true".equals(assessmentEmployeeShow)) {
							assessmentEmployeeShowReturn = true;
						}
						String assessmentLogListShow = (String) contentreq
								.get("assessmentLogListShow");
						if ("true".equals(assessmentLogListShow)) {
							assessmentLogListShowReturn = true;
						}
					}
				}
			} else if ("QUERY_ASSESSMENT_TASK_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer olderId_gt = (Integer) contentreq
								.get("olderId_gt");
						Integer olderId_ge = (Integer) contentreq
								.get("olderId_ge");
						Integer olderId_lt = (Integer) contentreq
								.get("olderId_lt");
						Integer olderId_le = (Integer) contentreq
								.get("olderId_le");
						String olderId_in = (String) contentreq
								.get("olderId_in");
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId_gt != null) {
							queryMapReturn.put("olderId_gt", olderId_gt);
						}
						if (olderId_ge != null) {
							queryMapReturn.put("olderId_ge", olderId_ge);
						}
						if (olderId_lt != null) {
							queryMapReturn.put("olderId_lt", olderId_lt);
						}
						if (olderId_le != null) {
							queryMapReturn.put("olderId_le", olderId_le);
						}
						if (olderId_in != null) {
							queryMapReturn.put("olderId_in", olderId_in);
						}
						if (olderId != null) {
							queryMapReturn.put("olderId", olderId);
						}
						String olderName_like = (String) contentreq
								.get("olderName_like");
						String olderName_isNull = (String) contentreq
								.get("olderName_isNull");
						String olderName_isNotNull = (String) contentreq
								.get("olderName_isNotNull");
						String olderName_in = (String) contentreq
								.get("olderName_in");
						String olderName = (String) contentreq.get("olderName");
						if (olderName_like != null) {
							queryMapReturn
									.put("olderName_like", olderName_like);
						}
						if (olderName_isNull != null) {
							queryMapReturn.put("olderName_isNull",
									olderName_isNull);
						}
						if (olderName_isNotNull != null) {
							queryMapReturn.put("olderName_isNotNull",
									olderName_isNotNull);
						}
						if (olderName_in != null) {
							queryMapReturn.put("olderName_in", olderName_in);
						}
						if (olderName != null) {
							queryMapReturn.put("olderName", olderName);
						}
						String distributeTime_gt = (String) contentreq
								.get("distributeTime_gt");
						String distributeTime_ge = (String) contentreq
								.get("distributeTime_ge");
						String distributeTime_lt = (String) contentreq
								.get("distributeTime_lt");
						String distributeTime_le = (String) contentreq
								.get("distributeTime_le");
						if (distributeTime_gt != null) {
							queryMapReturn.put("distributeTime_gt",
									distributeTime_gt);
						}
						if (distributeTime_ge != null) {
							queryMapReturn.put("distributeTime_ge",
									distributeTime_ge);
						}
						if (distributeTime_lt != null) {
							queryMapReturn.put("distributeTime_lt",
									distributeTime_lt);
						}
						if (distributeTime_le != null) {
							queryMapReturn.put("distributeTime_le",
									distributeTime_le);
						}
						Integer distributeEmployeeId_gt = (Integer) contentreq
								.get("distributeEmployeeId_gt");
						Integer distributeEmployeeId_ge = (Integer) contentreq
								.get("distributeEmployeeId_ge");
						Integer distributeEmployeeId_lt = (Integer) contentreq
								.get("distributeEmployeeId_lt");
						Integer distributeEmployeeId_le = (Integer) contentreq
								.get("distributeEmployeeId_le");
						String distributeEmployeeId_in = (String) contentreq
								.get("distributeEmployeeId_in");
						Integer distributeEmployeeId = (Integer) contentreq
								.get("distributeEmployeeId");
						if (distributeEmployeeId_gt != null) {
							queryMapReturn.put("distributeEmployeeId_gt",
									distributeEmployeeId_gt);
						}
						if (distributeEmployeeId_ge != null) {
							queryMapReturn.put("distributeEmployeeId_ge",
									distributeEmployeeId_ge);
						}
						if (distributeEmployeeId_lt != null) {
							queryMapReturn.put("distributeEmployeeId_lt",
									distributeEmployeeId_lt);
						}
						if (distributeEmployeeId_le != null) {
							queryMapReturn.put("distributeEmployeeId_le",
									distributeEmployeeId_le);
						}
						if (distributeEmployeeId_in != null) {
							queryMapReturn.put("distributeEmployeeId_in",
									distributeEmployeeId_in);
						}
						if (distributeEmployeeId != null) {
							queryMapReturn.put("distributeEmployeeId",
									distributeEmployeeId);
						}
						String distributeName_like = (String) contentreq
								.get("distributeName_like");
						String distributeName_isNull = (String) contentreq
								.get("distributeName_isNull");
						String distributeName_isNotNull = (String) contentreq
								.get("distributeName_isNotNull");
						String distributeName_in = (String) contentreq
								.get("distributeName_in");
						String distributeName = (String) contentreq
								.get("distributeName");
						if (distributeName_like != null) {
							queryMapReturn.put("distributeName_like",
									distributeName_like);
						}
						if (distributeName_isNull != null) {
							queryMapReturn.put("distributeName_isNull",
									distributeName_isNull);
						}
						if (distributeName_isNotNull != null) {
							queryMapReturn.put("distributeName_isNotNull",
									distributeName_isNotNull);
						}
						if (distributeName_in != null) {
							queryMapReturn.put("distributeName_in",
									distributeName_in);
						}
						if (distributeName != null) {
							queryMapReturn
									.put("distributeName", distributeName);
						}
						String expectedCompletionTime_gt = (String) contentreq
								.get("expectedCompletionTime_gt");
						String expectedCompletionTime_ge = (String) contentreq
								.get("expectedCompletionTime_ge");
						String expectedCompletionTime_lt = (String) contentreq
								.get("expectedCompletionTime_lt");
						String expectedCompletionTime_le = (String) contentreq
								.get("expectedCompletionTime_le");
						if (expectedCompletionTime_gt != null) {
							queryMapReturn.put("expectedCompletionTime_gt",
									expectedCompletionTime_gt);
						}
						if (expectedCompletionTime_ge != null) {
							queryMapReturn.put("expectedCompletionTime_ge",
									expectedCompletionTime_ge);
						}
						if (expectedCompletionTime_lt != null) {
							queryMapReturn.put("expectedCompletionTime_lt",
									expectedCompletionTime_lt);
						}
						if (expectedCompletionTime_le != null) {
							queryMapReturn.put("expectedCompletionTime_le",
									expectedCompletionTime_le);
						}
						Integer healthAssessmentType_gt = (Integer) contentreq
								.get("healthAssessmentType_gt");
						Integer healthAssessmentType_ge = (Integer) contentreq
								.get("healthAssessmentType_ge");
						Integer healthAssessmentType_lt = (Integer) contentreq
								.get("healthAssessmentType_lt");
						Integer healthAssessmentType_le = (Integer) contentreq
								.get("healthAssessmentType_le");
						String healthAssessmentType_in = (String) contentreq
								.get("healthAssessmentType_in");
						Integer healthAssessmentType = (Integer) contentreq
								.get("healthAssessmentType");
						if (healthAssessmentType_gt != null) {
							queryMapReturn.put("healthAssessmentType_gt",
									healthAssessmentType_gt);
						}
						if (healthAssessmentType_ge != null) {
							queryMapReturn.put("healthAssessmentType_ge",
									healthAssessmentType_ge);
						}
						if (healthAssessmentType_lt != null) {
							queryMapReturn.put("healthAssessmentType_lt",
									healthAssessmentType_lt);
						}
						if (healthAssessmentType_le != null) {
							queryMapReturn.put("healthAssessmentType_le",
									healthAssessmentType_le);
						}
						if (healthAssessmentType_in != null) {
							queryMapReturn.put("healthAssessmentType_in",
									healthAssessmentType_in);
						}
						if (healthAssessmentType != null) {
							queryMapReturn.put("healthAssessmentType",
									healthAssessmentType);
						}
						Integer healthAssessmentId_gt = (Integer) contentreq
								.get("healthAssessmentId_gt");
						Integer healthAssessmentId_ge = (Integer) contentreq
								.get("healthAssessmentId_ge");
						Integer healthAssessmentId_lt = (Integer) contentreq
								.get("healthAssessmentId_lt");
						Integer healthAssessmentId_le = (Integer) contentreq
								.get("healthAssessmentId_le");
						String healthAssessmentId_in = (String) contentreq
								.get("healthAssessmentId_in");
						Integer healthAssessmentId = (Integer) contentreq
								.get("healthAssessmentId");
						if (healthAssessmentId_gt != null) {
							queryMapReturn.put("healthAssessmentId_gt",
									healthAssessmentId_gt);
						}
						if (healthAssessmentId_ge != null) {
							queryMapReturn.put("healthAssessmentId_ge",
									healthAssessmentId_ge);
						}
						if (healthAssessmentId_lt != null) {
							queryMapReturn.put("healthAssessmentId_lt",
									healthAssessmentId_lt);
						}
						if (healthAssessmentId_le != null) {
							queryMapReturn.put("healthAssessmentId_le",
									healthAssessmentId_le);
						}
						if (healthAssessmentId_in != null) {
							queryMapReturn.put("healthAssessmentId_in",
									healthAssessmentId_in);
						}
						if (healthAssessmentId != null) {
							queryMapReturn.put("healthAssessmentId",
									healthAssessmentId);
						}
						Integer healthAssessmentStatus_gt = (Integer) contentreq
								.get("healthAssessmentStatus_gt");
						Integer healthAssessmentStatus_ge = (Integer) contentreq
								.get("healthAssessmentStatus_ge");
						Integer healthAssessmentStatus_lt = (Integer) contentreq
								.get("healthAssessmentStatus_lt");
						Integer healthAssessmentStatus_le = (Integer) contentreq
								.get("healthAssessmentStatus_le");
						String healthAssessmentStatus_in = (String) contentreq
								.get("healthAssessmentStatus_in");
						Integer healthAssessmentStatus = (Integer) contentreq
								.get("healthAssessmentStatus");
						if (healthAssessmentStatus_gt != null) {
							queryMapReturn.put("healthAssessmentStatus_gt",
									healthAssessmentStatus_gt);
						}
						if (healthAssessmentStatus_ge != null) {
							queryMapReturn.put("healthAssessmentStatus_ge",
									healthAssessmentStatus_ge);
						}
						if (healthAssessmentStatus_lt != null) {
							queryMapReturn.put("healthAssessmentStatus_lt",
									healthAssessmentStatus_lt);
						}
						if (healthAssessmentStatus_le != null) {
							queryMapReturn.put("healthAssessmentStatus_le",
									healthAssessmentStatus_le);
						}
						if (healthAssessmentStatus_in != null) {
							queryMapReturn.put("healthAssessmentStatus_in",
									healthAssessmentStatus_in);
						}
						if (healthAssessmentStatus != null) {
							queryMapReturn.put("healthAssessmentStatus",
									healthAssessmentStatus);
						}
						String des_like = (String) contentreq.get("des_like");
						String des_isNull = (String) contentreq
								.get("des_isNull");
						String des_isNotNull = (String) contentreq
								.get("des_isNotNull");
						String des_in = (String) contentreq.get("des_in");
						String des = (String) contentreq.get("des");
						if (des_like != null) {
							queryMapReturn.put("des_like", des_like);
						}
						if (des_isNull != null) {
							queryMapReturn.put("des_isNull", des_isNull);
						}
						if (des_isNotNull != null) {
							queryMapReturn.put("des_isNotNull", des_isNotNull);
						}
						if (des_in != null) {
							queryMapReturn.put("des_in", des_in);
						}
						if (des != null) {
							queryMapReturn.put("des", des);
						}
						Integer assessmentEmployeeId_gt = (Integer) contentreq
								.get("assessmentEmployeeId_gt");
						Integer assessmentEmployeeId_ge = (Integer) contentreq
								.get("assessmentEmployeeId_ge");
						Integer assessmentEmployeeId_lt = (Integer) contentreq
								.get("assessmentEmployeeId_lt");
						Integer assessmentEmployeeId_le = (Integer) contentreq
								.get("assessmentEmployeeId_le");
						String assessmentEmployeeId_in = (String) contentreq
								.get("assessmentEmployeeId_in");
						Integer assessmentEmployeeId = (Integer) contentreq
								.get("assessmentEmployeeId");
						if (assessmentEmployeeId_gt != null) {
							queryMapReturn.put("assessmentEmployeeId_gt",
									assessmentEmployeeId_gt);
						}
						if (assessmentEmployeeId_ge != null) {
							queryMapReturn.put("assessmentEmployeeId_ge",
									assessmentEmployeeId_ge);
						}
						if (assessmentEmployeeId_lt != null) {
							queryMapReturn.put("assessmentEmployeeId_lt",
									assessmentEmployeeId_lt);
						}
						if (assessmentEmployeeId_le != null) {
							queryMapReturn.put("assessmentEmployeeId_le",
									assessmentEmployeeId_le);
						}
						if (assessmentEmployeeId_in != null) {
							queryMapReturn.put("assessmentEmployeeId_in",
									assessmentEmployeeId_in);
						}
						if (assessmentEmployeeId != null) {
							queryMapReturn.put("assessmentEmployeeId",
									assessmentEmployeeId);
						}
						String assessmentName_like = (String) contentreq
								.get("assessmentName_like");
						String assessmentName_isNull = (String) contentreq
								.get("assessmentName_isNull");
						String assessmentName_isNotNull = (String) contentreq
								.get("assessmentName_isNotNull");
						String assessmentName_in = (String) contentreq
								.get("assessmentName_in");
						String assessmentName = (String) contentreq
								.get("assessmentName");
						if (assessmentName_like != null) {
							queryMapReturn.put("assessmentName_like",
									assessmentName_like);
						}
						if (assessmentName_isNull != null) {
							queryMapReturn.put("assessmentName_isNull",
									assessmentName_isNull);
						}
						if (assessmentName_isNotNull != null) {
							queryMapReturn.put("assessmentName_isNotNull",
									assessmentName_isNotNull);
						}
						if (assessmentName_in != null) {
							queryMapReturn.put("assessmentName_in",
									assessmentName_in);
						}
						if (assessmentName != null) {
							queryMapReturn
									.put("assessmentName", assessmentName);
						}
						Integer taskStatus_gt = (Integer) contentreq
								.get("taskStatus_gt");
						Integer taskStatus_ge = (Integer) contentreq
								.get("taskStatus_ge");
						Integer taskStatus_lt = (Integer) contentreq
								.get("taskStatus_lt");
						Integer taskStatus_le = (Integer) contentreq
								.get("taskStatus_le");
						String taskStatus_in = (String) contentreq
								.get("taskStatus_in");
						Integer taskStatus = (Integer) contentreq
								.get("taskStatus");
						if (taskStatus_gt != null) {
							queryMapReturn.put("taskStatus_gt", taskStatus_gt);
						}
						if (taskStatus_ge != null) {
							queryMapReturn.put("taskStatus_ge", taskStatus_ge);
						}
						if (taskStatus_lt != null) {
							queryMapReturn.put("taskStatus_lt", taskStatus_lt);
						}
						if (taskStatus_le != null) {
							queryMapReturn.put("taskStatus_le", taskStatus_le);
						}
						if (taskStatus_in != null) {
							queryMapReturn.put("taskStatus_in", taskStatus_in);
						}
						if (taskStatus != null) {
							queryMapReturn.put("taskStatus", taskStatus);
						}
						String auditPassTime_gt = (String) contentreq
								.get("auditPassTime_gt");
						String auditPassTime_ge = (String) contentreq
								.get("auditPassTime_ge");
						String auditPassTime_lt = (String) contentreq
								.get("auditPassTime_lt");
						String auditPassTime_le = (String) contentreq
								.get("auditPassTime_le");
						if (auditPassTime_gt != null) {
							queryMapReturn.put("auditPassTime_gt",
									auditPassTime_gt);
						}
						if (auditPassTime_ge != null) {
							queryMapReturn.put("auditPassTime_ge",
									auditPassTime_ge);
						}
						if (auditPassTime_lt != null) {
							queryMapReturn.put("auditPassTime_lt",
									auditPassTime_lt);
						}
						if (auditPassTime_le != null) {
							queryMapReturn.put("auditPassTime_le",
									auditPassTime_le);
						}

						Integer assessmentLogId = (Integer) contentreq
								.get("assessmentLogId");
						if (assessmentLogId != null) {
							queryMapReturn.put("assessmentLogId",
									assessmentLogId);
						}

						String olderShow = (String) contentreq.get("olderShow");
						if ("true".equals(olderShow)) {
							olderShowReturn = true;
						}
						String healthAssessmentShow = (String) contentreq
								.get("healthAssessmentShow");
						if ("true".equals(healthAssessmentShow)) {
							healthAssessmentShowReturn = true;
						}
						String distributeEmployeeShow = (String) contentreq
								.get("distributeEmployeeShow");
						if ("true".equals(distributeEmployeeShow)) {
							distributeEmployeeShowReturn = true;
						}
						String assessmentEmployeeShow = (String) contentreq
								.get("assessmentEmployeeShow");
						if ("true".equals(assessmentEmployeeShow)) {
							assessmentEmployeeShowReturn = true;
						}
						String assessmentLogListShow = (String) contentreq
								.get("assessmentLogListShow");
						if ("true".equals(assessmentLogListShow)) {
							assessmentLogListShowReturn = true;
						}
					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null)
								&& (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp)
									.intValue();
						}
						if ((pagesizetemp != null)
								&& (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp)
									.intValue();
						}
					}
					Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray) orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for (int i = 0; i < order.size(); i++) {
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String) obj.get("column"));
							orderVO.setOrderType((String) obj.get("type"));
							orderListReturn.add(orderVO);
						}
					}
				}
			} else if ("DEL_ASSESSMENT_TASK_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
						String delOlder = (String) contentreq.get("delOlder");
						if ("true".equals(delOlder)) {
							delOlderReturn = true;
						}
						String delHealthAssessment = (String) contentreq
								.get("delHealthAssessment");
						if ("true".equals(delHealthAssessment)) {
							delHealthAssessmentReturn = true;
						}
						String delDistributeEmployee = (String) contentreq
								.get("delDistributeEmployee");
						if ("true".equals(delDistributeEmployee)) {
							delDistributeEmployeeReturn = true;
						}
						String delAssessmentEmployee = (String) contentreq
								.get("delAssessmentEmployee");
						if ("true".equals(delAssessmentEmployee)) {
							delAssessmentEmployeeReturn = true;
						}
						String delAssessmentLogList = (String) contentreq
								.get("delAssessmentLogList");
						if ("true".equals(delAssessmentLogList)) {
							delAssessmentLogListReturn = true;
						}
					}
				}
			} else if ("DEL_ASSESSMENT_TASK_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer olderId_gt = (Integer) contentreq
								.get("olderId_gt");
						Integer olderId_ge = (Integer) contentreq
								.get("olderId_ge");
						Integer olderId_lt = (Integer) contentreq
								.get("olderId_lt");
						Integer olderId_le = (Integer) contentreq
								.get("olderId_le");
						String olderId_in = (String) contentreq
								.get("olderId_in");
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId_gt != null) {
							queryMapReturn.put("olderId_gt", olderId_gt);
						}
						if (olderId_ge != null) {
							queryMapReturn.put("olderId_ge", olderId_ge);
						}
						if (olderId_lt != null) {
							queryMapReturn.put("olderId_lt", olderId_lt);
						}
						if (olderId_le != null) {
							queryMapReturn.put("olderId_le", olderId_le);
						}
						if (olderId_in != null) {
							queryMapReturn.put("olderId_in", olderId_in);
						}
						if (olderId != null) {
							queryMapReturn.put("olderId", olderId);
						}
						String olderName_like = (String) contentreq
								.get("olderName_like");
						String olderName_isNull = (String) contentreq
								.get("olderName_isNull");
						String olderName_isNotNull = (String) contentreq
								.get("olderName_isNotNull");
						String olderName_in = (String) contentreq
								.get("olderName_in");
						String olderName = (String) contentreq.get("olderName");
						if (olderName_like != null) {
							queryMapReturn
									.put("olderName_like", olderName_like);
						}
						if (olderName_isNull != null) {
							queryMapReturn.put("olderName_isNull",
									olderName_isNull);
						}
						if (olderName_isNotNull != null) {
							queryMapReturn.put("olderName_isNotNull",
									olderName_isNotNull);
						}
						if (olderName_in != null) {
							queryMapReturn.put("olderName_in", olderName_in);
						}
						if (olderName != null) {
							queryMapReturn.put("olderName", olderName);
						}
						String distributeTime_gt = (String) contentreq
								.get("distributeTime_gt");
						String distributeTime_ge = (String) contentreq
								.get("distributeTime_ge");
						String distributeTime_lt = (String) contentreq
								.get("distributeTime_lt");
						String distributeTime_le = (String) contentreq
								.get("distributeTime_le");
						if (distributeTime_gt != null) {
							queryMapReturn.put("distributeTime_gt",
									distributeTime_gt);
						}
						if (distributeTime_ge != null) {
							queryMapReturn.put("distributeTime_ge",
									distributeTime_ge);
						}
						if (distributeTime_lt != null) {
							queryMapReturn.put("distributeTime_lt",
									distributeTime_lt);
						}
						if (distributeTime_le != null) {
							queryMapReturn.put("distributeTime_le",
									distributeTime_le);
						}
						Integer distributeEmployeeId_gt = (Integer) contentreq
								.get("distributeEmployeeId_gt");
						Integer distributeEmployeeId_ge = (Integer) contentreq
								.get("distributeEmployeeId_ge");
						Integer distributeEmployeeId_lt = (Integer) contentreq
								.get("distributeEmployeeId_lt");
						Integer distributeEmployeeId_le = (Integer) contentreq
								.get("distributeEmployeeId_le");
						String distributeEmployeeId_in = (String) contentreq
								.get("distributeEmployeeId_in");
						Integer distributeEmployeeId = (Integer) contentreq
								.get("distributeEmployeeId");
						if (distributeEmployeeId_gt != null) {
							queryMapReturn.put("distributeEmployeeId_gt",
									distributeEmployeeId_gt);
						}
						if (distributeEmployeeId_ge != null) {
							queryMapReturn.put("distributeEmployeeId_ge",
									distributeEmployeeId_ge);
						}
						if (distributeEmployeeId_lt != null) {
							queryMapReturn.put("distributeEmployeeId_lt",
									distributeEmployeeId_lt);
						}
						if (distributeEmployeeId_le != null) {
							queryMapReturn.put("distributeEmployeeId_le",
									distributeEmployeeId_le);
						}
						if (distributeEmployeeId_in != null) {
							queryMapReturn.put("distributeEmployeeId_in",
									distributeEmployeeId_in);
						}
						if (distributeEmployeeId != null) {
							queryMapReturn.put("distributeEmployeeId",
									distributeEmployeeId);
						}
						String distributeName_like = (String) contentreq
								.get("distributeName_like");
						String distributeName_isNull = (String) contentreq
								.get("distributeName_isNull");
						String distributeName_isNotNull = (String) contentreq
								.get("distributeName_isNotNull");
						String distributeName_in = (String) contentreq
								.get("distributeName_in");
						String distributeName = (String) contentreq
								.get("distributeName");
						if (distributeName_like != null) {
							queryMapReturn.put("distributeName_like",
									distributeName_like);
						}
						if (distributeName_isNull != null) {
							queryMapReturn.put("distributeName_isNull",
									distributeName_isNull);
						}
						if (distributeName_isNotNull != null) {
							queryMapReturn.put("distributeName_isNotNull",
									distributeName_isNotNull);
						}
						if (distributeName_in != null) {
							queryMapReturn.put("distributeName_in",
									distributeName_in);
						}
						if (distributeName != null) {
							queryMapReturn
									.put("distributeName", distributeName);
						}
						String expectedCompletionTime_gt = (String) contentreq
								.get("expectedCompletionTime_gt");
						String expectedCompletionTime_ge = (String) contentreq
								.get("expectedCompletionTime_ge");
						String expectedCompletionTime_lt = (String) contentreq
								.get("expectedCompletionTime_lt");
						String expectedCompletionTime_le = (String) contentreq
								.get("expectedCompletionTime_le");
						if (expectedCompletionTime_gt != null) {
							queryMapReturn.put("expectedCompletionTime_gt",
									expectedCompletionTime_gt);
						}
						if (expectedCompletionTime_ge != null) {
							queryMapReturn.put("expectedCompletionTime_ge",
									expectedCompletionTime_ge);
						}
						if (expectedCompletionTime_lt != null) {
							queryMapReturn.put("expectedCompletionTime_lt",
									expectedCompletionTime_lt);
						}
						if (expectedCompletionTime_le != null) {
							queryMapReturn.put("expectedCompletionTime_le",
									expectedCompletionTime_le);
						}
						Integer healthAssessmentType_gt = (Integer) contentreq
								.get("healthAssessmentType_gt");
						Integer healthAssessmentType_ge = (Integer) contentreq
								.get("healthAssessmentType_ge");
						Integer healthAssessmentType_lt = (Integer) contentreq
								.get("healthAssessmentType_lt");
						Integer healthAssessmentType_le = (Integer) contentreq
								.get("healthAssessmentType_le");
						String healthAssessmentType_in = (String) contentreq
								.get("healthAssessmentType_in");
						Integer healthAssessmentType = (Integer) contentreq
								.get("healthAssessmentType");
						if (healthAssessmentType_gt != null) {
							queryMapReturn.put("healthAssessmentType_gt",
									healthAssessmentType_gt);
						}
						if (healthAssessmentType_ge != null) {
							queryMapReturn.put("healthAssessmentType_ge",
									healthAssessmentType_ge);
						}
						if (healthAssessmentType_lt != null) {
							queryMapReturn.put("healthAssessmentType_lt",
									healthAssessmentType_lt);
						}
						if (healthAssessmentType_le != null) {
							queryMapReturn.put("healthAssessmentType_le",
									healthAssessmentType_le);
						}
						if (healthAssessmentType_in != null) {
							queryMapReturn.put("healthAssessmentType_in",
									healthAssessmentType_in);
						}
						if (healthAssessmentType != null) {
							queryMapReturn.put("healthAssessmentType",
									healthAssessmentType);
						}
						Integer healthAssessmentId_gt = (Integer) contentreq
								.get("healthAssessmentId_gt");
						Integer healthAssessmentId_ge = (Integer) contentreq
								.get("healthAssessmentId_ge");
						Integer healthAssessmentId_lt = (Integer) contentreq
								.get("healthAssessmentId_lt");
						Integer healthAssessmentId_le = (Integer) contentreq
								.get("healthAssessmentId_le");
						String healthAssessmentId_in = (String) contentreq
								.get("healthAssessmentId_in");
						Integer healthAssessmentId = (Integer) contentreq
								.get("healthAssessmentId");
						if (healthAssessmentId_gt != null) {
							queryMapReturn.put("healthAssessmentId_gt",
									healthAssessmentId_gt);
						}
						if (healthAssessmentId_ge != null) {
							queryMapReturn.put("healthAssessmentId_ge",
									healthAssessmentId_ge);
						}
						if (healthAssessmentId_lt != null) {
							queryMapReturn.put("healthAssessmentId_lt",
									healthAssessmentId_lt);
						}
						if (healthAssessmentId_le != null) {
							queryMapReturn.put("healthAssessmentId_le",
									healthAssessmentId_le);
						}
						if (healthAssessmentId_in != null) {
							queryMapReturn.put("healthAssessmentId_in",
									healthAssessmentId_in);
						}
						if (healthAssessmentId != null) {
							queryMapReturn.put("healthAssessmentId",
									healthAssessmentId);
						}
						Integer healthAssessmentStatus_gt = (Integer) contentreq
								.get("healthAssessmentStatus_gt");
						Integer healthAssessmentStatus_ge = (Integer) contentreq
								.get("healthAssessmentStatus_ge");
						Integer healthAssessmentStatus_lt = (Integer) contentreq
								.get("healthAssessmentStatus_lt");
						Integer healthAssessmentStatus_le = (Integer) contentreq
								.get("healthAssessmentStatus_le");
						String healthAssessmentStatus_in = (String) contentreq
								.get("healthAssessmentStatus_in");
						Integer healthAssessmentStatus = (Integer) contentreq
								.get("healthAssessmentStatus");
						if (healthAssessmentStatus_gt != null) {
							queryMapReturn.put("healthAssessmentStatus_gt",
									healthAssessmentStatus_gt);
						}
						if (healthAssessmentStatus_ge != null) {
							queryMapReturn.put("healthAssessmentStatus_ge",
									healthAssessmentStatus_ge);
						}
						if (healthAssessmentStatus_lt != null) {
							queryMapReturn.put("healthAssessmentStatus_lt",
									healthAssessmentStatus_lt);
						}
						if (healthAssessmentStatus_le != null) {
							queryMapReturn.put("healthAssessmentStatus_le",
									healthAssessmentStatus_le);
						}
						if (healthAssessmentStatus_in != null) {
							queryMapReturn.put("healthAssessmentStatus_in",
									healthAssessmentStatus_in);
						}
						if (healthAssessmentStatus != null) {
							queryMapReturn.put("healthAssessmentStatus",
									healthAssessmentStatus);
						}
						String des_like = (String) contentreq.get("des_like");
						String des_isNull = (String) contentreq
								.get("des_isNull");
						String des_isNotNull = (String) contentreq
								.get("des_isNotNull");
						String des_in = (String) contentreq.get("des_in");
						String des = (String) contentreq.get("des");
						if (des_like != null) {
							queryMapReturn.put("des_like", des_like);
						}
						if (des_isNull != null) {
							queryMapReturn.put("des_isNull", des_isNull);
						}
						if (des_isNotNull != null) {
							queryMapReturn.put("des_isNotNull", des_isNotNull);
						}
						if (des_in != null) {
							queryMapReturn.put("des_in", des_in);
						}
						if (des != null) {
							queryMapReturn.put("des", des);
						}
						Integer assessmentEmployeeId_gt = (Integer) contentreq
								.get("assessmentEmployeeId_gt");
						Integer assessmentEmployeeId_ge = (Integer) contentreq
								.get("assessmentEmployeeId_ge");
						Integer assessmentEmployeeId_lt = (Integer) contentreq
								.get("assessmentEmployeeId_lt");
						Integer assessmentEmployeeId_le = (Integer) contentreq
								.get("assessmentEmployeeId_le");
						String assessmentEmployeeId_in = (String) contentreq
								.get("assessmentEmployeeId_in");
						Integer assessmentEmployeeId = (Integer) contentreq
								.get("assessmentEmployeeId");
						if (assessmentEmployeeId_gt != null) {
							queryMapReturn.put("assessmentEmployeeId_gt",
									assessmentEmployeeId_gt);
						}
						if (assessmentEmployeeId_ge != null) {
							queryMapReturn.put("assessmentEmployeeId_ge",
									assessmentEmployeeId_ge);
						}
						if (assessmentEmployeeId_lt != null) {
							queryMapReturn.put("assessmentEmployeeId_lt",
									assessmentEmployeeId_lt);
						}
						if (assessmentEmployeeId_le != null) {
							queryMapReturn.put("assessmentEmployeeId_le",
									assessmentEmployeeId_le);
						}
						if (assessmentEmployeeId_in != null) {
							queryMapReturn.put("assessmentEmployeeId_in",
									assessmentEmployeeId_in);
						}
						if (assessmentEmployeeId != null) {
							queryMapReturn.put("assessmentEmployeeId",
									assessmentEmployeeId);
						}
						String assessmentName_like = (String) contentreq
								.get("assessmentName_like");
						String assessmentName_isNull = (String) contentreq
								.get("assessmentName_isNull");
						String assessmentName_isNotNull = (String) contentreq
								.get("assessmentName_isNotNull");
						String assessmentName_in = (String) contentreq
								.get("assessmentName_in");
						String assessmentName = (String) contentreq
								.get("assessmentName");
						if (assessmentName_like != null) {
							queryMapReturn.put("assessmentName_like",
									assessmentName_like);
						}
						if (assessmentName_isNull != null) {
							queryMapReturn.put("assessmentName_isNull",
									assessmentName_isNull);
						}
						if (assessmentName_isNotNull != null) {
							queryMapReturn.put("assessmentName_isNotNull",
									assessmentName_isNotNull);
						}
						if (assessmentName_in != null) {
							queryMapReturn.put("assessmentName_in",
									assessmentName_in);
						}
						if (assessmentName != null) {
							queryMapReturn
									.put("assessmentName", assessmentName);
						}
						Integer taskStatus_gt = (Integer) contentreq
								.get("taskStatus_gt");
						Integer taskStatus_ge = (Integer) contentreq
								.get("taskStatus_ge");
						Integer taskStatus_lt = (Integer) contentreq
								.get("taskStatus_lt");
						Integer taskStatus_le = (Integer) contentreq
								.get("taskStatus_le");
						String taskStatus_in = (String) contentreq
								.get("taskStatus_in");
						Integer taskStatus = (Integer) contentreq
								.get("taskStatus");
						if (taskStatus_gt != null) {
							queryMapReturn.put("taskStatus_gt", taskStatus_gt);
						}
						if (taskStatus_ge != null) {
							queryMapReturn.put("taskStatus_ge", taskStatus_ge);
						}
						if (taskStatus_lt != null) {
							queryMapReturn.put("taskStatus_lt", taskStatus_lt);
						}
						if (taskStatus_le != null) {
							queryMapReturn.put("taskStatus_le", taskStatus_le);
						}
						if (taskStatus_in != null) {
							queryMapReturn.put("taskStatus_in", taskStatus_in);
						}
						if (taskStatus != null) {
							queryMapReturn.put("taskStatus", taskStatus);
						}
						String auditPassTime_gt = (String) contentreq
								.get("auditPassTime_gt");
						String auditPassTime_ge = (String) contentreq
								.get("auditPassTime_ge");
						String auditPassTime_lt = (String) contentreq
								.get("auditPassTime_lt");
						String auditPassTime_le = (String) contentreq
								.get("auditPassTime_le");
						if (auditPassTime_gt != null) {
							queryMapReturn.put("auditPassTime_gt",
									auditPassTime_gt);
						}
						if (auditPassTime_ge != null) {
							queryMapReturn.put("auditPassTime_ge",
									auditPassTime_ge);
						}
						if (auditPassTime_lt != null) {
							queryMapReturn.put("auditPassTime_lt",
									auditPassTime_lt);
						}
						if (auditPassTime_le != null) {
							queryMapReturn.put("auditPassTime_le",
									auditPassTime_le);
						}

						String delOlder = (String) contentreq.get("delOlder");
						if ("true".equals(delOlder)) {
							delOlderReturn = true;
						}
						String delHealthAssessment = (String) contentreq
								.get("delHealthAssessment");
						if ("true".equals(delHealthAssessment)) {
							delHealthAssessmentReturn = true;
						}
						String delDistributeEmployee = (String) contentreq
								.get("delDistributeEmployee");
						if ("true".equals(delDistributeEmployee)) {
							delDistributeEmployeeReturn = true;
						}
						String delAssessmentEmployee = (String) contentreq
								.get("delAssessmentEmployee");
						if ("true".equals(delAssessmentEmployee)) {
							delAssessmentEmployeeReturn = true;
						}
						Integer assessmentLogId = (Integer) contentreq
								.get("assessmentLogId");
						if (assessmentLogId != null) {
							queryMapReturn.put("assessmentLogId",
									assessmentLogId);
						}
						String delAssessmentLogList = (String) contentreq
								.get("delAssessmentLogList");
						if ("true".equals(delAssessmentLogList)) {
							delAssessmentLogListReturn = true;
						}
					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null)
								&& (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp)
									.intValue();
						}
						if ((pagesizetemp != null)
								&& (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp)
									.intValue();
						}
					}
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (assessmentTaskReturn != null) {
				parseMap.put("assessmentTask", assessmentTaskReturn);
			}
			if (assessmentTaskListReturn != null
					&& assessmentTaskListReturn.size() > 0) {
				parseMap.put("assessmentTaskList", assessmentTaskListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}

			if (olderShowReturn != null) {
				parseMap.put("olderShow", olderShowReturn);
			}
			if (delOlderReturn != null) {
				parseMap.put("delOlder", delOlderReturn);
			}
			if (healthAssessmentShowReturn != null) {
				parseMap.put("healthAssessmentShow", healthAssessmentShowReturn);
			}
			if (delHealthAssessmentReturn != null) {
				parseMap.put("delHealthAssessment", delHealthAssessmentReturn);
			}
			if (distributeEmployeeShowReturn != null) {
				parseMap.put("distributeEmployeeShow",
						distributeEmployeeShowReturn);
			}
			if (delDistributeEmployeeReturn != null) {
				parseMap.put("delDistributeEmployee",
						delDistributeEmployeeReturn);
			}
			if (assessmentEmployeeShowReturn != null) {
				parseMap.put("assessmentEmployeeShow",
						assessmentEmployeeShowReturn);
			}
			if (delAssessmentEmployeeReturn != null) {
				parseMap.put("delAssessmentEmployee",
						delAssessmentEmployeeReturn);
			}
			if (assessmentLogListShowReturn != null) {
				parseMap.put("assessmentLogListShow",
						assessmentLogListShowReturn);
			}
			if (delAssessmentLogListReturn != null) {
				parseMap.put("delAssessmentLogList", delAssessmentLogListReturn);
			}

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command, String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
