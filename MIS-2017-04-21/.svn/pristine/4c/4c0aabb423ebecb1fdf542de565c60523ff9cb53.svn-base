package fsk.parse.siteEmployee;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.siteEmployee.SiteEmployeeEntity;

import fsk.entity.site.SiteEntity;
import fsk.entity.employee.EmployeeEntity;

import com.framework.system.util.JsonUtil;
import com.framework.system.db.query.OrderVO;
 /**   
 * @Title: Parse
 * @Description: 站点员工关联表解析器
 * @author feng.gu
 * @date 2016-06-21 08:39:47
 * @version V1.0   
 *
 */
public class SiteEmployeeParse {
	private static Logger logger = Logger.getLogger(SiteEmployeeParse.class);
	private static SiteEmployeeParse siteEmployeeParse;

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static SiteEmployeeParse getInstance() {
		if (siteEmployeeParse == null) {
			siteEmployeeParse = new SiteEmployeeParse();
		}
		return siteEmployeeParse;
	}

	public Map<String, Object> parse(int type, String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command,reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command,reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			SiteEmployeeEntity siteEmployeeReturn = null;
			List<SiteEmployeeEntity> siteEmployeeListReturn = null;
			Integer idReturn = null;			
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;
			
															Boolean siteShowReturn = false;
			Boolean delSiteReturn = false;
																								Boolean employeeShowReturn = false;
			Boolean delEmployeeReturn = false;
															
			//json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject)reqParams.get("content");
			if ("ADD_SITE_EMPLOYEE_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				siteEmployeeReturn = new SiteEmployeeEntity();
				if(true){
					if(contentreq!=null){
												    						    Integer id = (Integer)contentreq.get("id");
	                		if(id!=null){
			                	siteEmployeeReturn.setId(id);
			                }
						    												    						    Integer employeeId = (Integer)contentreq.get("employeeId");
	                		if(employeeId!=null){
			                	siteEmployeeReturn.setEmployeeId(employeeId);
			                }
						    												    						    Integer siteId = (Integer)contentreq.get("siteId");
	                		if(siteId!=null){
			                	siteEmployeeReturn.setSiteId(siteId);
			                }
						    											}					
				}
																				if(true){
					Object site = contentreq.get("site");
					if(site!=null){
						JSONObject obj = (JSONObject)site;
						if(obj!=null){
							SiteEntity entity = new SiteEntity();						
								                		Integer id = (Integer)obj.get("id");
	                		if(id!=null){
			                	entity.setId(id);
			                }
								                		Integer masterEmployeeId = (Integer)obj.get("masterEmployeeId");
	                		if(masterEmployeeId!=null){
			                	entity.setMasterEmployeeId(masterEmployeeId);
			                }
								                		String name = (String)obj.get("name");
	                		if(name!=null){
			                	entity.setName(name);
			                }
								                		String mainPhoto = (String)obj.get("mainPhoto");
	                		if(mainPhoto!=null){
			                	entity.setMainPhoto(mainPhoto);
			                }
								                		String contactPerson = (String)obj.get("contactPerson");
	                		if(contactPerson!=null){
			                	entity.setContactPerson(contactPerson);
			                }
								                		String contactTel = (String)obj.get("contactTel");
	                		if(contactTel!=null){
			                	entity.setContactTel(contactTel);
			                }
								                		Integer provinceId = (Integer)obj.get("provinceId");
	                		if(provinceId!=null){
			                	entity.setProvinceId(provinceId);
			                }
								                		Integer cityId = (Integer)obj.get("cityId");
	                		if(cityId!=null){
			                	entity.setCityId(cityId);
			                }
								                		Integer areaId = (Integer)obj.get("areaId");
	                		if(areaId!=null){
			                	entity.setAreaId(areaId);
			                }
								                		Integer streetId = (Integer)obj.get("streetId");
	                		if(streetId!=null){
			                	entity.setStreetId(streetId);
			                }
								                		String address = (String)obj.get("address");
	                		if(address!=null){
			                	entity.setAddress(address);
			                }
														siteEmployeeReturn.setSite(entity);
						}						
					}
				}
																																if(true){
					Object employee = contentreq.get("employee");
					if(employee!=null){
						JSONObject obj = (JSONObject)employee;
						if(obj!=null){
							EmployeeEntity entity = new EmployeeEntity();						
														siteEmployeeReturn.setEmployee(entity);
						}						
					}
				}
																			} else if ("QUERY_SITE_EMPLOYEE_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");
					        																												String siteShow = (String)contentreq.get("siteShow");
							if("true".equals(siteShow)){
								siteShowReturn = true;
							}
																																																								String employeeShow = (String)contentreq.get("employeeShow");
							if("true".equals(employeeShow)){
								employeeShowReturn = true;
							}
																																	}	
				}
			} else if ("QUERY_SITE_EMPLOYEE_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																								Integer employeeId_gt = (Integer)contentreq.get("employeeId_gt");
						Integer employeeId_ge = (Integer)contentreq.get("employeeId_ge");
						Integer employeeId_lt = (Integer)contentreq.get("employeeId_lt");
						Integer employeeId_le = (Integer)contentreq.get("employeeId_le");
						String employeeId_in = (String)contentreq.get("employeeId_in");
						Integer employeeId = (Integer)contentreq.get("employeeId");
                        if(employeeId_gt!=null){
                        	queryMapReturn.put("employeeId_gt", employeeId_gt);
						}
						if(employeeId_ge!=null){
                        	queryMapReturn.put("employeeId_ge", employeeId_ge);
						}
						if(employeeId_lt!=null){
                        	queryMapReturn.put("employeeId_lt", employeeId_lt);
						}
						if(employeeId_le!=null){
                        	queryMapReturn.put("employeeId_le", employeeId_le);
						}
						if(employeeId_in!=null){
                        	queryMapReturn.put("employeeId_in", employeeId_in);
						}
						if(employeeId!=null){
                        	queryMapReturn.put("employeeId", employeeId);
						}		
																								Integer siteId_gt = (Integer)contentreq.get("siteId_gt");
						Integer siteId_ge = (Integer)contentreq.get("siteId_ge");
						Integer siteId_lt = (Integer)contentreq.get("siteId_lt");
						Integer siteId_le = (Integer)contentreq.get("siteId_le");
						String siteId_in = (String)contentreq.get("siteId_in");
						Integer siteId = (Integer)contentreq.get("siteId");
                        if(siteId_gt!=null){
                        	queryMapReturn.put("siteId_gt", siteId_gt);
						}
						if(siteId_ge!=null){
                        	queryMapReturn.put("siteId_ge", siteId_ge);
						}
						if(siteId_lt!=null){
                        	queryMapReturn.put("siteId_lt", siteId_lt);
						}
						if(siteId_le!=null){
                        	queryMapReturn.put("siteId_le", siteId_le);
						}
						if(siteId_in!=null){
                        	queryMapReturn.put("siteId_in", siteId_in);
						}
						if(siteId!=null){
                        	queryMapReturn.put("siteId", siteId);
						}		
															
						    																																																	
																																			String siteShow = (String)contentreq.get("siteShow");
							if("true".equals(siteShow)){
								siteShowReturn = true;
							}
																																																								String employeeShow = (String)contentreq.get("employeeShow");
							if("true".equals(employeeShow)){
								employeeShowReturn = true;
							}
																																	}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				    Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray)orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for(int i=0;i<order.size();i++){
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String)obj.get("column"));
							orderVO.setOrderType((String)obj.get("type"));
							orderListReturn.add(orderVO);
						}						
					}
				}
			} else if ("DEL_SITE_EMPLOYEE_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");	
						    																												String delSite = (String)contentreq.get("delSite");
							if("true".equals(delSite)){
								delSiteReturn = true;
							}
																																																								String delEmployee = (String)contentreq.get("delEmployee");
							if("true".equals(delEmployee)){
								delEmployeeReturn = true;
							}
																																	}	
				}
			} else if ("DEL_SITE_EMPLOYEE_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																								Integer employeeId_gt = (Integer)contentreq.get("employeeId_gt");
						Integer employeeId_ge = (Integer)contentreq.get("employeeId_ge");
						Integer employeeId_lt = (Integer)contentreq.get("employeeId_lt");
						Integer employeeId_le = (Integer)contentreq.get("employeeId_le");
						String employeeId_in = (String)contentreq.get("employeeId_in");
						Integer employeeId = (Integer)contentreq.get("employeeId");
                        if(employeeId_gt!=null){
                        	queryMapReturn.put("employeeId_gt", employeeId_gt);
						}
						if(employeeId_ge!=null){
                        	queryMapReturn.put("employeeId_ge", employeeId_ge);
						}
						if(employeeId_lt!=null){
                        	queryMapReturn.put("employeeId_lt", employeeId_lt);
						}
						if(employeeId_le!=null){
                        	queryMapReturn.put("employeeId_le", employeeId_le);
						}
						if(employeeId_in!=null){
                        	queryMapReturn.put("employeeId_in", employeeId_in);
						}
						if(employeeId!=null){
                        	queryMapReturn.put("employeeId", employeeId);
						}		
																								Integer siteId_gt = (Integer)contentreq.get("siteId_gt");
						Integer siteId_ge = (Integer)contentreq.get("siteId_ge");
						Integer siteId_lt = (Integer)contentreq.get("siteId_lt");
						Integer siteId_le = (Integer)contentreq.get("siteId_le");
						String siteId_in = (String)contentreq.get("siteId_in");
						Integer siteId = (Integer)contentreq.get("siteId");
                        if(siteId_gt!=null){
                        	queryMapReturn.put("siteId_gt", siteId_gt);
						}
						if(siteId_ge!=null){
                        	queryMapReturn.put("siteId_ge", siteId_ge);
						}
						if(siteId_lt!=null){
                        	queryMapReturn.put("siteId_lt", siteId_lt);
						}
						if(siteId_le!=null){
                        	queryMapReturn.put("siteId_le", siteId_le);
						}
						if(siteId_in!=null){
                        	queryMapReturn.put("siteId_in", siteId_in);
						}
						if(siteId!=null){
                        	queryMapReturn.put("siteId", siteId);
						}		
																		
																														String delSite = (String)contentreq.get("delSite");
						if("true".equals(delSite)){
							delSiteReturn = true;
						}
																																																String delEmployee = (String)contentreq.get("delEmployee");
						if("true".equals(delEmployee)){
							delEmployeeReturn = true;
						}
																													}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (siteEmployeeReturn != null) {
				parseMap.put("siteEmployee", siteEmployeeReturn);
			}
			if (siteEmployeeListReturn != null && siteEmployeeListReturn.size() > 0) {
				parseMap.put("siteEmployeeList", siteEmployeeListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}	
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}		
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}
			
			
															if (siteShowReturn != null) {
				parseMap.put("siteShow", siteShowReturn);
			}
			if (delSiteReturn != null) {
				parseMap.put("delSite", delSiteReturn);
			}
																								if (employeeShowReturn != null) {
				parseMap.put("employeeShow", employeeShowReturn);
			}
			if (delEmployeeReturn != null) {
				parseMap.put("delEmployee", delEmployeeReturn);
			}
															
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command,String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
