package fsk.service.serviceTaskService;

import java.math.BigDecimal;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import org.apache.log4j.Logger;


import fsk.entity.serviceTask.ServiceTaskEntity;
import fsk.entity.service.ServiceEntity;

import fsk.entity.serviceTaskService.ServiceTaskServiceEntity;
import com.framework.system.db.connect.DbUtils;
import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.PageList;
import com.framework.system.db.query.QueryCondition;
import com.framework.system.db.query.OrderByCondition;
import com.framework.system.db.query.OrderVO;
import com.framework.system.db.transaction.TransactionManager;
import com.framework.system.util.StringUtil;



/**   
 * @Title: Service
 * @Description: 服务工单和服务项中间表服务类
 * @author feng.gu
 * @date 2016-08-10 09:05:41
 * @version V1.0   
 *
 */
public class ServiceTaskServiceService {
	   private static Logger logger = Logger.getLogger(ServiceTaskServiceService.class);
	   private DBManager dbManager = DBManager.getInstance();
    		
	   private static ServiceTaskServiceService serviceTaskServiceService;
	   /**
	    * 获取实例	
	    * @return
	    */
	   public static ServiceTaskServiceService getInstance(){
		if(serviceTaskServiceService==null){
			serviceTaskServiceService = new ServiceTaskServiceService();
		}
		return serviceTaskServiceService;
	   }
	                 	                 				     				     				     				     
				     	 
	   /**
		 * 保存记录
		 * 
		 * @param obj
		 */
		public boolean save(ServiceTaskServiceEntity serviceTaskService) {			
			boolean result =false;
			if(serviceTaskService!=null){
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					 tx.beginTransaction();					 					 
					 					 				     				     					     //关联信息保存
					     ServiceTaskEntity serviceTask = serviceTaskService.getServiceTask();
						 if(serviceTask!=null){						   
							 dbManager.saveNoTransaction(serviceTask);
							 serviceTaskService.setServiceTaskId(serviceTask.getId());
						 }						 
				     				     				     					 					 				     				     					     //关联信息保存
					     ServiceEntity service = serviceTaskService.getService();
						 if(service!=null){						   
							 dbManager.saveNoTransaction(service);
							 serviceTaskService.setServiceId(service.getId());
						 }						 
				     				     				     					 					 result=dbManager.saveNoTransaction(serviceTaskService);	
					 tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {				    
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  			
			}	
			return result;
		}
		
		/**
		 * 批量保存记录
		 * 
		 * @param list
		 */
		public boolean saveList(List<ServiceTaskServiceEntity> serviceTaskServiceList) {
			boolean result = false;
			if (serviceTaskServiceList != null && serviceTaskServiceList.size() > 0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 
					for(ServiceTaskServiceEntity serviceTaskService:serviceTaskServiceList){
						if(serviceTaskService!=null){												  								 
								 									 					                 								     								         //关联信息保存
									     ServiceTaskEntity serviceTask = serviceTaskService.getServiceTask();
										 if(serviceTask!=null){						   
											 dbManager.saveNoTransaction(serviceTask);
											 serviceTaskService.setServiceTaskId(serviceTask.getId());
										 }									 
								     								     								     								 									 					                 								     								         //关联信息保存
									     ServiceEntity service = serviceTaskService.getService();
										 if(service!=null){						   
											 dbManager.saveNoTransaction(service);
											 serviceTaskService.setServiceId(service.getId());
										 }									 
								     								     								     								 								 result=dbManager.saveNoTransaction(serviceTaskService);								 			
						}	
					}
				    tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
				/**
		 * 根据id读取记录
		 * 
		 * @param id
		 *            主键
		 * @param obj
		 */
		public ServiceTaskServiceEntity getById(Integer id) {
			ServiceTaskServiceEntity obj = null;
			if (id != null) {
				obj = (ServiceTaskServiceEntity) dbManager.getById(id, ServiceTaskServiceEntity.class);			
			}
			return obj;
		}
				
		
		/**
		 * 根据id读取记录
		 * @param id 主键
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息
				     				     				     		 		             	                 				     		 * @param serviceShow 是否查询关联信息
				     				     				     		 		 * @param obj
		 */
		public ServiceTaskServiceEntity getById(Integer id,Boolean serviceTaskShow,Boolean serviceShow) {
			ServiceTaskServiceEntity obj = null;
			if (id!=null) {
				obj = (ServiceTaskServiceEntity)dbManager.getById(id, ServiceTaskServiceEntity.class);
									 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				   					 	                 				     				        //查询关联内容
						if(serviceShow!=null&&serviceShow.booleanValue()&&obj!=null&&obj.getServiceId()!=null&&obj.getServiceId()>0){
							ServiceEntity service = (ServiceEntity)dbManager.getById(obj.getServiceId(), ServiceEntity.class);
							obj.setService(service);        	  	  
						}
				     				     				     				   			}
			return obj;
		}
		
		/**
		 * 根据条件查询记录集合（不分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合		
		 * @return
		 */
		public List<ServiceTaskServiceEntity> getListByCondition(Map<String,Object> queryMap) {
		    List<ServiceTaskServiceEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
																Object serviceId=queryMap.get("serviceId");
					Object serviceId_gt=queryMap.get("serviceId_gt");
					Object serviceId_ge=queryMap.get("serviceId_ge");
					Object serviceId_lt=queryMap.get("serviceId_lt");
					Object serviceId_le=queryMap.get("serviceId_le");
					Object serviceId_in=queryMap.get("serviceId_in");
																					Object serviceChilds=queryMap.get("serviceChilds");
					Object serviceChilds_like=queryMap.get("serviceChilds_like");
					Object serviceChilds_isNull=queryMap.get("serviceChilds_isNull");
					Object serviceChilds_isNotNull=queryMap.get("serviceChilds_isNotNull");
					Object serviceChilds_in=queryMap.get("serviceChilds_in");
																										Object serviceChildsComplete=queryMap.get("serviceChildsComplete");
					Object serviceChildsComplete_like=queryMap.get("serviceChildsComplete_like");
					Object serviceChildsComplete_isNull=queryMap.get("serviceChildsComplete_isNull");
					Object serviceChildsComplete_isNotNull=queryMap.get("serviceChildsComplete_isNotNull");
					Object serviceChildsComplete_in=queryMap.get("serviceChildsComplete_in");
																										Object expectedServiceTime_gt=queryMap.get("expectedServiceTime_gt");
					Object expectedServiceTime_ge=queryMap.get("expectedServiceTime_ge");
					Object expectedServiceTime_lt=queryMap.get("expectedServiceTime_lt");
					Object expectedServiceTime_le=queryMap.get("expectedServiceTime_le");
																										Object serviceTime_gt=queryMap.get("serviceTime_gt");
					Object serviceTime_ge=queryMap.get("serviceTime_ge");
					Object serviceTime_lt=queryMap.get("serviceTime_lt");
					Object serviceTime_le=queryMap.get("serviceTime_le");
												
			

																				
			
			QueryCondition qc = new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
																if(serviceId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.eq, serviceId));}
					if(serviceId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.gt, serviceId_gt));}
					if(serviceId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.ge, serviceId_ge));}
					if(serviceId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.lt, serviceId_lt));}
					if(serviceId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.le, serviceId_le));}
					if(serviceId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.in, serviceId_in));}
															  					if(serviceChilds!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.eq, serviceChilds));}
		            if(serviceChilds_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.like, serviceChilds_like));}
		            if(serviceChilds_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNull, serviceChilds_isNull));}
		            if(serviceChilds_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNotNull, serviceChilds_isNotNull));}
				    if(serviceChilds_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.in, serviceChilds_in));}
				  															  					if(serviceChildsComplete!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.eq, serviceChildsComplete));}
		            if(serviceChildsComplete_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.like, serviceChildsComplete_like));}
		            if(serviceChildsComplete_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNull, serviceChildsComplete_isNull));}
		            if(serviceChildsComplete_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNotNull, serviceChildsComplete_isNotNull));}
				    if(serviceChildsComplete_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.in, serviceChildsComplete_in));}
				  															  					if(expectedServiceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.gt, expectedServiceTime_gt));}
					if(expectedServiceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.ge, expectedServiceTime_ge));}
					if(expectedServiceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.lt, expectedServiceTime_lt));}
					if(expectedServiceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.le, expectedServiceTime_le));}
				  															  					if(serviceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.gt, serviceTime_gt));}
					if(serviceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.ge, serviceTime_ge));}
					if(serviceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.lt, serviceTime_lt));}
					if(serviceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.le, serviceTime_le));}
				  										
						  						  			            list = dbManager.queryByCondition(ServiceTaskServiceEntity.class,qc);    
            if(list!=null&&list.size()>0){
               returnlist = new ArrayList<ServiceTaskServiceEntity>();
               for (Object obj:list) {           
                 returnlist.add((ServiceTaskServiceEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		
		/**
		 * 根据条件查询记录集合（不分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		             	                 				     		 * @param serviceShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		 * @return
		 */
		public List<ServiceTaskServiceEntity> getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,Boolean serviceTaskShow,Boolean serviceShow) {
			List<ServiceTaskServiceEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
																Object serviceId=queryMap.get("serviceId");
					Object serviceId_gt=queryMap.get("serviceId_gt");
					Object serviceId_ge=queryMap.get("serviceId_ge");
					Object serviceId_lt=queryMap.get("serviceId_lt");
					Object serviceId_le=queryMap.get("serviceId_le");
					Object serviceId_in=queryMap.get("serviceId_in");
																					Object serviceChilds=queryMap.get("serviceChilds");
					Object serviceChilds_like=queryMap.get("serviceChilds_like");
					Object serviceChilds_isNull=queryMap.get("serviceChilds_isNull");
					Object serviceChilds_isNotNull=queryMap.get("serviceChilds_isNotNull");
					Object serviceChilds_in=queryMap.get("serviceChilds_in");
																										Object serviceChildsComplete=queryMap.get("serviceChildsComplete");
					Object serviceChildsComplete_like=queryMap.get("serviceChildsComplete_like");
					Object serviceChildsComplete_isNull=queryMap.get("serviceChildsComplete_isNull");
					Object serviceChildsComplete_isNotNull=queryMap.get("serviceChildsComplete_isNotNull");
					Object serviceChildsComplete_in=queryMap.get("serviceChildsComplete_in");
																										Object expectedServiceTime_gt=queryMap.get("expectedServiceTime_gt");
					Object expectedServiceTime_ge=queryMap.get("expectedServiceTime_ge");
					Object expectedServiceTime_lt=queryMap.get("expectedServiceTime_lt");
					Object expectedServiceTime_le=queryMap.get("expectedServiceTime_le");
																										Object serviceTime_gt=queryMap.get("serviceTime_gt");
					Object serviceTime_ge=queryMap.get("serviceTime_ge");
					Object serviceTime_lt=queryMap.get("serviceTime_lt");
					Object serviceTime_le=queryMap.get("serviceTime_le");
												
			

																				
			
			QueryCondition qc = new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
																if(serviceId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.eq, serviceId));}
					if(serviceId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.gt, serviceId_gt));}
					if(serviceId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.ge, serviceId_ge));}
					if(serviceId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.lt, serviceId_lt));}
					if(serviceId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.le, serviceId_le));}
					if(serviceId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.in, serviceId_in));}
															  					if(serviceChilds!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.eq, serviceChilds));}
		            if(serviceChilds_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.like, serviceChilds_like));}
		            if(serviceChilds_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNull, serviceChilds_isNull));}
		            if(serviceChilds_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNotNull, serviceChilds_isNotNull));}
				    if(serviceChilds_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.in, serviceChilds_in));}
				  															  					if(serviceChildsComplete!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.eq, serviceChildsComplete));}
		            if(serviceChildsComplete_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.like, serviceChildsComplete_like));}
		            if(serviceChildsComplete_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNull, serviceChildsComplete_isNull));}
		            if(serviceChildsComplete_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNotNull, serviceChildsComplete_isNotNull));}
				    if(serviceChildsComplete_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.in, serviceChildsComplete_in));}
				  															  					if(expectedServiceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.gt, expectedServiceTime_gt));}
					if(expectedServiceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.ge, expectedServiceTime_ge));}
					if(expectedServiceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.lt, expectedServiceTime_lt));}
					if(expectedServiceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.le, expectedServiceTime_le));}
				  															  					if(serviceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.gt, serviceTime_gt));}
					if(serviceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.ge, serviceTime_ge));}
					if(serviceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.lt, serviceTime_lt));}
					if(serviceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.le, serviceTime_le));}
				  										
						  						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}			
            list = dbManager.queryByConditions(ServiceTaskServiceEntity.class,qc,oc);
                                    int a=0;
            					             	                 				     				     if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()){
						a++;
					 }
				     				     				     		    		             	                 				     				     if(serviceShow!=null&&serviceShow.booleanValue()){
						a++;
					 }
				     				     				     		    		                if(a>0&&list!=null&&list.size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<list.size();i++){
					ServiceTaskServiceEntity obj = (ServiceTaskServiceEntity)list.get(i);
										 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				    					 	                 				     				        //查询关联内容
						if(serviceShow!=null&&serviceShow.booleanValue()&&obj!=null&&obj.getServiceId()!=null&&obj.getServiceId()>0){
							ServiceEntity service = (ServiceEntity)dbManager.getById(obj.getServiceId(), ServiceEntity.class);
							obj.setService(service);        	  	  
						}
				     				     				     				    					result.add(obj);					
				}
				list=result;			
		}	
					if(list!=null&&list.size()>0){
               returnlist = new ArrayList<ServiceTaskServiceEntity>();
               for (Object obj:list) {           
                 returnlist.add((ServiceTaskServiceEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数		
		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,int pageno,int pagesize) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
																Object serviceId=queryMap.get("serviceId");
					Object serviceId_gt=queryMap.get("serviceId_gt");
					Object serviceId_ge=queryMap.get("serviceId_ge");
					Object serviceId_lt=queryMap.get("serviceId_lt");
					Object serviceId_le=queryMap.get("serviceId_le");
					Object serviceId_in=queryMap.get("serviceId_in");
															  					Object serviceChilds=queryMap.get("serviceChilds");
					Object serviceChilds_like=queryMap.get("serviceChilds_like");
					Object serviceChilds_isNull=queryMap.get("serviceChilds_isNull");
					Object serviceChilds_isNotNull=queryMap.get("serviceChilds_isNotNull");
					Object serviceChilds_in=queryMap.get("serviceChilds_in");
				   															  					Object serviceChildsComplete=queryMap.get("serviceChildsComplete");
					Object serviceChildsComplete_like=queryMap.get("serviceChildsComplete_like");
					Object serviceChildsComplete_isNull=queryMap.get("serviceChildsComplete_isNull");
					Object serviceChildsComplete_isNotNull=queryMap.get("serviceChildsComplete_isNotNull");
					Object serviceChildsComplete_in=queryMap.get("serviceChildsComplete_in");
				   															  					Object expectedServiceTime_gt=queryMap.get("expectedServiceTime_gt");
					Object expectedServiceTime_ge=queryMap.get("expectedServiceTime_ge");
					Object expectedServiceTime_lt=queryMap.get("expectedServiceTime_lt");
					Object expectedServiceTime_le=queryMap.get("expectedServiceTime_le");
				  															  					Object serviceTime_gt=queryMap.get("serviceTime_gt");
					Object serviceTime_ge=queryMap.get("serviceTime_ge");
					Object serviceTime_lt=queryMap.get("serviceTime_lt");
					Object serviceTime_le=queryMap.get("serviceTime_le");
				  							
			

																				
			
			QueryCondition qc = new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
																if(serviceId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.eq, serviceId));}
					if(serviceId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.gt, serviceId_gt));}
					if(serviceId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.ge, serviceId_ge));}
					if(serviceId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.lt, serviceId_lt));}
					if(serviceId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.le, serviceId_le));}
					if(serviceId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.in, serviceId_in));}
															  					if(serviceChilds!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.eq, serviceChilds));}
		            if(serviceChilds_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.like, serviceChilds_like));}
		            if(serviceChilds_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNull, serviceChilds_isNull));}
		            if(serviceChilds_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNotNull, serviceChilds_isNotNull));}
				    if(serviceChilds_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.in, serviceChilds_in));}
				  															  					if(serviceChildsComplete!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.eq, serviceChildsComplete));}
		            if(serviceChildsComplete_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.like, serviceChildsComplete_like));}
		            if(serviceChildsComplete_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNull, serviceChildsComplete_isNull));}
		            if(serviceChildsComplete_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNotNull, serviceChildsComplete_isNotNull));}
				    if(serviceChildsComplete_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.in, serviceChildsComplete_in));}
				  															  					if(expectedServiceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.gt, expectedServiceTime_gt));}
					if(expectedServiceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.ge, expectedServiceTime_ge));}
					if(expectedServiceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.lt, expectedServiceTime_lt));}
					if(expectedServiceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.le, expectedServiceTime_le));}
				  															  					if(serviceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.gt, serviceTime_gt));}
					if(serviceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.ge, serviceTime_ge));}
					if(serviceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.lt, serviceTime_lt));}
					if(serviceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.le, serviceTime_le));}
				  										
						  						  			            pagelist = dbManager.queryByCondition(ServiceTaskServiceEntity.class,qc,pageno,pagesize);	                      			
			return pagelist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		             	                 				     		 * @param serviceShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,int pageno,int pagesize,Boolean serviceTaskShow,Boolean serviceShow) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
																Object serviceId=queryMap.get("serviceId");
					Object serviceId_gt=queryMap.get("serviceId_gt");
					Object serviceId_ge=queryMap.get("serviceId_ge");
					Object serviceId_lt=queryMap.get("serviceId_lt");
					Object serviceId_le=queryMap.get("serviceId_le");
					Object serviceId_in=queryMap.get("serviceId_in");
															  					Object serviceChilds=queryMap.get("serviceChilds");
					Object serviceChilds_like=queryMap.get("serviceChilds_like");
					Object serviceChilds_isNull=queryMap.get("serviceChilds_isNull");
					Object serviceChilds_isNotNull=queryMap.get("serviceChilds_isNotNull");
					Object serviceChilds_in=queryMap.get("serviceChilds_in");
				   															  					Object serviceChildsComplete=queryMap.get("serviceChildsComplete");
					Object serviceChildsComplete_like=queryMap.get("serviceChildsComplete_like");
					Object serviceChildsComplete_isNull=queryMap.get("serviceChildsComplete_isNull");
					Object serviceChildsComplete_isNotNull=queryMap.get("serviceChildsComplete_isNotNull");
					Object serviceChildsComplete_in=queryMap.get("serviceChildsComplete_in");
				   															  					Object expectedServiceTime_gt=queryMap.get("expectedServiceTime_gt");
					Object expectedServiceTime_ge=queryMap.get("expectedServiceTime_ge");
					Object expectedServiceTime_lt=queryMap.get("expectedServiceTime_lt");
					Object expectedServiceTime_le=queryMap.get("expectedServiceTime_le");
				  															  					Object serviceTime_gt=queryMap.get("serviceTime_gt");
					Object serviceTime_ge=queryMap.get("serviceTime_ge");
					Object serviceTime_lt=queryMap.get("serviceTime_lt");
					Object serviceTime_le=queryMap.get("serviceTime_le");
				  							
			

																				
			
			QueryCondition qc = new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
																if(serviceId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.eq, serviceId));}
					if(serviceId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.gt, serviceId_gt));}
					if(serviceId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.ge, serviceId_ge));}
					if(serviceId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.lt, serviceId_lt));}
					if(serviceId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.le, serviceId_le));}
					if(serviceId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.in, serviceId_in));}
															  					if(serviceChilds!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.eq, serviceChilds));}
		            if(serviceChilds_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.like, serviceChilds_like));}
		            if(serviceChilds_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNull, serviceChilds_isNull));}
		            if(serviceChilds_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNotNull, serviceChilds_isNotNull));}
				    if(serviceChilds_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.in, serviceChilds_in));}
				  															  					if(serviceChildsComplete!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.eq, serviceChildsComplete));}
		            if(serviceChildsComplete_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.like, serviceChildsComplete_like));}
		            if(serviceChildsComplete_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNull, serviceChildsComplete_isNull));}
		            if(serviceChildsComplete_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNotNull, serviceChildsComplete_isNotNull));}
				    if(serviceChildsComplete_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.in, serviceChildsComplete_in));}
				  															  					if(expectedServiceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.gt, expectedServiceTime_gt));}
					if(expectedServiceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.ge, expectedServiceTime_ge));}
					if(expectedServiceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.lt, expectedServiceTime_lt));}
					if(expectedServiceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.le, expectedServiceTime_le));}
				  															  					if(serviceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.gt, serviceTime_gt));}
					if(serviceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.ge, serviceTime_ge));}
					if(serviceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.lt, serviceTime_lt));}
					if(serviceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.le, serviceTime_le));}
				  										
						  						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}		
            pagelist = dbManager.queryByConditions(ServiceTaskServiceEntity.class,qc,oc,pageno,pagesize);	           
                                    int a=0;
            					             	                 				     				     if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()){
						a++;
					 }
				     				     				     		    		             	                 				     				     if(serviceShow!=null&&serviceShow.booleanValue()){
						a++;
					 }
				     				     				     		    		                if(a>0&&pagelist!=null&&pagelist.getResultList()!=null&&pagelist.getResultList().size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<pagelist.getResultList().size();i++){
					ServiceTaskServiceEntity obj = (ServiceTaskServiceEntity)pagelist.getResultList().get(i);
										 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				    					 	                 				     				        //查询关联内容
						if(serviceShow!=null&&serviceShow.booleanValue()&&obj!=null&&obj.getServiceId()!=null&&obj.getServiceId()>0){
							ServiceEntity service = (ServiceEntity)dbManager.getById(obj.getServiceId(), ServiceEntity.class);
							obj.setService(service);        	  	  
						}
				     				     				     				    					result.add(obj);					
				}
				pagelist.setResultList(result);			
		}	
					return pagelist;
		}
		
		/**
		 * 删除记录
		 * 
		 * @param id 主键
		 * @param obj
		 */
		public boolean del(Integer id,Boolean delServiceTask,Boolean delService) {
			boolean result = false;
			if (id !=null&&id>0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 					
										 	                 				     					    //删除关联信息
						if(delServiceTask!=null&&delServiceTask.booleanValue()){	
							ServiceTaskServiceEntity serviceTaskService = (ServiceTaskServiceEntity)dbManager.getById(id, ServiceTaskServiceEntity.class);
							if(serviceTaskService!=null&&serviceTaskService.getServiceTaskId()!=null){
								dbManager.delNoTransaction(serviceTaskService.getServiceTaskId(), ServiceTaskEntity.class);
							}						
						}
				     				     				     										 	                 				     					    //删除关联信息
						if(delService!=null&&delService.booleanValue()){	
							ServiceTaskServiceEntity serviceTaskService = (ServiceTaskServiceEntity)dbManager.getById(id, ServiceTaskServiceEntity.class);
							if(serviceTaskService!=null&&serviceTaskService.getServiceId()!=null){
								dbManager.delNoTransaction(serviceTaskService.getServiceId(), ServiceEntity.class);
							}						
						}
				     				     				     										result = dbManager.delNoTransaction(id, ServiceTaskServiceEntity.class);
					tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		/**
		 * 批量删除记录
		 * 
		 * @param ids
		 *            主键 英文逗号间隔
		 * @param obj
		 */
		public boolean del(String ids) {
			boolean result = false;
			if (ids != null && !"".equals(ids.trim())) {
				TransactionManager tx = DbUtils.getTranManager();
				try {
					tx.beginTransaction();
					QueryCondition qc = new QueryCondition(ServiceTaskServiceEntity.ID,QueryCondition.in, ids);
					result = dbManager.delByConditionsNoTransaction(ServiceTaskServiceEntity.class, qc);
					tx.commitAndClose();
				} catch (Exception e) {
					logger.error("数据库提交失败！");
					logger.error(e);
					result = false;
					try {
						tx.rollbackAndClose();
					} catch (Exception ex) {
						logger.error("数据库回滚失败！");
						logger.error(ex);
					}
				}
			}
			return result;
		}

		/**
		 * 批量条件删除记录
		 * @param queryMap 查询条件集合
		 */
		public boolean delList(Map<String,Object> queryMap,Boolean delServiceTask,Boolean delService) {
			boolean result = false;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
																Object serviceId=queryMap.get("serviceId");
					Object serviceId_gt=queryMap.get("serviceId_gt");
					Object serviceId_ge=queryMap.get("serviceId_ge");
					Object serviceId_lt=queryMap.get("serviceId_lt");
					Object serviceId_le=queryMap.get("serviceId_le");
					Object serviceId_in=queryMap.get("serviceId_in");
															  					Object serviceChilds=queryMap.get("serviceChilds");
					Object serviceChilds_like=queryMap.get("serviceChilds_like");
					Object serviceChilds_isNull=queryMap.get("serviceChilds_isNull");
					Object serviceChilds_isNotNull=queryMap.get("serviceChilds_isNotNull");
					Object serviceChilds_in=queryMap.get("serviceChilds_in");
				  															  					Object serviceChildsComplete=queryMap.get("serviceChildsComplete");
					Object serviceChildsComplete_like=queryMap.get("serviceChildsComplete_like");
					Object serviceChildsComplete_isNull=queryMap.get("serviceChildsComplete_isNull");
					Object serviceChildsComplete_isNotNull=queryMap.get("serviceChildsComplete_isNotNull");
					Object serviceChildsComplete_in=queryMap.get("serviceChildsComplete_in");
				  															  					Object expectedServiceTime_gt=queryMap.get("expectedServiceTime_gt");
					Object expectedServiceTime_ge=queryMap.get("expectedServiceTime_ge");
					Object expectedServiceTime_lt=queryMap.get("expectedServiceTime_lt");
					Object expectedServiceTime_le=queryMap.get("expectedServiceTime_le");
				  															  					Object serviceTime_gt=queryMap.get("serviceTime_gt");
					Object serviceTime_ge=queryMap.get("serviceTime_ge");
					Object serviceTime_lt=queryMap.get("serviceTime_lt");
					Object serviceTime_le=queryMap.get("serviceTime_le");
				  																											
			QueryCondition qc = new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
																if(serviceId!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.eq, serviceId));}
					if(serviceId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.gt, serviceId_gt));}
					if(serviceId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.ge, serviceId_ge));}
					if(serviceId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.lt, serviceId_lt));}
					if(serviceId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.le, serviceId_le));}
					if(serviceId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_ID, QueryCondition.in, serviceId_in));}
															  					if(serviceChilds!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.eq, serviceChilds));}
		            if(serviceChilds_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.like, serviceChilds_like));}
		            if(serviceChilds_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNull, serviceChilds_isNull));}
		            if(serviceChilds_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.isNotNull, serviceChilds_isNotNull));}
				    if(serviceChilds_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS, QueryCondition.in, serviceChilds_in));}
				  															  					if(serviceChildsComplete!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.eq, serviceChildsComplete));}
		            if(serviceChildsComplete_like!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.like, serviceChildsComplete_like));}
		            if(serviceChildsComplete_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNull, serviceChildsComplete_isNull));}
		            if(serviceChildsComplete_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.isNotNull, serviceChildsComplete_isNotNull));}
				    if(serviceChildsComplete_in!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_CHILDS_COMPLETE, QueryCondition.in, serviceChildsComplete_in));}
				  															  					if(expectedServiceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.gt, expectedServiceTime_gt));}
					if(expectedServiceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.ge, expectedServiceTime_ge));}
					if(expectedServiceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.lt, expectedServiceTime_lt));}
					if(expectedServiceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.EXPECTED_SERVICE_TIME, QueryCondition.le, expectedServiceTime_le));}
				  															  					if(serviceTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.gt, serviceTime_gt));}
					if(serviceTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.ge, serviceTime_ge));}
					if(serviceTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.lt, serviceTime_lt));}
					if(serviceTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskServiceEntity.SERVICE_TIME, QueryCondition.le, serviceTime_le));}
				  										
				            				            						if (qc.getQueryNextCondition()!=null) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 						
										 	                 				     					     //删除关联信息
						if(delServiceTask!=null&&delServiceTask.booleanValue()){
							List<Object> list=dbManager.queryByConditionNoTransaction(ServiceTaskServiceEntity.class,qc);
							String strIds="";
							if(list!=null&&list.size()>0){
								for(Object obj:list){
									ServiceTaskServiceEntity entity=(ServiceTaskServiceEntity)obj;
									strIds += entity.getServiceTaskId()+",";
								}
								strIds = strIds.substring(0, strIds.length()-1);
							}
							if(strIds!=null&&!"".equals(strIds)){
								QueryCondition qc1 = new QueryCondition(ServiceTaskEntity.ID, QueryCondition.in, strIds);
								dbManager.delByConditionsNoTransaction(ServiceTaskEntity.class, qc1);
							}
							
						}
				     				     				     										 	                 				     					     //删除关联信息
						if(delService!=null&&delService.booleanValue()){
							List<Object> list=dbManager.queryByConditionNoTransaction(ServiceTaskServiceEntity.class,qc);
							String strIds="";
							if(list!=null&&list.size()>0){
								for(Object obj:list){
									ServiceTaskServiceEntity entity=(ServiceTaskServiceEntity)obj;
									strIds += entity.getServiceId()+",";
								}
								strIds = strIds.substring(0, strIds.length()-1);
							}
							if(strIds!=null&&!"".equals(strIds)){
								QueryCondition qc1 = new QueryCondition(ServiceEntity.ID, QueryCondition.in, strIds);
								dbManager.delByConditionsNoTransaction(ServiceEntity.class, qc1);
							}
							
						}
				     				     				     										result = dbManager.delByConditionsNoTransaction(ServiceTaskServiceEntity.class,qc);				
					tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		
}
