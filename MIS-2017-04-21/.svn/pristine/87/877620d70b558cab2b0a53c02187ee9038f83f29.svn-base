package fsk.service.serviceEmployee;

import java.math.BigDecimal;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import org.apache.log4j.Logger;


import fsk.entity.serviceTask.ServiceTaskEntity;
import fsk.entity.employee.EmployeeEntity;

import fsk.entity.serviceEmployee.ServiceEmployeeEntity;
import com.framework.system.db.connect.DbUtils;
import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.PageList;
import com.framework.system.db.query.QueryCondition;
import com.framework.system.db.query.OrderByCondition;
import com.framework.system.db.query.OrderVO;
import com.framework.system.db.transaction.TransactionManager;
import com.framework.system.util.StringUtil;



/**   
 * @Title: Service
 * @Description: 服务人员服务类
 * @author feng.gu
 * @date 2016-08-02 14:39:47
 * @version V1.0   
 *
 */
public class ServiceEmployeeService {
	   private static Logger logger = Logger.getLogger(ServiceEmployeeService.class);
	   private DBManager dbManager = DBManager.getInstance();
    		
	   private static ServiceEmployeeService serviceEmployeeService;
	   /**
	    * 获取实例	
	    * @return
	    */
	   public static ServiceEmployeeService getInstance(){
		if(serviceEmployeeService==null){
			serviceEmployeeService = new ServiceEmployeeService();
		}
		return serviceEmployeeService;
	   }
	                 	                 				     				     				     				     
				     	 
	   /**
		 * 保存记录
		 * 
		 * @param obj
		 */
		public boolean save(ServiceEmployeeEntity serviceEmployee) {			
			boolean result =false;
			if(serviceEmployee!=null){
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					 tx.beginTransaction();					 					 
					 					 				     				     					     //关联信息保存
					     ServiceTaskEntity serviceTask = serviceEmployee.getServiceTask();
						 if(serviceTask!=null){						   
							 dbManager.saveNoTransaction(serviceTask);
							 serviceEmployee.setServiceTaskId(serviceTask.getId());
						 }						 
				     				     				     					 					 				     				     					     //关联信息保存
					     EmployeeEntity employee = serviceEmployee.getEmployee();
						 if(employee!=null){						   
							 dbManager.saveNoTransaction(employee);
							 serviceEmployee.setEmployeeId(employee.getId());
						 }						 
				     				     				     					 					 result=dbManager.saveNoTransaction(serviceEmployee);	
					 tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {				    
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  			
			}	
			return result;
		}
		
		/**
		 * 批量保存记录
		 * 
		 * @param list
		 */
		public boolean saveList(List<ServiceEmployeeEntity> serviceEmployeeList) {
			boolean result = false;
			if (serviceEmployeeList != null && serviceEmployeeList.size() > 0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 
					for(ServiceEmployeeEntity serviceEmployee:serviceEmployeeList){
						if(serviceEmployee!=null){												  								 
								 									 					                 								     								         //关联信息保存
									     ServiceTaskEntity serviceTask = serviceEmployee.getServiceTask();
										 if(serviceTask!=null){						   
											 dbManager.saveNoTransaction(serviceTask);
											 serviceEmployee.setServiceTaskId(serviceTask.getId());
										 }									 
								     								     								     								 									 					                 								     								         //关联信息保存
									     EmployeeEntity employee = serviceEmployee.getEmployee();
										 if(employee!=null){						   
											 dbManager.saveNoTransaction(employee);
											 serviceEmployee.setEmployeeId(employee.getId());
										 }									 
								     								     								     								 								 result=dbManager.saveNoTransaction(serviceEmployee);								 			
						}	
					}
				    tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
				/**
		 * 根据id读取记录
		 * 
		 * @param id
		 *            主键
		 * @param obj
		 */
		public ServiceEmployeeEntity getById(Integer id) {
			ServiceEmployeeEntity obj = null;
			if (id != null) {
				obj = (ServiceEmployeeEntity) dbManager.getById(id, ServiceEmployeeEntity.class);			
			}
			return obj;
		}
				
		
		/**
		 * 根据id读取记录
		 * @param id 主键
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息
				     				     				     		 		             	                 				     		 * @param employeeShow 是否查询关联信息
				     				     				     		 		 * @param obj
		 */
		public ServiceEmployeeEntity getById(Integer id,Boolean serviceTaskShow,Boolean employeeShow) {
			ServiceEmployeeEntity obj = null;
			if (id!=null) {
				obj = (ServiceEmployeeEntity)dbManager.getById(id, ServiceEmployeeEntity.class);
									 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				   					 	                 				     				        //查询关联内容
						if(employeeShow!=null&&employeeShow.booleanValue()&&obj!=null&&obj.getEmployeeId()!=null&&obj.getEmployeeId()>0){
							EmployeeEntity employee = (EmployeeEntity)dbManager.getById(obj.getEmployeeId(), EmployeeEntity.class);
							obj.setEmployee(employee);        	  	  
						}
				     				     				     				   			}
			return obj;
		}
		
		/**
		 * 根据条件查询记录集合（不分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合		
		 * @return
		 */
		public List<ServiceEmployeeEntity> getListByCondition(Map<String,Object> queryMap) {
		    List<ServiceEmployeeEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object employeeId=queryMap.get("employeeId");
					Object employeeId_gt=queryMap.get("employeeId_gt");
					Object employeeId_ge=queryMap.get("employeeId_ge");
					Object employeeId_lt=queryMap.get("employeeId_lt");
					Object employeeId_le=queryMap.get("employeeId_le");
					Object employeeId_in=queryMap.get("employeeId_in");
																					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
																										Object employeeCode=queryMap.get("employeeCode");
					Object employeeCode_like=queryMap.get("employeeCode_like");
					Object employeeCode_isNull=queryMap.get("employeeCode_isNull");
					Object employeeCode_isNotNull=queryMap.get("employeeCode_isNotNull");
					Object employeeCode_in=queryMap.get("employeeCode_in");
																										Object role=queryMap.get("role");
					Object role_like=queryMap.get("role_like");
					Object role_isNull=queryMap.get("role_isNull");
					Object role_isNotNull=queryMap.get("role_isNotNull");
					Object role_in=queryMap.get("role_in");
																					Object type=queryMap.get("type");
					Object type_gt=queryMap.get("type_gt");
					Object type_ge=queryMap.get("type_ge");
					Object type_lt=queryMap.get("type_lt");
					Object type_le=queryMap.get("type_le");
					Object type_in=queryMap.get("type_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
							
			

																				
			
			QueryCondition qc = new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.in, id_in));}
																if(employeeId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.eq, employeeId));}
					if(employeeId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.gt, employeeId_gt));}
					if(employeeId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.ge, employeeId_ge));}
					if(employeeId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.lt, employeeId_lt));}
					if(employeeId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.le, employeeId_le));}
					if(employeeId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.in, employeeId_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(employeeCode!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.eq, employeeCode));}
		            if(employeeCode_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.like, employeeCode_like));}
		            if(employeeCode_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNull, employeeCode_isNull));}
		            if(employeeCode_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNotNull, employeeCode_isNotNull));}
				    if(employeeCode_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.in, employeeCode_in));}
				  															  					if(role!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.eq, role));}
		            if(role_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.like, role_like));}
		            if(role_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNull, role_isNull));}
		            if(role_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNotNull, role_isNotNull));}
				    if(role_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.in, role_in));}
				  																if(type!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.eq, type));}
					if(type_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.gt, type_gt));}
					if(type_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.ge, type_ge));}
					if(type_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.lt, type_lt));}
					if(type_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.le, type_le));}
					if(type_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.in, type_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
										
						  						  			            list = dbManager.queryByCondition(ServiceEmployeeEntity.class,qc);    
            if(list!=null&&list.size()>0){
               returnlist = new ArrayList<ServiceEmployeeEntity>();
               for (Object obj:list) {           
                 returnlist.add((ServiceEmployeeEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		
		/**
		 * 根据条件查询记录集合（不分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		             	                 				     		 * @param employeeShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		 * @return
		 */
		public List<ServiceEmployeeEntity> getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,Boolean serviceTaskShow,Boolean employeeShow) {
			List<ServiceEmployeeEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object employeeId=queryMap.get("employeeId");
					Object employeeId_gt=queryMap.get("employeeId_gt");
					Object employeeId_ge=queryMap.get("employeeId_ge");
					Object employeeId_lt=queryMap.get("employeeId_lt");
					Object employeeId_le=queryMap.get("employeeId_le");
					Object employeeId_in=queryMap.get("employeeId_in");
																					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
																										Object employeeCode=queryMap.get("employeeCode");
					Object employeeCode_like=queryMap.get("employeeCode_like");
					Object employeeCode_isNull=queryMap.get("employeeCode_isNull");
					Object employeeCode_isNotNull=queryMap.get("employeeCode_isNotNull");
					Object employeeCode_in=queryMap.get("employeeCode_in");
																										Object role=queryMap.get("role");
					Object role_like=queryMap.get("role_like");
					Object role_isNull=queryMap.get("role_isNull");
					Object role_isNotNull=queryMap.get("role_isNotNull");
					Object role_in=queryMap.get("role_in");
																					Object type=queryMap.get("type");
					Object type_gt=queryMap.get("type_gt");
					Object type_ge=queryMap.get("type_ge");
					Object type_lt=queryMap.get("type_lt");
					Object type_le=queryMap.get("type_le");
					Object type_in=queryMap.get("type_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
							
			

																				
			
			QueryCondition qc = new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.in, id_in));}
																if(employeeId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.eq, employeeId));}
					if(employeeId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.gt, employeeId_gt));}
					if(employeeId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.ge, employeeId_ge));}
					if(employeeId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.lt, employeeId_lt));}
					if(employeeId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.le, employeeId_le));}
					if(employeeId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.in, employeeId_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(employeeCode!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.eq, employeeCode));}
		            if(employeeCode_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.like, employeeCode_like));}
		            if(employeeCode_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNull, employeeCode_isNull));}
		            if(employeeCode_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNotNull, employeeCode_isNotNull));}
				    if(employeeCode_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.in, employeeCode_in));}
				  															  					if(role!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.eq, role));}
		            if(role_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.like, role_like));}
		            if(role_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNull, role_isNull));}
		            if(role_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNotNull, role_isNotNull));}
				    if(role_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.in, role_in));}
				  																if(type!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.eq, type));}
					if(type_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.gt, type_gt));}
					if(type_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.ge, type_ge));}
					if(type_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.lt, type_lt));}
					if(type_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.le, type_le));}
					if(type_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.in, type_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
										
						  						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}			
            list = dbManager.queryByConditions(ServiceEmployeeEntity.class,qc,oc);
                                    int a=0;
            					             	                 				     				     if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()){
						a++;
					 }
				     				     				     		    		             	                 				     				     if(employeeShow!=null&&employeeShow.booleanValue()){
						a++;
					 }
				     				     				     		    		                if(a>0&&list!=null&&list.size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<list.size();i++){
					ServiceEmployeeEntity obj = (ServiceEmployeeEntity)list.get(i);
										 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				    					 	                 				     				        //查询关联内容
						if(employeeShow!=null&&employeeShow.booleanValue()&&obj!=null&&obj.getEmployeeId()!=null&&obj.getEmployeeId()>0){
							EmployeeEntity employee = (EmployeeEntity)dbManager.getById(obj.getEmployeeId(), EmployeeEntity.class);
							obj.setEmployee(employee);        	  	  
						}
				     				     				     				    					result.add(obj);					
				}
				list=result;			
		}	
					if(list!=null&&list.size()>0){
               returnlist = new ArrayList<ServiceEmployeeEntity>();
               for (Object obj:list) {           
                 returnlist.add((ServiceEmployeeEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数		
		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,int pageno,int pagesize) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object employeeId=queryMap.get("employeeId");
					Object employeeId_gt=queryMap.get("employeeId_gt");
					Object employeeId_ge=queryMap.get("employeeId_ge");
					Object employeeId_lt=queryMap.get("employeeId_lt");
					Object employeeId_le=queryMap.get("employeeId_le");
					Object employeeId_in=queryMap.get("employeeId_in");
															  					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
				   															  					Object employeeCode=queryMap.get("employeeCode");
					Object employeeCode_like=queryMap.get("employeeCode_like");
					Object employeeCode_isNull=queryMap.get("employeeCode_isNull");
					Object employeeCode_isNotNull=queryMap.get("employeeCode_isNotNull");
					Object employeeCode_in=queryMap.get("employeeCode_in");
				   															  					Object role=queryMap.get("role");
					Object role_like=queryMap.get("role_like");
					Object role_isNull=queryMap.get("role_isNull");
					Object role_isNotNull=queryMap.get("role_isNotNull");
					Object role_in=queryMap.get("role_in");
				   																Object type=queryMap.get("type");
					Object type_gt=queryMap.get("type_gt");
					Object type_ge=queryMap.get("type_ge");
					Object type_lt=queryMap.get("type_lt");
					Object type_le=queryMap.get("type_le");
					Object type_in=queryMap.get("type_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
							
			

																				
			
			QueryCondition qc = new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.in, id_in));}
																if(employeeId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.eq, employeeId));}
					if(employeeId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.gt, employeeId_gt));}
					if(employeeId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.ge, employeeId_ge));}
					if(employeeId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.lt, employeeId_lt));}
					if(employeeId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.le, employeeId_le));}
					if(employeeId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.in, employeeId_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(employeeCode!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.eq, employeeCode));}
		            if(employeeCode_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.like, employeeCode_like));}
		            if(employeeCode_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNull, employeeCode_isNull));}
		            if(employeeCode_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNotNull, employeeCode_isNotNull));}
				    if(employeeCode_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.in, employeeCode_in));}
				  															  					if(role!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.eq, role));}
		            if(role_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.like, role_like));}
		            if(role_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNull, role_isNull));}
		            if(role_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNotNull, role_isNotNull));}
				    if(role_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.in, role_in));}
				  																if(type!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.eq, type));}
					if(type_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.gt, type_gt));}
					if(type_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.ge, type_ge));}
					if(type_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.lt, type_lt));}
					if(type_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.le, type_le));}
					if(type_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.in, type_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
										
						  						  			            pagelist = dbManager.queryByCondition(ServiceEmployeeEntity.class,qc,pageno,pagesize);	                      			
			return pagelist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		             	                 				     		 * @param employeeShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,int pageno,int pagesize,Boolean serviceTaskShow,Boolean employeeShow) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object employeeId=queryMap.get("employeeId");
					Object employeeId_gt=queryMap.get("employeeId_gt");
					Object employeeId_ge=queryMap.get("employeeId_ge");
					Object employeeId_lt=queryMap.get("employeeId_lt");
					Object employeeId_le=queryMap.get("employeeId_le");
					Object employeeId_in=queryMap.get("employeeId_in");
															  					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
				   															  					Object employeeCode=queryMap.get("employeeCode");
					Object employeeCode_like=queryMap.get("employeeCode_like");
					Object employeeCode_isNull=queryMap.get("employeeCode_isNull");
					Object employeeCode_isNotNull=queryMap.get("employeeCode_isNotNull");
					Object employeeCode_in=queryMap.get("employeeCode_in");
				   															  					Object role=queryMap.get("role");
					Object role_like=queryMap.get("role_like");
					Object role_isNull=queryMap.get("role_isNull");
					Object role_isNotNull=queryMap.get("role_isNotNull");
					Object role_in=queryMap.get("role_in");
				   																Object type=queryMap.get("type");
					Object type_gt=queryMap.get("type_gt");
					Object type_ge=queryMap.get("type_ge");
					Object type_lt=queryMap.get("type_lt");
					Object type_le=queryMap.get("type_le");
					Object type_in=queryMap.get("type_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
							
			

																				
			
			QueryCondition qc = new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.in, id_in));}
																if(employeeId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.eq, employeeId));}
					if(employeeId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.gt, employeeId_gt));}
					if(employeeId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.ge, employeeId_ge));}
					if(employeeId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.lt, employeeId_lt));}
					if(employeeId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.le, employeeId_le));}
					if(employeeId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.in, employeeId_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(employeeCode!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.eq, employeeCode));}
		            if(employeeCode_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.like, employeeCode_like));}
		            if(employeeCode_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNull, employeeCode_isNull));}
		            if(employeeCode_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNotNull, employeeCode_isNotNull));}
				    if(employeeCode_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.in, employeeCode_in));}
				  															  					if(role!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.eq, role));}
		            if(role_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.like, role_like));}
		            if(role_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNull, role_isNull));}
		            if(role_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNotNull, role_isNotNull));}
				    if(role_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.in, role_in));}
				  																if(type!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.eq, type));}
					if(type_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.gt, type_gt));}
					if(type_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.ge, type_ge));}
					if(type_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.lt, type_lt));}
					if(type_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.le, type_le));}
					if(type_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.in, type_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
										
						  						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}		
            pagelist = dbManager.queryByConditions(ServiceEmployeeEntity.class,qc,oc,pageno,pagesize);	           
                                    int a=0;
            					             	                 				     				     if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()){
						a++;
					 }
				     				     				     		    		             	                 				     				     if(employeeShow!=null&&employeeShow.booleanValue()){
						a++;
					 }
				     				     				     		    		                if(a>0&&pagelist!=null&&pagelist.getResultList()!=null&&pagelist.getResultList().size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<pagelist.getResultList().size();i++){
					ServiceEmployeeEntity obj = (ServiceEmployeeEntity)pagelist.getResultList().get(i);
										 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				    					 	                 				     				        //查询关联内容
						if(employeeShow!=null&&employeeShow.booleanValue()&&obj!=null&&obj.getEmployeeId()!=null&&obj.getEmployeeId()>0){
							EmployeeEntity employee = (EmployeeEntity)dbManager.getById(obj.getEmployeeId(), EmployeeEntity.class);
							obj.setEmployee(employee);        	  	  
						}
				     				     				     				    					result.add(obj);					
				}
				pagelist.setResultList(result);			
		}	
					return pagelist;
		}
		
		/**
		 * 删除记录
		 * 
		 * @param id 主键
		 * @param obj
		 */
		public boolean del(Integer id,Boolean delServiceTask,Boolean delEmployee) {
			boolean result = false;
			if (id !=null&&id>0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 					
										 	                 				     					    //删除关联信息
						if(delServiceTask!=null&&delServiceTask.booleanValue()){	
							ServiceEmployeeEntity serviceEmployee = (ServiceEmployeeEntity)dbManager.getById(id, ServiceEmployeeEntity.class);
							if(serviceEmployee!=null&&serviceEmployee.getServiceTaskId()!=null){
								dbManager.delNoTransaction(serviceEmployee.getServiceTaskId(), ServiceTaskEntity.class);
							}						
						}
				     				     				     										 	                 				     					    //删除关联信息
						if(delEmployee!=null&&delEmployee.booleanValue()){	
							ServiceEmployeeEntity serviceEmployee = (ServiceEmployeeEntity)dbManager.getById(id, ServiceEmployeeEntity.class);
							if(serviceEmployee!=null&&serviceEmployee.getEmployeeId()!=null){
								dbManager.delNoTransaction(serviceEmployee.getEmployeeId(), EmployeeEntity.class);
							}						
						}
				     				     				     										result = dbManager.delNoTransaction(id, ServiceEmployeeEntity.class);
					tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		/**
		 * 批量删除记录
		 * 
		 * @param ids
		 *            主键 英文逗号间隔
		 * @param obj
		 */
		public boolean del(String ids) {
			boolean result = false;
			if (ids != null && !"".equals(ids.trim())) {
				TransactionManager tx = DbUtils.getTranManager();
				try {
					tx.beginTransaction();
					QueryCondition qc = new QueryCondition(ServiceEmployeeEntity.ID,QueryCondition.in, ids);
					result = dbManager.delByConditionsNoTransaction(ServiceEmployeeEntity.class, qc);
					tx.commitAndClose();
				} catch (Exception e) {
					logger.error("数据库提交失败！");
					logger.error(e);
					result = false;
					try {
						tx.rollbackAndClose();
					} catch (Exception ex) {
						logger.error("数据库回滚失败！");
						logger.error(ex);
					}
				}
			}
			return result;
		}

		/**
		 * 批量条件删除记录
		 * @param queryMap 查询条件集合
		 */
		public boolean delList(Map<String,Object> queryMap,Boolean delServiceTask,Boolean delEmployee) {
			boolean result = false;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object employeeId=queryMap.get("employeeId");
					Object employeeId_gt=queryMap.get("employeeId_gt");
					Object employeeId_ge=queryMap.get("employeeId_ge");
					Object employeeId_lt=queryMap.get("employeeId_lt");
					Object employeeId_le=queryMap.get("employeeId_le");
					Object employeeId_in=queryMap.get("employeeId_in");
															  					Object name=queryMap.get("name");
					Object name_like=queryMap.get("name_like");
					Object name_isNull=queryMap.get("name_isNull");
					Object name_isNotNull=queryMap.get("name_isNotNull");
					Object name_in=queryMap.get("name_in");
				  															  					Object employeeCode=queryMap.get("employeeCode");
					Object employeeCode_like=queryMap.get("employeeCode_like");
					Object employeeCode_isNull=queryMap.get("employeeCode_isNull");
					Object employeeCode_isNotNull=queryMap.get("employeeCode_isNotNull");
					Object employeeCode_in=queryMap.get("employeeCode_in");
				  															  					Object role=queryMap.get("role");
					Object role_like=queryMap.get("role_like");
					Object role_isNull=queryMap.get("role_isNull");
					Object role_isNotNull=queryMap.get("role_isNotNull");
					Object role_in=queryMap.get("role_in");
				  																Object type=queryMap.get("type");
					Object type_gt=queryMap.get("type_gt");
					Object type_ge=queryMap.get("type_ge");
					Object type_lt=queryMap.get("type_lt");
					Object type_le=queryMap.get("type_le");
					Object type_in=queryMap.get("type_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
																											
			QueryCondition qc = new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ID, QueryCondition.in, id_in));}
																if(employeeId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.eq, employeeId));}
					if(employeeId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.gt, employeeId_gt));}
					if(employeeId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.ge, employeeId_ge));}
					if(employeeId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.lt, employeeId_lt));}
					if(employeeId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.le, employeeId_le));}
					if(employeeId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_ID, QueryCondition.in, employeeId_in));}
															  					if(name!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.eq, name));}
		            if(name_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.like, name_like));}
		            if(name_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNull, name_isNull));}
		            if(name_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.isNotNull, name_isNotNull));}
				    if(name_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.NAME, QueryCondition.in, name_in));}
				  															  					if(employeeCode!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.eq, employeeCode));}
		            if(employeeCode_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.like, employeeCode_like));}
		            if(employeeCode_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNull, employeeCode_isNull));}
		            if(employeeCode_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.isNotNull, employeeCode_isNotNull));}
				    if(employeeCode_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.EMPLOYEE_CODE, QueryCondition.in, employeeCode_in));}
				  															  					if(role!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.eq, role));}
		            if(role_like!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.like, role_like));}
		            if(role_isNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNull, role_isNull));}
		            if(role_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.isNotNull, role_isNotNull));}
				    if(role_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.ROLE, QueryCondition.in, role_in));}
				  																if(type!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.eq, type));}
					if(type_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.gt, type_gt));}
					if(type_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.ge, type_ge));}
					if(type_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.lt, type_lt));}
					if(type_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.le, type_le));}
					if(type_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.TYPE, QueryCondition.in, type_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceEmployeeEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
										
				            				            						if (qc.getQueryNextCondition()!=null) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 						
										 	                 				     					     //删除关联信息
						if(delServiceTask!=null&&delServiceTask.booleanValue()){
							List<Object> list=dbManager.queryByConditionNoTransaction(ServiceEmployeeEntity.class,qc);
							String strIds="";
							if(list!=null&&list.size()>0){
								for(Object obj:list){
									ServiceEmployeeEntity entity=(ServiceEmployeeEntity)obj;
									strIds += entity.getServiceTaskId()+",";
								}
								strIds = strIds.substring(0, strIds.length()-1);
							}
							if(strIds!=null&&!"".equals(strIds)){
								QueryCondition qc1 = new QueryCondition(ServiceTaskEntity.ID, QueryCondition.in, strIds);
								dbManager.delByConditionsNoTransaction(ServiceTaskEntity.class, qc1);
							}
							
						}
				     				     				     										 	                 				     					     //删除关联信息
						if(delEmployee!=null&&delEmployee.booleanValue()){
							List<Object> list=dbManager.queryByConditionNoTransaction(ServiceEmployeeEntity.class,qc);
							String strIds="";
							if(list!=null&&list.size()>0){
								for(Object obj:list){
									ServiceEmployeeEntity entity=(ServiceEmployeeEntity)obj;
									strIds += entity.getEmployeeId()+",";
								}
								strIds = strIds.substring(0, strIds.length()-1);
							}
							if(strIds!=null&&!"".equals(strIds)){
								QueryCondition qc1 = new QueryCondition(EmployeeEntity.ID, QueryCondition.in, strIds);
								dbManager.delByConditionsNoTransaction(EmployeeEntity.class, qc1);
							}
							
						}
				     				     				     										result = dbManager.delByConditionsNoTransaction(ServiceEmployeeEntity.class,qc);				
					tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		
}
