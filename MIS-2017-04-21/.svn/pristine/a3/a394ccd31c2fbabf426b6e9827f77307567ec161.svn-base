package fsk.entity.physiologicalParametersCurrent;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;

import fsk.entity.older.OlderEntity;


import com.framework.system.db.dao.annotation.ColumnDescription;
import com.framework.system.db.dao.annotation.RelationlDescription;
import com.framework.system.db.dao.annotation.TableDescription;

/**   
 * @Title: Entity
 * @Description: 生理参数当前表
 * @author feng.gu
 * @date 2016-07-07 17:49:05
 * @version V1.0   
 *
 */
@TableDescription(name = "B_PHYSIOLOGICAL_PARAMETERS_CURRENT")
public class PhysiologicalParametersCurrentEntity implements java.io.Serializable {
    public final static String ID = "ID";
    public final static String OLDER_ID = "OLDER_ID";
    public final static String TYPE = "TYPE";
    public final static String VALUE = "VALUE";
    public final static String CREATE_TIME = "CREATE_TIME";
    public final static String STATUS = "STATUS";
    public final static String UNIT = "UNIT";
    public final static String MAX_VALUE = "MAX_VALUE";
    public final static String MIN_VALUE = "MIN_VALUE";
    public final static String THRESHOLD_TIME = "THRESHOLD_TIME";
    public final static String THRESHOLD_PERSON = "THRESHOLD_PERSON";
    public final static String VALUE2 = "VALUE2";
    public final static String MAX_VALUE2 = "MAX_VALUE2";
    public final static String MIN_VALUE2 = "MIN_VALUE2";
    public final static String STATUS2 = "STATUS2";
    public final static String THRESHOLD_TIME2 = "THRESHOLD_TIME2";
    public final static String THRESHOLD_PERSON2 = "THRESHOLD_PERSON2";
    public final static String MEASURE_PERSON = "MEASURE_PERSON";
    
    /**
	 * 主键
	 */
	@ColumnDescription(name = "ID", isPrimaryKey = true, isAutoIncrement = true)
	private Integer id;
    /**
	 * 老人ID
	 */
	@ColumnDescription(name = "OLDER_ID")
	private Integer olderId;
    /**
	 * 参数类型(1-收缩压 1-舒张压 3-餐前血糖 4-餐后血糖 5-脉搏 6-体温 7-呼吸  8-骨密度)
	 */
	@ColumnDescription(name = "TYPE")
	private Integer type;
    /**
	 * 最新值
	 */
	@ColumnDescription(name = "VALUE")
	private BigDecimal value;
    /**
	 * 最新值测量时间
	 */
	@ColumnDescription(name = "CREATE_TIME")
	private String createTime;
    /**
	 * 最新值状态（1-正常 2-偏高 3-偏低）
	 */
	@ColumnDescription(name = "STATUS")
	private Integer status;
    /**
	 * 最新值单位（血压：mmHg；血糖：mmol/L；脉搏：次/分；体温：℃；呼吸：次/分）
	 */
	@ColumnDescription(name = "UNIT")
	private String unit;
    /**
	 * 阈值-最高值（默认阈值：收缩压（90-140）、舒张压（60-90）、空腹血糖（4-6.1）、餐后血糖（4-7.8）、脉搏（60-100）、体温（36-37.4）、呼吸（67-80）)
	 */
	@ColumnDescription(name = "MAX_VALUE")
	private BigDecimal maxValue;
    /**
	 * 阈值-最低值（默认阈值：收缩压（90-140）、舒张压（60-90）、空腹血糖（4-6.1）、餐后血糖（4-7.8）、脉搏（60-100）、体温（36-37.4）、呼吸（67-80）)
	 */
	@ColumnDescription(name = "MIN_VALUE")
	private BigDecimal minValue;
    /**
	 * 阈值设置时间
	 */
	@ColumnDescription(name = "THRESHOLD_TIME")
	private String thresholdTime;
    /**
	 * 阈值添加人
	 */
	@ColumnDescription(name = "THRESHOLD_PERSON")
	private String thresholdPerson;
    /**
	 * 舒张压
	 */
	@ColumnDescription(name = "VALUE2")
	private BigDecimal value2;
    /**
	 * 舒张压-最高值
	 */
	@ColumnDescription(name = "MAX_VALUE2")
	private BigDecimal maxValue2;
    /**
	 * 舒张压-阈值-最低值
	 */
	@ColumnDescription(name = "MIN_VALUE2")
	private BigDecimal minValue2;
    /**
	 * 舒张压最新值状态（1-正常 2-偏高 3-偏低）
	 */
	@ColumnDescription(name = "STATUS2")
	private Integer status2;
    /**
	 * 舒张压阈值设置时间
	 */
	@ColumnDescription(name = "THRESHOLD_TIME2")
	private String thresholdTime2;
    /**
	 * 阈值添加人2
	 */
	@ColumnDescription(name = "THRESHOLD_PERSON2")
	private String thresholdPerson2;
    /**
	 * 测量人
	 */
	@ColumnDescription(name = "MEASURE_PERSON")
	private String measurePerson;
        
    public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}
    public Integer getOlderId() {
		return olderId;
	}

	public void setOlderId(Integer olderId) {
		this.olderId = olderId;
	}
    public Integer getType() {
		return type;
	}

	public void setType(Integer type) {
		this.type = type;
	}
    public BigDecimal getValue() {
		return value;
	}

	public void setValue(BigDecimal value) {
		this.value = value;
	}
    public String getCreateTime() {
		return createTime;
	}

	public void setCreateTime(String createTime) {
		this.createTime = createTime;
	}
    public Integer getStatus() {
		return status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}
    public String getUnit() {
		return unit;
	}

	public void setUnit(String unit) {
		this.unit = unit;
	}
    public BigDecimal getMaxValue() {
		return maxValue;
	}

	public void setMaxValue(BigDecimal maxValue) {
		this.maxValue = maxValue;
	}
    public BigDecimal getMinValue() {
		return minValue;
	}

	public void setMinValue(BigDecimal minValue) {
		this.minValue = minValue;
	}
    public String getThresholdTime() {
		return thresholdTime;
	}

	public void setThresholdTime(String thresholdTime) {
		this.thresholdTime = thresholdTime;
	}
    public String getThresholdPerson() {
		return thresholdPerson;
	}

	public void setThresholdPerson(String thresholdPerson) {
		this.thresholdPerson = thresholdPerson;
	}
    public BigDecimal getValue2() {
		return value2;
	}

	public void setValue2(BigDecimal value2) {
		this.value2 = value2;
	}
    public BigDecimal getMaxValue2() {
		return maxValue2;
	}

	public void setMaxValue2(BigDecimal maxValue2) {
		this.maxValue2 = maxValue2;
	}
    public BigDecimal getMinValue2() {
		return minValue2;
	}

	public void setMinValue2(BigDecimal minValue2) {
		this.minValue2 = minValue2;
	}
    public Integer getStatus2() {
		return status2;
	}

	public void setStatus2(Integer status2) {
		this.status2 = status2;
	}
    public String getThresholdTime2() {
		return thresholdTime2;
	}

	public void setThresholdTime2(String thresholdTime2) {
		this.thresholdTime2 = thresholdTime2;
	}
    public String getThresholdPerson2() {
		return thresholdPerson2;
	}

	public void setThresholdPerson2(String thresholdPerson2) {
		this.thresholdPerson2 = thresholdPerson2;
	}
    public String getMeasurePerson() {
		return measurePerson;
	}

	public void setMeasurePerson(String measurePerson) {
		this.measurePerson = measurePerson;
	}
        
    /**
     * 关系描述
	 */
	    @RelationlDescription(relation = "ManyToOne",
		joinEntity="OlderEntity"	,joinColumn="ID"	)
			
			
		private OlderEntity older;
	        
	public OlderEntity getOlder() {
		return older;
    }
	
	public void setOlder(OlderEntity older) {
		this.older = older;
	}
			
}
