package fsk.handler.caseRecord;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.log4j.Logger;

import com.framework.system.business.handler.BaseHandler;
import com.framework.system.common.service.SystemService;
import com.framework.system.db.query.OrderVO;

import fsk.entity.caseRecord.CaseRecordEntity;
import fsk.entity.medicalHistory.MedicalHistoryEntity;
import fsk.pack.caseRecord.CaseRecordPack;
import fsk.parse.caseRecord.CaseRecordParse;
import fsk.service.caseRecord.CaseRecordService;
import fsk.service.medicalHistory.MedicalHistoryService;

/**
 * @Title: Handler
 * @Description: 病例记录业务处理器
 * @author feng.gu
 * @date 2016-07-19 11:09:09
 * @version V1.0
 * 
 */
public class CaseRecordHandler extends BaseHandler {
	private static Logger logger = Logger.getLogger(CaseRecordService.class);
	/**
	 * 解析器
	 */
	private CaseRecordParse caseRecordParse = CaseRecordParse.getInstance();
	/**
	 * 业务处理器
	 */
	private CaseRecordService caseRecordService = CaseRecordService.getInstance();
	/**
	 * 封装器
	 */
	private CaseRecordPack caseRecordPack = CaseRecordPack.getInstance();

	private static CaseRecordHandler caseRecordHandler;
	private static MedicalHistoryService medicalHistoryService = MedicalHistoryService.getInstance();

	/**
	 * 系统服务类
	 */
	private SystemService systemService = SystemService.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static CaseRecordHandler getInstance() {
		if (caseRecordHandler == null) {
			caseRecordHandler = new CaseRecordHandler();
		}
		return caseRecordHandler;
	}

	/**
	 * 
	 * @param type
	 *            1-json 2-xml
	 * @param entityName
	 * @param command
	 * @param reqStr
	 * @param request
	 * @param response
	 */
	public String doHandler(int type, String command, String reqStr, HttpServletRequest request, HttpServletResponse response) {
		logger.debug("请求消息：" + reqStr);
		String resultStr = "";
		try {
			// 解析
			Map<String, Object> parseMap = caseRecordParse.parse(type, command, reqStr, request);
			String action = (String) parseMap.get("action");
			CaseRecordEntity caseRecord = (CaseRecordEntity) parseMap.get("caseRecord");
			List<CaseRecordEntity> caseRecordList = (List<CaseRecordEntity>) parseMap.get("caseRecordList");
			Integer id = (Integer) parseMap.get("id");
			Map<String, Object> queryMap = (Map<String, Object>) parseMap.get("queryMap");
			int pageno = (Integer) parseMap.get("pageno");
			int pagesize = (Integer) parseMap.get("pagesize");
			List<OrderVO> orderList = (List<OrderVO>) parseMap.get("orderList");

			Boolean olderShow = (Boolean) parseMap.get("olderShow");
			Boolean delOlder = (Boolean) parseMap.get("delOlder");
			Boolean medicalHistoryListShow = (Boolean) parseMap.get("medicalHistoryListShow");
			Boolean delMedicalHistoryList = (Boolean) parseMap.get("delMedicalHistoryList");

			// 业务处理
			Object result = null;
			if ("save".equals(action)) {
				// *编辑时先删除 pei
				if (caseRecord.getId() != null) {
					if (caseRecord.getMedicalHistoryList() != null) {
						Map<String, Object> queryMapmed = new HashMap<String, Object>();
						queryMapmed.put("caseRecordId", caseRecord.getId());
						List<MedicalHistoryEntity> entityList = medicalHistoryService.getListByCondition(queryMapmed);
						String ids = "";
						if (entityList != null && entityList.size() > 0) {
							for (int i = 0; i < entityList.size(); i++) {
								MedicalHistoryEntity entity = entityList.get(i);
								ids = ids + entity.getId() + ",";
							}
						}
						if (!"".equals(ids)) {
							ids = ids.replaceAll(",,", ",");
							ids = ids.substring(0, ids.length() - 1);
							medicalHistoryService.del(ids);
						}
					}
				}
				result = caseRecordService.save(caseRecord);
			} else if ("saveList".equals(action)) {
				result = caseRecordService.saveList(caseRecordList);
			} else if ("getById".equals(action)) {
				result = caseRecordService.getById(id, olderShow, medicalHistoryListShow);
			} else if ("getListByCondition".equals(action)) {
				// 根据数据权限 增加查询条件
				queryMap = systemService.addDataRule("CaseRecordEntity", queryMap, request);
				result = caseRecordService.getListByCondition(queryMap, orderList, pageno, pagesize, olderShow, medicalHistoryListShow);
			} else if ("del".equals(action)) {
				result = caseRecordService.del(id, delOlder, delMedicalHistoryList);
			} else if ("delList".equals(action)) {
				result = caseRecordService.delList(queryMap, delOlder, delMedicalHistoryList);
			}
			// 封装
			Map<String, Object> packMap = caseRecordPack.pack(type, action, result, caseRecord);
			String actionBack = (String) packMap.get("action");
			String resultBack = (String) packMap.get("result");
			String desBack = (String) packMap.get("des");
			JSONObject pageBack = (JSONObject) packMap.get("page");
			JSONObject contentBack = (JSONObject) packMap.get("content");

			JSONObject repJson = new JSONObject();
			if (actionBack != null && !"".equals(actionBack)) {
				repJson.put("action", actionBack);
			}
			if (resultBack != null && !"".equals(resultBack)) {
				repJson.put("result", resultBack);
			}
			if (desBack != null && !"".equals(desBack)) {
				repJson.put("des", desBack);
			}
			if (pageBack != null) {
				repJson.put("page", pageBack);
			}
			if (contentBack != null && !"".equals(contentBack)) {
				repJson.put("content", contentBack);
			}
			logger.debug("返回消息：" + repJson.toString());
			resultStr = repJson.toString();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return resultStr;
	}
}
