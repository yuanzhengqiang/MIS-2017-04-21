package fsk.parse.olderAddress;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;

import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.OrderVO;
import com.framework.system.util.JsonUtil;

import fsk.entity.older.OlderEntity;
import fsk.entity.olderAddress.OlderAddressEntity;

/**
 * @Title: Parse
 * @Description: 老人地址表解析器
 * @author feng.gu
 * @date 2017-02-08 12:41:57
 * @version V1.0
 * 
 */
public class OlderAddressParse {
	private static Logger logger = Logger.getLogger(OlderAddressParse.class);
	private static OlderAddressParse olderAddressParse;
	private DBManager dbManager = DBManager.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static OlderAddressParse getInstance() {
		if (olderAddressParse == null) {
			olderAddressParse = new OlderAddressParse();
		}
		return olderAddressParse;
	}

	public Map<String, Object> parse(int type, String command, String reqStr, HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command, reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command, reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command, String reqStr, HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			OlderAddressEntity olderAddressReturn = null;
			List<OlderAddressEntity> olderAddressListReturn = null;
			Integer idReturn = null;
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;

			Boolean olderShowReturn = false;
			Boolean delOlderReturn = false;

			// json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject) reqParams.get("content");
			if ("ADD_OLDER_ADDRESS_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				olderAddressReturn = new OlderAddressEntity();
				if (true) {
					if (contentreq != null) {
						Integer id = (Integer) contentreq.get("id");
						if (id != null) {
							olderAddressReturn = (OlderAddressEntity) dbManager.getById(id, OlderAddressEntity.class);
							olderAddressReturn.setId(id);
						}
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId != null) {
							olderAddressReturn.setOlderId(olderId);
						}
						Integer addressType = (Integer) contentreq.get("addressType");
						if (addressType != null) {
							olderAddressReturn.setAddressType(addressType);
						}
						Integer provinceId = (Integer) contentreq.get("provinceId");
						if (provinceId != null) {
							olderAddressReturn.setProvinceId(provinceId);
						}
						Integer cityId = (Integer) contentreq.get("cityId");
						if (cityId != null) {
							olderAddressReturn.setCityId(cityId);
						}
						Integer areaId = (Integer) contentreq.get("areaId");
						if (areaId != null) {
							olderAddressReturn.setAreaId(areaId);
						}
						String address = (String) contentreq.get("address");
						if (address != null) {
							olderAddressReturn.setAddress(address);
						}
						String street = (String) contentreq.get("street");
						if (street != null) {
							olderAddressReturn.setStreet(street);
						}
						String committeeVillage = (String) contentreq.get("committeeVillage");
						if (committeeVillage != null) {
							olderAddressReturn.setCommitteeVillage(committeeVillage);
						}
						String road = (String) contentreq.get("road");
						if (road != null) {
							olderAddressReturn.setRoad(road);
						}
						String lane = (String) contentreq.get("lane");
						if (lane != null) {
							olderAddressReturn.setLane(lane);
						}
						String number = (String) contentreq.get("number");
						if (number != null) {
							olderAddressReturn.setNumber(number);
						}
						String room = (String) contentreq.get("room");
						if (room != null) {
							olderAddressReturn.setRoom(room);
						}
						String zipCode = (String) contentreq.get("zipCode");
						if (zipCode != null) {
							olderAddressReturn.setZipCode(zipCode);
						}
					}
				}
				if (true) {
					Object older = contentreq.get("older");
					if (older != null) {
						JSONObject obj = (JSONObject) older;
						if (obj != null) {
							OlderEntity entity = new OlderEntity();
							Integer id = (Integer) obj.get("id");
							if (id != null) {
								entity.setId(id);
							}
							Integer nurseEmployeeId = (Integer) obj.get("nurseEmployeeId");
							if (nurseEmployeeId != null) {
								entity.setNurseEmployeeId(nurseEmployeeId);
							}
							Integer userId = (Integer) obj.get("userId");
							if (userId != null) {
								entity.setUserId(userId);
							}
							String memberNum = (String) obj.get("memberNum");
							if (memberNum != null) {
								entity.setMemberNum(memberNum);
							}
							String memberCard = (String) obj.get("memberCard");
							if (memberCard != null) {
								entity.setMemberCard(memberCard);
							}
							String memberSource = (String) obj.get("memberSource");
							if (memberSource != null) {
								entity.setMemberSource(memberSource);
							}
							String attentionPoint = (String) obj.get("attentionPoint");
							if (attentionPoint != null) {
								entity.setAttentionPoint(attentionPoint);
							}
							Integer nurseLevel = (Integer) obj.get("nurseLevel");
							if (nurseLevel != null) {
								entity.setNurseLevel(nurseLevel);
							}
							Integer memberStatus = (Integer) obj.get("memberStatus");
							if (memberStatus != null) {
								entity.setMemberStatus(memberStatus);
							}
							String lastAssessmentDate = (String) obj.get("lastAssessmentDate");
							if (lastAssessmentDate != null) {
								entity.setLastAssessmentDate(lastAssessmentDate);
							}
							Integer assessmentCycle = (Integer) obj.get("assessmentCycle");
							if (assessmentCycle != null) {
								entity.setAssessmentCycle(assessmentCycle);
							}
							Double chargeMonth = JsonUtil.getJSONDouble(obj, "chargeMonth");
							if (chargeMonth != null) {
								entity.setChargeMonth(BigDecimal.valueOf(chargeMonth));
							}
							Integer requiredServiceTimes = (Integer) obj.get("requiredServiceTimes");
							if (requiredServiceTimes != null) {
								entity.setRequiredServiceTimes(requiredServiceTimes);
							}
							Integer alreadyServiceTimes = (Integer) obj.get("alreadyServiceTimes");
							if (alreadyServiceTimes != null) {
								entity.setAlreadyServiceTimes(alreadyServiceTimes);
							}
							String mainPhoto = (String) obj.get("mainPhoto");
							if (mainPhoto != null) {
								entity.setMainPhoto(mainPhoto);
							}
							String name = (String) obj.get("name");
							if (name != null) {
								entity.setName(name);
							}
							String idnumber = (String) obj.get("idnumber");
							if (idnumber != null) {
								entity.setIdnumber(idnumber);
							}
							String socialSecurityNumber = (String) obj.get("socialSecurityNumber");
							if (socialSecurityNumber != null) {
								entity.setSocialSecurityNumber(socialSecurityNumber);
							}
							String gender = (String) obj.get("gender");
							if (gender != null) {
								entity.setGender(gender);
							}
							String birthdate = (String) obj.get("birthdate");
							if (birthdate != null) {
								entity.setBirthdate(birthdate);
							}
							String nation = (String) obj.get("nation");
							if (nation != null) {
								entity.setNation(nation);
							}
							String education = (String) obj.get("education");
							if (education != null) {
								entity.setEducation(education);
							}
							String maritalStatus = (String) obj.get("maritalStatus");
							if (maritalStatus != null) {
								entity.setMaritalStatus(maritalStatus);
							}
							String occupation = (String) obj.get("occupation");
							if (occupation != null) {
								entity.setOccupation(occupation);
							}
							String homeTel = (String) obj.get("homeTel");
							if (homeTel != null) {
								entity.setHomeTel(homeTel);
							}
							String mobileTel = (String) obj.get("mobileTel");
							if (mobileTel != null) {
								entity.setMobileTel(mobileTel);
							}
							String bloodType = (String) obj.get("bloodType");
							if (bloodType != null) {
								entity.setBloodType(bloodType);
							}
							String symptom = (String) obj.get("symptom");
							if (symptom != null) {
								entity.setSymptom(symptom);
							}
							String symptomOther = (String) obj.get("symptomOther");
							if (symptomOther != null) {
								entity.setSymptomOther(symptomOther);
							}
							String drugAllergy = (String) obj.get("drugAllergy");
							if (drugAllergy != null) {
								entity.setDrugAllergy(drugAllergy);
							}
							String drugAllergyOther = (String) obj.get("drugAllergyOther");
							if (drugAllergyOther != null) {
								entity.setDrugAllergyOther(drugAllergyOther);
							}
							String cognitive = (String) obj.get("cognitive");
							if (cognitive != null) {
								entity.setCognitive(cognitive);
							}
							String emotion = (String) obj.get("emotion");
							if (emotion != null) {
								entity.setEmotion(emotion);
							}
							String sportsFre = (String) obj.get("sportsFre");
							if (sportsFre != null) {
								entity.setSportsFre(sportsFre);
							}
							Integer sportsTime = (Integer) obj.get("sportsTime");
							if (sportsTime != null) {
								entity.setSportsTime(sportsTime);
							}
							Integer holdSportsTime = (Integer) obj.get("holdSportsTime");
							if (holdSportsTime != null) {
								entity.setHoldSportsTime(holdSportsTime);
							}
							String sportsType = (String) obj.get("sportsType");
							if (sportsType != null) {
								entity.setSportsType(sportsType);
							}
							String diet = (String) obj.get("diet");
							if (diet != null) {
								entity.setDiet(diet);
							}
							String smoking = (String) obj.get("smoking");
							if (smoking != null) {
								entity.setSmoking(smoking);
							}
							Integer smokingDay = (Integer) obj.get("smokingDay");
							if (smokingDay != null) {
								entity.setSmokingDay(smokingDay);
							}
							String quitAlcohol = (String) obj.get("quitAlcohol");
							if (quitAlcohol != null) {
								entity.setQuitAlcohol(quitAlcohol);
							}
							Integer quitAlcoholAge = (Integer) obj.get("quitAlcoholAge");
							if (quitAlcoholAge != null) {
								entity.setQuitAlcoholAge(quitAlcoholAge);
							}
							Integer startAlcoholAge = (Integer) obj.get("startAlcoholAge");
							if (startAlcoholAge != null) {
								entity.setStartAlcoholAge(startAlcoholAge);
							}
							Integer drunkYear = (Integer) obj.get("drunkYear");
							if (drunkYear != null) {
								entity.setDrunkYear(drunkYear);
							}
							String alcoholType = (String) obj.get("alcoholType");
							if (alcoholType != null) {
								entity.setAlcoholType(alcoholType);
							}
							String alcoholTypeOther = (String) obj.get("alcoholTypeOther");
							if (alcoholTypeOther != null) {
								entity.setAlcoholTypeOther(alcoholTypeOther);
							}
							String brainBloodVessel = (String) obj.get("brainBloodVessel");
							if (brainBloodVessel != null) {
								entity.setBrainBloodVessel(brainBloodVessel);
							}
							String brainBloodVesselOther = (String) obj.get("brainBloodVesselOther");
							if (brainBloodVesselOther != null) {
								entity.setBrainBloodVesselOther(brainBloodVesselOther);
							}
							String kindney = (String) obj.get("kindney");
							if (kindney != null) {
								entity.setKindney(kindney);
							}
							String kindneyOther = (String) obj.get("kindneyOther");
							if (kindneyOther != null) {
								entity.setKindneyOther(kindneyOther);
							}
							String heart = (String) obj.get("heart");
							if (heart != null) {
								entity.setHeart(heart);
							}
							String heartOther = (String) obj.get("heartOther");
							if (heartOther != null) {
								entity.setHeartOther(heartOther);
							}
							String bloodVessel = (String) obj.get("bloodVessel");
							if (bloodVessel != null) {
								entity.setBloodVessel(bloodVessel);
							}
							String bloodVesselOther = (String) obj.get("bloodVesselOther");
							if (bloodVesselOther != null) {
								entity.setBloodVesselOther(bloodVesselOther);
							}
							String eye = (String) obj.get("eye");
							if (eye != null) {
								entity.setEye(eye);
							}
							String eyeOther = (String) obj.get("eyeOther");
							if (eyeOther != null) {
								entity.setEyeOther(eyeOther);
							}
							String otherDisease = (String) obj.get("otherDisease");
							if (otherDisease != null) {
								entity.setOtherDisease(otherDisease);
							}
							Integer serviceProvinceId = (Integer) obj.get("serviceProvinceId");
							if (serviceProvinceId != null) {
								entity.setServiceProvinceId(serviceProvinceId);
							}
							Integer serviceCityId = (Integer) obj.get("serviceCityId");
							if (serviceCityId != null) {
								entity.setServiceCityId(serviceCityId);
							}
							Integer serviceAreaId = (Integer) obj.get("serviceAreaId");
							if (serviceAreaId != null) {
								entity.setServiceAreaId(serviceAreaId);
							}
							Integer serviceStreetId = (Integer) obj.get("serviceStreetId");
							if (serviceStreetId != null) {
								entity.setServiceStreetId(serviceStreetId);
							}
							String familyComposition = (String) obj.get("familyComposition");
							if (familyComposition != null) {
								entity.setFamilyComposition(familyComposition);
							}
							String live = (String) obj.get("live");
							if (live != null) {
								entity.setLive(live);
							}
							String liveOther = (String) obj.get("liveOther");
							if (liveOther != null) {
								entity.setLiveOther(liveOther);
							}
							String economic = (String) obj.get("economic");
							if (economic != null) {
								entity.setEconomic(economic);
							}
							String economicOther = (String) obj.get("economicOther");
							if (economicOther != null) {
								entity.setEconomicOther(economicOther);
							}
							String house = (String) obj.get("house");
							if (house != null) {
								entity.setHouse(house);
							}
							String houseOther = (String) obj.get("houseOther");
							if (houseOther != null) {
								entity.setHouseOther(houseOther);
							}
							String interest = (String) obj.get("interest");
							if (interest != null) {
								entity.setInterest(interest);
							}
							String lifeExperience = (String) obj.get("lifeExperience");
							if (lifeExperience != null) {
								entity.setLifeExperience(lifeExperience);
							}
							String specialExperience = (String) obj.get("specialExperience");
							if (specialExperience != null) {
								entity.setSpecialExperience(specialExperience);
							}
							String specialExperienceOther = (String) obj.get("specialExperienceOther");
							if (specialExperienceOther != null) {
								entity.setSpecialExperienceOther(specialExperienceOther);
							}
							String residence = (String) obj.get("residence");
							if (residence != null) {
								entity.setResidence(residence);
							}
							String elevator = (String) obj.get("elevator");
							if (elevator != null) {
								entity.setElevator(elevator);
							}
							String step = (String) obj.get("step");
							if (step != null) {
								entity.setStep(step);
							}
							String stepOther = (String) obj.get("stepOther");
							if (stepOther != null) {
								entity.setStepOther(stepOther);
							}
							String restroom = (String) obj.get("restroom");
							if (restroom != null) {
								entity.setRestroom(restroom);
							}
							String restroomOther = (String) obj.get("restroomOther");
							if (restroomOther != null) {
								entity.setRestroomOther(restroomOther);
							}
							String bathroomTub = (String) obj.get("bathroomTub");
							if (bathroomTub != null) {
								entity.setBathroomTub(bathroomTub);
							}
							String bathroomShower = (String) obj.get("bathroomShower");
							if (bathroomShower != null) {
								entity.setBathroomShower(bathroomShower);
							}
							String bathroomStrip = (String) obj.get("bathroomStrip");
							if (bathroomStrip != null) {
								entity.setBathroomStrip(bathroomStrip);
							}
							String kitchenOther = (String) obj.get("kitchenOther");
							if (kitchenOther != null) {
								entity.setKitchenOther(kitchenOther);
							}
							String kitchen = (String) obj.get("kitchen");
							if (kitchen != null) {
								entity.setKitchen(kitchen);
							}
							String clean = (String) obj.get("clean");
							if (clean != null) {
								entity.setClean(clean);
							}
							String shopping = (String) obj.get("shopping");
							if (shopping != null) {
								entity.setShopping(shopping);
							}
							String shoppingTraffic = (String) obj.get("shoppingTraffic");
							if (shoppingTraffic != null) {
								entity.setShoppingTraffic(shoppingTraffic);
							}
							String shoppingAccessibility = (String) obj.get("shoppingAccessibility");
							if (shoppingAccessibility != null) {
								entity.setShoppingAccessibility(shoppingAccessibility);
							}
							String shoppingOther = (String) obj.get("shoppingOther");
							if (shoppingOther != null) {
								entity.setShoppingOther(shoppingOther);
							}
							String livingEnvironmentDefect = (String) obj.get("livingEnvironmentDefect");
							if (livingEnvironmentDefect != null) {
								entity.setLivingEnvironmentDefect(livingEnvironmentDefect);
							}
							String dailyWater = (String) obj.get("dailyWater");
							if (dailyWater != null) {
								entity.setDailyWater(dailyWater);
							}
							String dailyDrinking = (String) obj.get("dailyDrinking");
							if (dailyDrinking != null) {
								entity.setDailyDrinking(dailyDrinking);
							}
							String drinking = (String) obj.get("drinking");
							if (drinking != null) {
								entity.setDrinking(drinking);
							}
							String gadget = (String) obj.get("gadget");
							if (gadget != null) {
								entity.setGadget(gadget);
							}
							String mainFood = (String) obj.get("mainFood");
							if (mainFood != null) {
								entity.setMainFood(mainFood);
							}
							String fruitsVegetables = (String) obj.get("fruitsVegetables");
							if (fruitsVegetables != null) {
								entity.setFruitsVegetables(fruitsVegetables);
							}
							String salt = (String) obj.get("salt");
							if (salt != null) {
								entity.setSalt(salt);
							}
							String oil = (String) obj.get("oil");
							if (oil != null) {
								entity.setOil(oil);
							}
							String fish = (String) obj.get("fish");
							if (fish != null) {
								entity.setFish(fish);
							}
							String meat = (String) obj.get("meat");
							if (meat != null) {
								entity.setMeat(meat);
							}
							String beanProducts = (String) obj.get("beanProducts");
							if (beanProducts != null) {
								entity.setBeanProducts(beanProducts);
							}
							String milk = (String) obj.get("milk");
							if (milk != null) {
								entity.setMilk(milk);
							}
							String foodForm = (String) obj.get("foodForm");
							if (foodForm != null) {
								entity.setFoodForm(foodForm);
							}
							String dysphagia = (String) obj.get("dysphagia");
							if (dysphagia != null) {
								entity.setDysphagia(dysphagia);
							}
							String morningSit = (String) obj.get("morningSit");
							if (morningSit != null) {
								entity.setMorningSit(morningSit);
							}
							String noonSit = (String) obj.get("noonSit");
							if (noonSit != null) {
								entity.setNoonSit(noonSit);
							}
							String nightSit = (String) obj.get("nightSit");
							if (nightSit != null) {
								entity.setNightSit(nightSit);
							}
							String lateAfternoonTea = (String) obj.get("lateAfternoonTea");
							if (lateAfternoonTea != null) {
								entity.setLateAfternoonTea(lateAfternoonTea);
							}
							String urine = (String) obj.get("urine");
							if (urine != null) {
								entity.setUrine(urine);
							}
							String urineNum = (String) obj.get("urineNum");
							if (urineNum != null) {
								entity.setUrineNum(urineNum);
							}
							String urineMethod = (String) obj.get("urineMethod");
							if (urineMethod != null) {
								entity.setUrineMethod(urineMethod);
							}
							String urineType = (String) obj.get("urineType");
							if (urineType != null) {
								entity.setUrineType(urineType);
							}
							String urineTypeOther = (String) obj.get("urineTypeOther");
							if (urineTypeOther != null) {
								entity.setUrineTypeOther(urineTypeOther);
							}
							String shit = (String) obj.get("shit");
							if (shit != null) {
								entity.setShit(shit);
							}
							String shitDay = (String) obj.get("shitDay");
							if (shitDay != null) {
								entity.setShitDay(shitDay);
							}
							String shitMethod = (String) obj.get("shitMethod");
							if (shitMethod != null) {
								entity.setShitMethod(shitMethod);
							}
							String shitType = (String) obj.get("shitType");
							if (shitType != null) {
								entity.setShitType(shitType);
							}
							String shitTypeOther = (String) obj.get("shitTypeOther");
							if (shitTypeOther != null) {
								entity.setShitTypeOther(shitTypeOther);
							}
							String sportsForm = (String) obj.get("sportsForm");
							if (sportsForm != null) {
								entity.setSportsForm(sportsForm);
							}
							String sportsT = (String) obj.get("sportsT");
							if (sportsT != null) {
								entity.setSportsT(sportsT);
							}
							String sportsF = (String) obj.get("sportsF");
							if (sportsF != null) {
								entity.setSportsF(sportsF);
							}
							String sportsNo = (String) obj.get("sportsNo");
							if (sportsNo != null) {
								entity.setSportsNo(sportsNo);
							}
							String bathNum = (String) obj.get("bathNum");
							if (bathNum != null) {
								entity.setBathNum(bathNum);
							}
							String bathMethod = (String) obj.get("bathMethod");
							if (bathMethod != null) {
								entity.setBathMethod(bathMethod);
							}
							String goOut = (String) obj.get("goOut");
							if (goOut != null) {
								entity.setGoOut(goOut);
							}
							String goOutOther = (String) obj.get("goOutOther");
							if (goOutOther != null) {
								entity.setGoOutOther(goOutOther);
							}
							String brush = (String) obj.get("brush");
							if (brush != null) {
								entity.setBrush(brush);
							}
							String communication = (String) obj.get("communication");
							if (communication != null) {
								entity.setCommunication(communication);
							}
							String sleepHour = (String) obj.get("sleepHour");
							if (sleepHour != null) {
								entity.setSleepHour(sleepHour);
							}
							String sleepQuality = (String) obj.get("sleepQuality");
							if (sleepQuality != null) {
								entity.setSleepQuality(sleepQuality);
							}
							String morningSpirit = (String) obj.get("morningSpirit");
							if (morningSpirit != null) {
								entity.setMorningSpirit(morningSpirit);
							}
							Double accountNum = JsonUtil.getJSONDouble(obj, "accountNum");
							if (accountNum != null) {
								entity.setAccountNum(BigDecimal.valueOf(accountNum));
							}
							String lastChatTime = (String) obj.get("lastChatTime");
							if (lastChatTime != null) {
								entity.setLastChatTime(lastChatTime);
							}
							String lastChatContent = (String) obj.get("lastChatContent");
							if (lastChatContent != null) {
								entity.setLastChatContent(lastChatContent);
							}
							String hasNewNotice = (String) obj.get("hasNewNotice");
							if (hasNewNotice != null) {
								entity.setHasNewNotice(hasNewNotice);
							}
							String chronicDisease = (String) obj.get("chronicDisease");
							if (chronicDisease != null) {
								entity.setChronicDisease(chronicDisease);
							}
							String createTime = (String) obj.get("createTime");
							if (createTime != null) {
								entity.setCreateTime(createTime);
							}
							String updateTime = (String) obj.get("updateTime");
							if (updateTime != null) {
								entity.setUpdateTime(updateTime);
							}
							String lastReviewTime = (String) obj.get("lastReviewTime");
							if (lastReviewTime != null) {
								entity.setLastReviewTime(lastReviewTime);
							}
							Integer source = (Integer) obj.get("source");
							if (source != null) {
								entity.setSource(source);
							}
							olderAddressReturn.setOlder(entity);
						}
					}
				}
			} else if ("QUERY_OLDER_ADDRESS_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
						String olderShow = (String) contentreq.get("olderShow");
						if ("true".equals(olderShow)) {
							olderShowReturn = true;
						}
					}
				}
			} else if ("QUERY_OLDER_ADDRESS_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer olderId_gt = (Integer) contentreq.get("olderId_gt");
						Integer olderId_ge = (Integer) contentreq.get("olderId_ge");
						Integer olderId_lt = (Integer) contentreq.get("olderId_lt");
						Integer olderId_le = (Integer) contentreq.get("olderId_le");
						String olderId_in = (String) contentreq.get("olderId_in");
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId_gt != null) {
							queryMapReturn.put("olderId_gt", olderId_gt);
						}
						if (olderId_ge != null) {
							queryMapReturn.put("olderId_ge", olderId_ge);
						}
						if (olderId_lt != null) {
							queryMapReturn.put("olderId_lt", olderId_lt);
						}
						if (olderId_le != null) {
							queryMapReturn.put("olderId_le", olderId_le);
						}
						if (olderId_in != null) {
							queryMapReturn.put("olderId_in", olderId_in);
						}
						if (olderId != null) {
							queryMapReturn.put("olderId", olderId);
						}
						Integer addressType_gt = (Integer) contentreq.get("addressType_gt");
						Integer addressType_ge = (Integer) contentreq.get("addressType_ge");
						Integer addressType_lt = (Integer) contentreq.get("addressType_lt");
						Integer addressType_le = (Integer) contentreq.get("addressType_le");
						String addressType_in = (String) contentreq.get("addressType_in");
						Integer addressType = (Integer) contentreq.get("addressType");
						if (addressType_gt != null) {
							queryMapReturn.put("addressType_gt", addressType_gt);
						}
						if (addressType_ge != null) {
							queryMapReturn.put("addressType_ge", addressType_ge);
						}
						if (addressType_lt != null) {
							queryMapReturn.put("addressType_lt", addressType_lt);
						}
						if (addressType_le != null) {
							queryMapReturn.put("addressType_le", addressType_le);
						}
						if (addressType_in != null) {
							queryMapReturn.put("addressType_in", addressType_in);
						}
						if (addressType != null) {
							queryMapReturn.put("addressType", addressType);
						}
						Integer provinceId_gt = (Integer) contentreq.get("provinceId_gt");
						Integer provinceId_ge = (Integer) contentreq.get("provinceId_ge");
						Integer provinceId_lt = (Integer) contentreq.get("provinceId_lt");
						Integer provinceId_le = (Integer) contentreq.get("provinceId_le");
						String provinceId_in = (String) contentreq.get("provinceId_in");
						Integer provinceId = (Integer) contentreq.get("provinceId");
						if (provinceId_gt != null) {
							queryMapReturn.put("provinceId_gt", provinceId_gt);
						}
						if (provinceId_ge != null) {
							queryMapReturn.put("provinceId_ge", provinceId_ge);
						}
						if (provinceId_lt != null) {
							queryMapReturn.put("provinceId_lt", provinceId_lt);
						}
						if (provinceId_le != null) {
							queryMapReturn.put("provinceId_le", provinceId_le);
						}
						if (provinceId_in != null) {
							queryMapReturn.put("provinceId_in", provinceId_in);
						}
						if (provinceId != null) {
							queryMapReturn.put("provinceId", provinceId);
						}
						Integer cityId_gt = (Integer) contentreq.get("cityId_gt");
						Integer cityId_ge = (Integer) contentreq.get("cityId_ge");
						Integer cityId_lt = (Integer) contentreq.get("cityId_lt");
						Integer cityId_le = (Integer) contentreq.get("cityId_le");
						String cityId_in = (String) contentreq.get("cityId_in");
						Integer cityId = (Integer) contentreq.get("cityId");
						if (cityId_gt != null) {
							queryMapReturn.put("cityId_gt", cityId_gt);
						}
						if (cityId_ge != null) {
							queryMapReturn.put("cityId_ge", cityId_ge);
						}
						if (cityId_lt != null) {
							queryMapReturn.put("cityId_lt", cityId_lt);
						}
						if (cityId_le != null) {
							queryMapReturn.put("cityId_le", cityId_le);
						}
						if (cityId_in != null) {
							queryMapReturn.put("cityId_in", cityId_in);
						}
						if (cityId != null) {
							queryMapReturn.put("cityId", cityId);
						}
						Integer areaId_gt = (Integer) contentreq.get("areaId_gt");
						Integer areaId_ge = (Integer) contentreq.get("areaId_ge");
						Integer areaId_lt = (Integer) contentreq.get("areaId_lt");
						Integer areaId_le = (Integer) contentreq.get("areaId_le");
						String areaId_in = (String) contentreq.get("areaId_in");
						Integer areaId = (Integer) contentreq.get("areaId");
						if (areaId_gt != null) {
							queryMapReturn.put("areaId_gt", areaId_gt);
						}
						if (areaId_ge != null) {
							queryMapReturn.put("areaId_ge", areaId_ge);
						}
						if (areaId_lt != null) {
							queryMapReturn.put("areaId_lt", areaId_lt);
						}
						if (areaId_le != null) {
							queryMapReturn.put("areaId_le", areaId_le);
						}
						if (areaId_in != null) {
							queryMapReturn.put("areaId_in", areaId_in);
						}
						if (areaId != null) {
							queryMapReturn.put("areaId", areaId);
						}
						String address_like = (String) contentreq.get("address_like");
						String address_isNull = (String) contentreq.get("address_isNull");
						String address_isNotNull = (String) contentreq.get("address_isNotNull");
						String address_in = (String) contentreq.get("address_in");
						String address = (String) contentreq.get("address");
						if (address_like != null) {
							queryMapReturn.put("address_like", address_like);
						}
						if (address_isNull != null) {
							queryMapReturn.put("address_isNull", address_isNull);
						}
						if (address_isNotNull != null) {
							queryMapReturn.put("address_isNotNull", address_isNotNull);
						}
						if (address_in != null) {
							queryMapReturn.put("address_in", address_in);
						}
						if (address != null) {
							queryMapReturn.put("address", address);
						}
						String street_like = (String) contentreq.get("street_like");
						String street_isNull = (String) contentreq.get("street_isNull");
						String street_isNotNull = (String) contentreq.get("street_isNotNull");
						String street_in = (String) contentreq.get("street_in");
						String street = (String) contentreq.get("street");
						if (street_like != null) {
							queryMapReturn.put("street_like", street_like);
						}
						if (street_isNull != null) {
							queryMapReturn.put("street_isNull", street_isNull);
						}
						if (street_isNotNull != null) {
							queryMapReturn.put("street_isNotNull", street_isNotNull);
						}
						if (street_in != null) {
							queryMapReturn.put("street_in", street_in);
						}
						if (street != null) {
							queryMapReturn.put("street", street);
						}
						String committeeVillage_like = (String) contentreq.get("committeeVillage_like");
						String committeeVillage_isNull = (String) contentreq.get("committeeVillage_isNull");
						String committeeVillage_isNotNull = (String) contentreq.get("committeeVillage_isNotNull");
						String committeeVillage_in = (String) contentreq.get("committeeVillage_in");
						String committeeVillage = (String) contentreq.get("committeeVillage");
						if (committeeVillage_like != null) {
							queryMapReturn.put("committeeVillage_like", committeeVillage_like);
						}
						if (committeeVillage_isNull != null) {
							queryMapReturn.put("committeeVillage_isNull", committeeVillage_isNull);
						}
						if (committeeVillage_isNotNull != null) {
							queryMapReturn.put("committeeVillage_isNotNull", committeeVillage_isNotNull);
						}
						if (committeeVillage_in != null) {
							queryMapReturn.put("committeeVillage_in", committeeVillage_in);
						}
						if (committeeVillage != null) {
							queryMapReturn.put("committeeVillage", committeeVillage);
						}
						String road_like = (String) contentreq.get("road_like");
						String road_isNull = (String) contentreq.get("road_isNull");
						String road_isNotNull = (String) contentreq.get("road_isNotNull");
						String road_in = (String) contentreq.get("road_in");
						String road = (String) contentreq.get("road");
						if (road_like != null) {
							queryMapReturn.put("road_like", road_like);
						}
						if (road_isNull != null) {
							queryMapReturn.put("road_isNull", road_isNull);
						}
						if (road_isNotNull != null) {
							queryMapReturn.put("road_isNotNull", road_isNotNull);
						}
						if (road_in != null) {
							queryMapReturn.put("road_in", road_in);
						}
						if (road != null) {
							queryMapReturn.put("road", road);
						}
						String lane_like = (String) contentreq.get("lane_like");
						String lane_isNull = (String) contentreq.get("lane_isNull");
						String lane_isNotNull = (String) contentreq.get("lane_isNotNull");
						String lane_in = (String) contentreq.get("lane_in");
						String lane = (String) contentreq.get("lane");
						if (lane_like != null) {
							queryMapReturn.put("lane_like", lane_like);
						}
						if (lane_isNull != null) {
							queryMapReturn.put("lane_isNull", lane_isNull);
						}
						if (lane_isNotNull != null) {
							queryMapReturn.put("lane_isNotNull", lane_isNotNull);
						}
						if (lane_in != null) {
							queryMapReturn.put("lane_in", lane_in);
						}
						if (lane != null) {
							queryMapReturn.put("lane", lane);
						}
						String number_like = (String) contentreq.get("number_like");
						String number_isNull = (String) contentreq.get("number_isNull");
						String number_isNotNull = (String) contentreq.get("number_isNotNull");
						String number_in = (String) contentreq.get("number_in");
						String number = (String) contentreq.get("number");
						if (number_like != null) {
							queryMapReturn.put("number_like", number_like);
						}
						if (number_isNull != null) {
							queryMapReturn.put("number_isNull", number_isNull);
						}
						if (number_isNotNull != null) {
							queryMapReturn.put("number_isNotNull", number_isNotNull);
						}
						if (number_in != null) {
							queryMapReturn.put("number_in", number_in);
						}
						if (number != null) {
							queryMapReturn.put("number", number);
						}
						String room_like = (String) contentreq.get("room_like");
						String room_isNull = (String) contentreq.get("room_isNull");
						String room_isNotNull = (String) contentreq.get("room_isNotNull");
						String room_in = (String) contentreq.get("room_in");
						String room = (String) contentreq.get("room");
						if (room_like != null) {
							queryMapReturn.put("room_like", room_like);
						}
						if (room_isNull != null) {
							queryMapReturn.put("room_isNull", room_isNull);
						}
						if (room_isNotNull != null) {
							queryMapReturn.put("room_isNotNull", room_isNotNull);
						}
						if (room_in != null) {
							queryMapReturn.put("room_in", room_in);
						}
						if (room != null) {
							queryMapReturn.put("room", room);
						}
						String zipCode_like = (String) contentreq.get("zipCode_like");
						String zipCode_isNull = (String) contentreq.get("zipCode_isNull");
						String zipCode_isNotNull = (String) contentreq.get("zipCode_isNotNull");
						String zipCode_in = (String) contentreq.get("zipCode_in");
						String zipCode = (String) contentreq.get("zipCode");
						if (zipCode_like != null) {
							queryMapReturn.put("zipCode_like", zipCode_like);
						}
						if (zipCode_isNull != null) {
							queryMapReturn.put("zipCode_isNull", zipCode_isNull);
						}
						if (zipCode_isNotNull != null) {
							queryMapReturn.put("zipCode_isNotNull", zipCode_isNotNull);
						}
						if (zipCode_in != null) {
							queryMapReturn.put("zipCode_in", zipCode_in);
						}
						if (zipCode != null) {
							queryMapReturn.put("zipCode", zipCode);
						}

						String olderShow = (String) contentreq.get("olderShow");
						if ("true".equals(olderShow)) {
							olderShowReturn = true;
						}
					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp).intValue();
						}
						if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
						}
					}
					Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray) orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for (int i = 0; i < order.size(); i++) {
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String) obj.get("column"));
							orderVO.setOrderType((String) obj.get("type"));
							orderListReturn.add(orderVO);
						}
					}
				}
			} else if ("DEL_OLDER_ADDRESS_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
						String delOlder = (String) contentreq.get("delOlder");
						if ("true".equals(delOlder)) {
							delOlderReturn = true;
						}
					}
				}
			} else if ("DEL_OLDER_ADDRESS_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer olderId_gt = (Integer) contentreq.get("olderId_gt");
						Integer olderId_ge = (Integer) contentreq.get("olderId_ge");
						Integer olderId_lt = (Integer) contentreq.get("olderId_lt");
						Integer olderId_le = (Integer) contentreq.get("olderId_le");
						String olderId_in = (String) contentreq.get("olderId_in");
						Integer olderId = (Integer) contentreq.get("olderId");
						if (olderId_gt != null) {
							queryMapReturn.put("olderId_gt", olderId_gt);
						}
						if (olderId_ge != null) {
							queryMapReturn.put("olderId_ge", olderId_ge);
						}
						if (olderId_lt != null) {
							queryMapReturn.put("olderId_lt", olderId_lt);
						}
						if (olderId_le != null) {
							queryMapReturn.put("olderId_le", olderId_le);
						}
						if (olderId_in != null) {
							queryMapReturn.put("olderId_in", olderId_in);
						}
						if (olderId != null) {
							queryMapReturn.put("olderId", olderId);
						}
						Integer addressType_gt = (Integer) contentreq.get("addressType_gt");
						Integer addressType_ge = (Integer) contentreq.get("addressType_ge");
						Integer addressType_lt = (Integer) contentreq.get("addressType_lt");
						Integer addressType_le = (Integer) contentreq.get("addressType_le");
						String addressType_in = (String) contentreq.get("addressType_in");
						Integer addressType = (Integer) contentreq.get("addressType");
						if (addressType_gt != null) {
							queryMapReturn.put("addressType_gt", addressType_gt);
						}
						if (addressType_ge != null) {
							queryMapReturn.put("addressType_ge", addressType_ge);
						}
						if (addressType_lt != null) {
							queryMapReturn.put("addressType_lt", addressType_lt);
						}
						if (addressType_le != null) {
							queryMapReturn.put("addressType_le", addressType_le);
						}
						if (addressType_in != null) {
							queryMapReturn.put("addressType_in", addressType_in);
						}
						if (addressType != null) {
							queryMapReturn.put("addressType", addressType);
						}
						Integer provinceId_gt = (Integer) contentreq.get("provinceId_gt");
						Integer provinceId_ge = (Integer) contentreq.get("provinceId_ge");
						Integer provinceId_lt = (Integer) contentreq.get("provinceId_lt");
						Integer provinceId_le = (Integer) contentreq.get("provinceId_le");
						String provinceId_in = (String) contentreq.get("provinceId_in");
						Integer provinceId = (Integer) contentreq.get("provinceId");
						if (provinceId_gt != null) {
							queryMapReturn.put("provinceId_gt", provinceId_gt);
						}
						if (provinceId_ge != null) {
							queryMapReturn.put("provinceId_ge", provinceId_ge);
						}
						if (provinceId_lt != null) {
							queryMapReturn.put("provinceId_lt", provinceId_lt);
						}
						if (provinceId_le != null) {
							queryMapReturn.put("provinceId_le", provinceId_le);
						}
						if (provinceId_in != null) {
							queryMapReturn.put("provinceId_in", provinceId_in);
						}
						if (provinceId != null) {
							queryMapReturn.put("provinceId", provinceId);
						}
						Integer cityId_gt = (Integer) contentreq.get("cityId_gt");
						Integer cityId_ge = (Integer) contentreq.get("cityId_ge");
						Integer cityId_lt = (Integer) contentreq.get("cityId_lt");
						Integer cityId_le = (Integer) contentreq.get("cityId_le");
						String cityId_in = (String) contentreq.get("cityId_in");
						Integer cityId = (Integer) contentreq.get("cityId");
						if (cityId_gt != null) {
							queryMapReturn.put("cityId_gt", cityId_gt);
						}
						if (cityId_ge != null) {
							queryMapReturn.put("cityId_ge", cityId_ge);
						}
						if (cityId_lt != null) {
							queryMapReturn.put("cityId_lt", cityId_lt);
						}
						if (cityId_le != null) {
							queryMapReturn.put("cityId_le", cityId_le);
						}
						if (cityId_in != null) {
							queryMapReturn.put("cityId_in", cityId_in);
						}
						if (cityId != null) {
							queryMapReturn.put("cityId", cityId);
						}
						Integer areaId_gt = (Integer) contentreq.get("areaId_gt");
						Integer areaId_ge = (Integer) contentreq.get("areaId_ge");
						Integer areaId_lt = (Integer) contentreq.get("areaId_lt");
						Integer areaId_le = (Integer) contentreq.get("areaId_le");
						String areaId_in = (String) contentreq.get("areaId_in");
						Integer areaId = (Integer) contentreq.get("areaId");
						if (areaId_gt != null) {
							queryMapReturn.put("areaId_gt", areaId_gt);
						}
						if (areaId_ge != null) {
							queryMapReturn.put("areaId_ge", areaId_ge);
						}
						if (areaId_lt != null) {
							queryMapReturn.put("areaId_lt", areaId_lt);
						}
						if (areaId_le != null) {
							queryMapReturn.put("areaId_le", areaId_le);
						}
						if (areaId_in != null) {
							queryMapReturn.put("areaId_in", areaId_in);
						}
						if (areaId != null) {
							queryMapReturn.put("areaId", areaId);
						}
						String address_like = (String) contentreq.get("address_like");
						String address_isNull = (String) contentreq.get("address_isNull");
						String address_isNotNull = (String) contentreq.get("address_isNotNull");
						String address_in = (String) contentreq.get("address_in");
						String address = (String) contentreq.get("address");
						if (address_like != null) {
							queryMapReturn.put("address_like", address_like);
						}
						if (address_isNull != null) {
							queryMapReturn.put("address_isNull", address_isNull);
						}
						if (address_isNotNull != null) {
							queryMapReturn.put("address_isNotNull", address_isNotNull);
						}
						if (address_in != null) {
							queryMapReturn.put("address_in", address_in);
						}
						if (address != null) {
							queryMapReturn.put("address", address);
						}
						String street_like = (String) contentreq.get("street_like");
						String street_isNull = (String) contentreq.get("street_isNull");
						String street_isNotNull = (String) contentreq.get("street_isNotNull");
						String street_in = (String) contentreq.get("street_in");
						String street = (String) contentreq.get("street");
						if (street_like != null) {
							queryMapReturn.put("street_like", street_like);
						}
						if (street_isNull != null) {
							queryMapReturn.put("street_isNull", street_isNull);
						}
						if (street_isNotNull != null) {
							queryMapReturn.put("street_isNotNull", street_isNotNull);
						}
						if (street_in != null) {
							queryMapReturn.put("street_in", street_in);
						}
						if (street != null) {
							queryMapReturn.put("street", street);
						}
						String committeeVillage_like = (String) contentreq.get("committeeVillage_like");
						String committeeVillage_isNull = (String) contentreq.get("committeeVillage_isNull");
						String committeeVillage_isNotNull = (String) contentreq.get("committeeVillage_isNotNull");
						String committeeVillage_in = (String) contentreq.get("committeeVillage_in");
						String committeeVillage = (String) contentreq.get("committeeVillage");
						if (committeeVillage_like != null) {
							queryMapReturn.put("committeeVillage_like", committeeVillage_like);
						}
						if (committeeVillage_isNull != null) {
							queryMapReturn.put("committeeVillage_isNull", committeeVillage_isNull);
						}
						if (committeeVillage_isNotNull != null) {
							queryMapReturn.put("committeeVillage_isNotNull", committeeVillage_isNotNull);
						}
						if (committeeVillage_in != null) {
							queryMapReturn.put("committeeVillage_in", committeeVillage_in);
						}
						if (committeeVillage != null) {
							queryMapReturn.put("committeeVillage", committeeVillage);
						}
						String road_like = (String) contentreq.get("road_like");
						String road_isNull = (String) contentreq.get("road_isNull");
						String road_isNotNull = (String) contentreq.get("road_isNotNull");
						String road_in = (String) contentreq.get("road_in");
						String road = (String) contentreq.get("road");
						if (road_like != null) {
							queryMapReturn.put("road_like", road_like);
						}
						if (road_isNull != null) {
							queryMapReturn.put("road_isNull", road_isNull);
						}
						if (road_isNotNull != null) {
							queryMapReturn.put("road_isNotNull", road_isNotNull);
						}
						if (road_in != null) {
							queryMapReturn.put("road_in", road_in);
						}
						if (road != null) {
							queryMapReturn.put("road", road);
						}
						String lane_like = (String) contentreq.get("lane_like");
						String lane_isNull = (String) contentreq.get("lane_isNull");
						String lane_isNotNull = (String) contentreq.get("lane_isNotNull");
						String lane_in = (String) contentreq.get("lane_in");
						String lane = (String) contentreq.get("lane");
						if (lane_like != null) {
							queryMapReturn.put("lane_like", lane_like);
						}
						if (lane_isNull != null) {
							queryMapReturn.put("lane_isNull", lane_isNull);
						}
						if (lane_isNotNull != null) {
							queryMapReturn.put("lane_isNotNull", lane_isNotNull);
						}
						if (lane_in != null) {
							queryMapReturn.put("lane_in", lane_in);
						}
						if (lane != null) {
							queryMapReturn.put("lane", lane);
						}
						String number_like = (String) contentreq.get("number_like");
						String number_isNull = (String) contentreq.get("number_isNull");
						String number_isNotNull = (String) contentreq.get("number_isNotNull");
						String number_in = (String) contentreq.get("number_in");
						String number = (String) contentreq.get("number");
						if (number_like != null) {
							queryMapReturn.put("number_like", number_like);
						}
						if (number_isNull != null) {
							queryMapReturn.put("number_isNull", number_isNull);
						}
						if (number_isNotNull != null) {
							queryMapReturn.put("number_isNotNull", number_isNotNull);
						}
						if (number_in != null) {
							queryMapReturn.put("number_in", number_in);
						}
						if (number != null) {
							queryMapReturn.put("number", number);
						}
						String room_like = (String) contentreq.get("room_like");
						String room_isNull = (String) contentreq.get("room_isNull");
						String room_isNotNull = (String) contentreq.get("room_isNotNull");
						String room_in = (String) contentreq.get("room_in");
						String room = (String) contentreq.get("room");
						if (room_like != null) {
							queryMapReturn.put("room_like", room_like);
						}
						if (room_isNull != null) {
							queryMapReturn.put("room_isNull", room_isNull);
						}
						if (room_isNotNull != null) {
							queryMapReturn.put("room_isNotNull", room_isNotNull);
						}
						if (room_in != null) {
							queryMapReturn.put("room_in", room_in);
						}
						if (room != null) {
							queryMapReturn.put("room", room);
						}
						String zipCode_like = (String) contentreq.get("zipCode_like");
						String zipCode_isNull = (String) contentreq.get("zipCode_isNull");
						String zipCode_isNotNull = (String) contentreq.get("zipCode_isNotNull");
						String zipCode_in = (String) contentreq.get("zipCode_in");
						String zipCode = (String) contentreq.get("zipCode");
						if (zipCode_like != null) {
							queryMapReturn.put("zipCode_like", zipCode_like);
						}
						if (zipCode_isNull != null) {
							queryMapReturn.put("zipCode_isNull", zipCode_isNull);
						}
						if (zipCode_isNotNull != null) {
							queryMapReturn.put("zipCode_isNotNull", zipCode_isNotNull);
						}
						if (zipCode_in != null) {
							queryMapReturn.put("zipCode_in", zipCode_in);
						}
						if (zipCode != null) {
							queryMapReturn.put("zipCode", zipCode);
						}

						String delOlder = (String) contentreq.get("delOlder");
						if ("true".equals(delOlder)) {
							delOlderReturn = true;
						}
					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp).intValue();
						}
						if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
						}
					}
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (olderAddressReturn != null) {
				parseMap.put("olderAddress", olderAddressReturn);
			}
			if (olderAddressListReturn != null && olderAddressListReturn.size() > 0) {
				parseMap.put("olderAddressList", olderAddressListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}

			if (olderShowReturn != null) {
				parseMap.put("olderShow", olderShowReturn);
			}
			if (delOlderReturn != null) {
				parseMap.put("delOlder", delOlderReturn);
			}

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command, String reqStr, HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
