package fsk.parse.serviceTaskPhysiologicalParametersHistory;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.serviceTaskPhysiologicalParametersHistory.ServiceTaskPhysiologicalParametersHistoryEntity;



import fsk.entity.serviceTask.ServiceTaskEntity;
import fsk.entity.physiologicalParametersHistory.PhysiologicalParametersHistoryEntity;

import com.framework.system.util.JsonUtil;
import com.framework.system.db.query.OrderVO;
 /**   
 * @Title: Parse
 * @Description: 服务工单生理参数历史关联表解析器
 * @author feng.gu
 * @date 2016-07-27 15:36:06
 * @version V1.0   
 *
 */
public class ServiceTaskPhysiologicalParametersHistoryParse {
	private static Logger logger = Logger.getLogger(ServiceTaskPhysiologicalParametersHistoryParse.class);
	private static ServiceTaskPhysiologicalParametersHistoryParse serviceTaskPhysiologicalParametersHistoryParse;

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static ServiceTaskPhysiologicalParametersHistoryParse getInstance() {
		if (serviceTaskPhysiologicalParametersHistoryParse == null) {
			serviceTaskPhysiologicalParametersHistoryParse = new ServiceTaskPhysiologicalParametersHistoryParse();
		}
		return serviceTaskPhysiologicalParametersHistoryParse;
	}

	public Map<String, Object> parse(int type, String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command,reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command,reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			ServiceTaskPhysiologicalParametersHistoryEntity serviceTaskPhysiologicalParametersHistoryReturn = null;
			List<ServiceTaskPhysiologicalParametersHistoryEntity> serviceTaskPhysiologicalParametersHistoryListReturn = null;
			Integer idReturn = null;			
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;
			
															Boolean serviceTaskShowReturn = false;
			Boolean delServiceTaskReturn = false;
																								Boolean physiologicalParametersHistoryShowReturn = false;
			Boolean delPhysiologicalParametersHistoryReturn = false;
															
			//json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject)reqParams.get("content");
			if ("ADD_SERVICE_TASK_PHYSIOLOGICAL_PARAMETERS_HISTORY_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				serviceTaskPhysiologicalParametersHistoryReturn = new ServiceTaskPhysiologicalParametersHistoryEntity();
				if(true){
					if(contentreq!=null){
												    						    Integer id = (Integer)contentreq.get("id");
	                		if(id!=null){
			                	serviceTaskPhysiologicalParametersHistoryReturn.setId(id);
			                }
						    												    						    Integer physiologicalParametersHistoryId = (Integer)contentreq.get("physiologicalParametersHistoryId");
	                		if(physiologicalParametersHistoryId!=null){
			                	serviceTaskPhysiologicalParametersHistoryReturn.setPhysiologicalParametersHistoryId(physiologicalParametersHistoryId);
			                }
						    												    						    Integer serviceTaskId = (Integer)contentreq.get("serviceTaskId");
	                		if(serviceTaskId!=null){
			                	serviceTaskPhysiologicalParametersHistoryReturn.setServiceTaskId(serviceTaskId);
			                }
						    											}					
				}
																				if(true){
					Object serviceTask = contentreq.get("serviceTask");
					if(serviceTask!=null){
						JSONObject obj = (JSONObject)serviceTask;
						if(obj!=null){
							ServiceTaskEntity entity = new ServiceTaskEntity();						
																						    Integer id = (Integer)obj.get("id");
		                		if(id!=null){
				                	entity.setId(id);
				                }
							    																						    String serviceCode = (String)obj.get("serviceCode");
		                		if(serviceCode!=null){
				                	entity.setServiceCode(serviceCode);
				                }
							    																						    Integer olderId = (Integer)obj.get("olderId");
		                		if(olderId!=null){
				                	entity.setOlderId(olderId);
				                }
							    																						    String olderMemberNum = (String)obj.get("olderMemberNum");
		                		if(olderMemberNum!=null){
				                	entity.setOlderMemberNum(olderMemberNum);
				                }
							    																						    String olderName = (String)obj.get("olderName");
		                		if(olderName!=null){
				                	entity.setOlderName(olderName);
				                }
							    																						    String olderBirthdate = (String)obj.get("olderBirthdate");
		                		if(olderBirthdate!=null){
				                	entity.setOlderBirthdate(olderBirthdate);
				                }
							    																						    Integer serviceAreaId = (Integer)obj.get("serviceAreaId");
		                		if(serviceAreaId!=null){
				                	entity.setServiceAreaId(serviceAreaId);
				                }
							    																						    Integer serviceStreetId = (Integer)obj.get("serviceStreetId");
		                		if(serviceStreetId!=null){
				                	entity.setServiceStreetId(serviceStreetId);
				                }
							    																						    String contactName = (String)obj.get("contactName");
		                		if(contactName!=null){
				                	entity.setContactName(contactName);
				                }
							    																						    String contactTel = (String)obj.get("contactTel");
		                		if(contactTel!=null){
				                	entity.setContactTel(contactTel);
				                }
							    																						    String address = (String)obj.get("address");
		                		if(address!=null){
				                	entity.setAddress(address);
				                }
							    																						     							     Double addressLong = JsonUtil.getJSONDouble(obj, "addressLong");
								 if (addressLong != null) {
									entity.setAddressLong(BigDecimal.valueOf(addressLong));
								 }
							     							     							    																						     							     Double addressLat = JsonUtil.getJSONDouble(obj, "addressLat");
								 if (addressLat != null) {
									entity.setAddressLat(BigDecimal.valueOf(addressLat));
								 }
							     							     							    																						    String serviceExpectTime = (String)obj.get("serviceExpectTime");
		                		if(serviceExpectTime!=null){
				                	entity.setServiceExpectTime(serviceExpectTime);
				                }
							    																						    String serviceStartTime = (String)obj.get("serviceStartTime");
		                		if(serviceStartTime!=null){
				                	entity.setServiceStartTime(serviceStartTime);
				                }
							    																						    String serviceEndTime = (String)obj.get("serviceEndTime");
		                		if(serviceEndTime!=null){
				                	entity.setServiceEndTime(serviceEndTime);
				                }
							    																						    Integer serviceTimeCount = (Integer)obj.get("serviceTimeCount");
		                		if(serviceTimeCount!=null){
				                	entity.setServiceTimeCount(serviceTimeCount);
				                }
							    																						    Integer serviceTimeStatus = (Integer)obj.get("serviceTimeStatus");
		                		if(serviceTimeStatus!=null){
				                	entity.setServiceTimeStatus(serviceTimeStatus);
				                }
							    																						    String siteName = (String)obj.get("siteName");
		                		if(siteName!=null){
				                	entity.setSiteName(siteName);
				                }
							    																						    String nursingRecord = (String)obj.get("nursingRecord");
		                		if(nursingRecord!=null){
				                	entity.setNursingRecord(nursingRecord);
				                }
							    																						    String customerInformed = (String)obj.get("customerInformed");
		                		if(customerInformed!=null){
				                	entity.setCustomerInformed(customerInformed);
				                }
							    																						    Integer qualityEvaluation = (Integer)obj.get("qualityEvaluation");
		                		if(qualityEvaluation!=null){
				                	entity.setQualityEvaluation(qualityEvaluation);
				                }
							    																						    Integer attitudeEvaluation = (Integer)obj.get("attitudeEvaluation");
		                		if(attitudeEvaluation!=null){
				                	entity.setAttitudeEvaluation(attitudeEvaluation);
				                }
							    																						    Integer courseNumber = (Integer)obj.get("courseNumber");
		                		if(courseNumber!=null){
				                	entity.setCourseNumber(courseNumber);
				                }
							    																						    Integer serviceNumber = (Integer)obj.get("serviceNumber");
		                		if(serviceNumber!=null){
				                	entity.setServiceNumber(serviceNumber);
				                }
							    																						     							     Double price = JsonUtil.getJSONDouble(obj, "price");
								 if (price != null) {
									entity.setPrice(BigDecimal.valueOf(price));
								 }
							     							     							    																						    String source = (String)obj.get("source");
		                		if(source!=null){
				                	entity.setSource(source);
				                }
							    																						    Integer healthInsurance = (Integer)obj.get("healthInsurance");
		                		if(healthInsurance!=null){
				                	entity.setHealthInsurance(healthInsurance);
				                }
							    																						    Integer status = (Integer)obj.get("status");
		                		if(status!=null){
				                	entity.setStatus(status);
				                }
							    																						    String des = (String)obj.get("des");
		                		if(des!=null){
				                	entity.setDes(des);
				                }
							    																						    String addPerson = (String)obj.get("addPerson");
		                		if(addPerson!=null){
				                	entity.setAddPerson(addPerson);
				                }
							    																						    String addTime = (String)obj.get("addTime");
		                		if(addTime!=null){
				                	entity.setAddTime(addTime);
				                }
							    																						    String visitPerson = (String)obj.get("visitPerson");
		                		if(visitPerson!=null){
				                	entity.setVisitPerson(visitPerson);
				                }
							    																						    String visitTime = (String)obj.get("visitTime");
		                		if(visitTime!=null){
				                	entity.setVisitTime(visitTime);
				                }
							    																						     							     Double satisfactionEvaluation = JsonUtil.getJSONDouble(obj, "satisfactionEvaluation");
								 if (satisfactionEvaluation != null) {
									entity.setSatisfactionEvaluation(BigDecimal.valueOf(satisfactionEvaluation));
								 }
							     							     							    																						    String visitRecord = (String)obj.get("visitRecord");
		                		if(visitRecord!=null){
				                	entity.setVisitRecord(visitRecord);
				                }
							    														serviceTaskPhysiologicalParametersHistoryReturn.setServiceTask(entity);
						}						
					}
				}
																																if(true){
					Object physiologicalParametersHistory = contentreq.get("physiologicalParametersHistory");
					if(physiologicalParametersHistory!=null){
						JSONObject obj = (JSONObject)physiologicalParametersHistory;
						if(obj!=null){
							PhysiologicalParametersHistoryEntity entity = new PhysiologicalParametersHistoryEntity();						
																						    Integer id = (Integer)obj.get("id");
		                		if(id!=null){
				                	entity.setId(id);
				                }
							    																						    Integer olderId = (Integer)obj.get("olderId");
		                		if(olderId!=null){
				                	entity.setOlderId(olderId);
				                }
							    																						    Integer type = (Integer)obj.get("type");
		                		if(type!=null){
				                	entity.setType(type);
				                }
							    																						     							     Double value = JsonUtil.getJSONDouble(obj, "value");
								 if (value != null) {
									entity.setValue(BigDecimal.valueOf(value));
								 }
							     							     							    																						    String unit = (String)obj.get("unit");
		                		if(unit!=null){
				                	entity.setUnit(unit);
				                }
							    																						    Integer status = (Integer)obj.get("status");
		                		if(status!=null){
				                	entity.setStatus(status);
				                }
							    																						    String measurePerson = (String)obj.get("measurePerson");
		                		if(measurePerson!=null){
				                	entity.setMeasurePerson(measurePerson);
				                }
							    																						    String createTime = (String)obj.get("createTime");
		                		if(createTime!=null){
				                	entity.setCreateTime(createTime);
				                }
							    																						     							     Double value2 = JsonUtil.getJSONDouble(obj, "value2");
								 if (value2 != null) {
									entity.setValue2(BigDecimal.valueOf(value2));
								 }
							     							     							    																						    Integer status2 = (Integer)obj.get("status2");
		                		if(status2!=null){
				                	entity.setStatus2(status2);
				                }
							    														serviceTaskPhysiologicalParametersHistoryReturn.setPhysiologicalParametersHistory(entity);
						}						
					}
				}
																			} else if ("QUERY_SERVICE_TASK_PHYSIOLOGICAL_PARAMETERS_HISTORY_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");
					        																												String serviceTaskShow = (String)contentreq.get("serviceTaskShow");
							if("true".equals(serviceTaskShow)){
								serviceTaskShowReturn = true;
							}
																																																								String physiologicalParametersHistoryShow = (String)contentreq.get("physiologicalParametersHistoryShow");
							if("true".equals(physiologicalParametersHistoryShow)){
								physiologicalParametersHistoryShowReturn = true;
							}
																																	}	
				}
			} else if ("QUERY_SERVICE_TASK_PHYSIOLOGICAL_PARAMETERS_HISTORY_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																								Integer physiologicalParametersHistoryId_gt = (Integer)contentreq.get("physiologicalParametersHistoryId_gt");
						Integer physiologicalParametersHistoryId_ge = (Integer)contentreq.get("physiologicalParametersHistoryId_ge");
						Integer physiologicalParametersHistoryId_lt = (Integer)contentreq.get("physiologicalParametersHistoryId_lt");
						Integer physiologicalParametersHistoryId_le = (Integer)contentreq.get("physiologicalParametersHistoryId_le");
						String physiologicalParametersHistoryId_in = (String)contentreq.get("physiologicalParametersHistoryId_in");
						Integer physiologicalParametersHistoryId = (Integer)contentreq.get("physiologicalParametersHistoryId");
                        if(physiologicalParametersHistoryId_gt!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_gt", physiologicalParametersHistoryId_gt);
						}
						if(physiologicalParametersHistoryId_ge!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_ge", physiologicalParametersHistoryId_ge);
						}
						if(physiologicalParametersHistoryId_lt!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_lt", physiologicalParametersHistoryId_lt);
						}
						if(physiologicalParametersHistoryId_le!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_le", physiologicalParametersHistoryId_le);
						}
						if(physiologicalParametersHistoryId_in!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_in", physiologicalParametersHistoryId_in);
						}
						if(physiologicalParametersHistoryId!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId", physiologicalParametersHistoryId);
						}		
																								Integer serviceTaskId_gt = (Integer)contentreq.get("serviceTaskId_gt");
						Integer serviceTaskId_ge = (Integer)contentreq.get("serviceTaskId_ge");
						Integer serviceTaskId_lt = (Integer)contentreq.get("serviceTaskId_lt");
						Integer serviceTaskId_le = (Integer)contentreq.get("serviceTaskId_le");
						String serviceTaskId_in = (String)contentreq.get("serviceTaskId_in");
						Integer serviceTaskId = (Integer)contentreq.get("serviceTaskId");
                        if(serviceTaskId_gt!=null){
                        	queryMapReturn.put("serviceTaskId_gt", serviceTaskId_gt);
						}
						if(serviceTaskId_ge!=null){
                        	queryMapReturn.put("serviceTaskId_ge", serviceTaskId_ge);
						}
						if(serviceTaskId_lt!=null){
                        	queryMapReturn.put("serviceTaskId_lt", serviceTaskId_lt);
						}
						if(serviceTaskId_le!=null){
                        	queryMapReturn.put("serviceTaskId_le", serviceTaskId_le);
						}
						if(serviceTaskId_in!=null){
                        	queryMapReturn.put("serviceTaskId_in", serviceTaskId_in);
						}
						if(serviceTaskId!=null){
                        	queryMapReturn.put("serviceTaskId", serviceTaskId);
						}		
															
						    																																																	
																																			String serviceTaskShow = (String)contentreq.get("serviceTaskShow");
							if("true".equals(serviceTaskShow)){
								serviceTaskShowReturn = true;
							}
																																																								String physiologicalParametersHistoryShow = (String)contentreq.get("physiologicalParametersHistoryShow");
							if("true".equals(physiologicalParametersHistoryShow)){
								physiologicalParametersHistoryShowReturn = true;
							}
																																	}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				    Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray)orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for(int i=0;i<order.size();i++){
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String)obj.get("column"));
							orderVO.setOrderType((String)obj.get("type"));
							orderListReturn.add(orderVO);
						}						
					}
				}
			} else if ("DEL_SERVICE_TASK_PHYSIOLOGICAL_PARAMETERS_HISTORY_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");	
						    																												String delServiceTask = (String)contentreq.get("delServiceTask");
							if("true".equals(delServiceTask)){
								delServiceTaskReturn = true;
							}
																																																								String delPhysiologicalParametersHistory = (String)contentreq.get("delPhysiologicalParametersHistory");
							if("true".equals(delPhysiologicalParametersHistory)){
								delPhysiologicalParametersHistoryReturn = true;
							}
																																	}	
				}
			} else if ("DEL_SERVICE_TASK_PHYSIOLOGICAL_PARAMETERS_HISTORY_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																								Integer physiologicalParametersHistoryId_gt = (Integer)contentreq.get("physiologicalParametersHistoryId_gt");
						Integer physiologicalParametersHistoryId_ge = (Integer)contentreq.get("physiologicalParametersHistoryId_ge");
						Integer physiologicalParametersHistoryId_lt = (Integer)contentreq.get("physiologicalParametersHistoryId_lt");
						Integer physiologicalParametersHistoryId_le = (Integer)contentreq.get("physiologicalParametersHistoryId_le");
						String physiologicalParametersHistoryId_in = (String)contentreq.get("physiologicalParametersHistoryId_in");
						Integer physiologicalParametersHistoryId = (Integer)contentreq.get("physiologicalParametersHistoryId");
                        if(physiologicalParametersHistoryId_gt!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_gt", physiologicalParametersHistoryId_gt);
						}
						if(physiologicalParametersHistoryId_ge!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_ge", physiologicalParametersHistoryId_ge);
						}
						if(physiologicalParametersHistoryId_lt!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_lt", physiologicalParametersHistoryId_lt);
						}
						if(physiologicalParametersHistoryId_le!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_le", physiologicalParametersHistoryId_le);
						}
						if(physiologicalParametersHistoryId_in!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId_in", physiologicalParametersHistoryId_in);
						}
						if(physiologicalParametersHistoryId!=null){
                        	queryMapReturn.put("physiologicalParametersHistoryId", physiologicalParametersHistoryId);
						}		
																								Integer serviceTaskId_gt = (Integer)contentreq.get("serviceTaskId_gt");
						Integer serviceTaskId_ge = (Integer)contentreq.get("serviceTaskId_ge");
						Integer serviceTaskId_lt = (Integer)contentreq.get("serviceTaskId_lt");
						Integer serviceTaskId_le = (Integer)contentreq.get("serviceTaskId_le");
						String serviceTaskId_in = (String)contentreq.get("serviceTaskId_in");
						Integer serviceTaskId = (Integer)contentreq.get("serviceTaskId");
                        if(serviceTaskId_gt!=null){
                        	queryMapReturn.put("serviceTaskId_gt", serviceTaskId_gt);
						}
						if(serviceTaskId_ge!=null){
                        	queryMapReturn.put("serviceTaskId_ge", serviceTaskId_ge);
						}
						if(serviceTaskId_lt!=null){
                        	queryMapReturn.put("serviceTaskId_lt", serviceTaskId_lt);
						}
						if(serviceTaskId_le!=null){
                        	queryMapReturn.put("serviceTaskId_le", serviceTaskId_le);
						}
						if(serviceTaskId_in!=null){
                        	queryMapReturn.put("serviceTaskId_in", serviceTaskId_in);
						}
						if(serviceTaskId!=null){
                        	queryMapReturn.put("serviceTaskId", serviceTaskId);
						}		
																		
																														String delServiceTask = (String)contentreq.get("delServiceTask");
						if("true".equals(delServiceTask)){
							delServiceTaskReturn = true;
						}
																																																String delPhysiologicalParametersHistory = (String)contentreq.get("delPhysiologicalParametersHistory");
						if("true".equals(delPhysiologicalParametersHistory)){
							delPhysiologicalParametersHistoryReturn = true;
						}
																													}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (serviceTaskPhysiologicalParametersHistoryReturn != null) {
				parseMap.put("serviceTaskPhysiologicalParametersHistory", serviceTaskPhysiologicalParametersHistoryReturn);
			}
			if (serviceTaskPhysiologicalParametersHistoryListReturn != null && serviceTaskPhysiologicalParametersHistoryListReturn.size() > 0) {
				parseMap.put("serviceTaskPhysiologicalParametersHistoryList", serviceTaskPhysiologicalParametersHistoryListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}	
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}		
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}
			
			
															if (serviceTaskShowReturn != null) {
				parseMap.put("serviceTaskShow", serviceTaskShowReturn);
			}
			if (delServiceTaskReturn != null) {
				parseMap.put("delServiceTask", delServiceTaskReturn);
			}
																								if (physiologicalParametersHistoryShowReturn != null) {
				parseMap.put("physiologicalParametersHistoryShow", physiologicalParametersHistoryShowReturn);
			}
			if (delPhysiologicalParametersHistoryReturn != null) {
				parseMap.put("delPhysiologicalParametersHistory", delPhysiologicalParametersHistoryReturn);
			}
															
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command,String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
