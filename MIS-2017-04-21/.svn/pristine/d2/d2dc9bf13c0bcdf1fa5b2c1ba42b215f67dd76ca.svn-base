<%@ page contentType="text/html;charset=UTF-8" language="java"%> 
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%
	String olderId = request.getParameter("olderId");
%>
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="shortcut icon" href="images/favicon.png">
    <title>心电心率-实时</title>
    <!-- Bootstrap core CSS -->
    <link href="js/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <link rel="stylesheet" href="fonts/font-awesome-4/css/font-awesome.min.css">
    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
      <script src="js/html5shiv.js"></script>
    <![endif]-->
    <!-- Custom styles for this template -->
    <link href="css/style.css" rel="stylesheet" />
<style>
.content{background:#eee;}
</style>
  </head>
  <body>
	<div id="cl-wrapper" class="fixed-menu" style="padding-top:0">
		<!-- 页面主体 -->
		<div class="container-fluid" id="pcont">

			<div class="cl-mcont">

				<div class="row" id="ecgs">
					<div class="col-xs-12 col-sm-12   ">
						<div class="block">
							<div class="header no-border">
								<h4>心电实时</h4>
							</div>
							<div class="content ">
								<div id="ecgwave" style="height:250px;"></div>
							</div>
						</div>
					</div>
					<div class="col-xs-12 col-sm-12   ">
						<div class="block">
							<div class="header no-border">
								<h4>心率实时</h4>
							</div>
							<div class="content ">
								<div id="container" style="height:250px;"></div>
							</div>
						</div>
					</div>


				</div>
			</div>
		</div>
	</div>
	<script src="js/jquery.js"></script>
    <script type="text/javascript" src="js/behaviour/general.js"></script>
    <script type="text/javascript" src="js/highcharts.js"></script>
   	<script type="text/javascript" src="js/ecgdata.flot.js"></script>
    <script type="text/javascript">
	$(document).ready(function(){
		getNextTime();
		Highcharts.theme = { //折线图主题设置
				global: {
	                useUTC: false
	            },
				colors: ["#000000", "#f7a35c", "#90ee7e", "#7798BF", "#aaeeee", "#ff0066", "#eeaaee"],
				chart: {
					backgroundColor: null,
					zoomType: 'x'
				},
				lang: {
			        resetZoom: '重置',
			        resetZoomTitle:"重置缩放比例"
				},
				title: {
					text: '',            
				},
				tooltip: {
					borderWidth: 0,
					backgroundColor: 'rgba(219,219,216,0.8)',
					shadow: false
				},

				xAxis: {
					gridLineWidth: 1,
					labels: {
						enabled: false
					}
				},
				yAxis: {
					minorTickInterval: 'auto',
					labels: {
						enabled: false
					},
					title: {
		                text: ' '
		            }
				},
				credits:{
					enabled:false // 禁用版权信息
				},
				legend:{
					enabled: false
				},
				plotOptions: {
					candlestick: {
						lineColor: '#404048'
					}
				},
				// General
				background2: '#F0F0EA'			
			};
			// Apply the theme
			Highcharts.setOptions(Highcharts.theme);
			//getStartAndEndTime();
			
			
			
	});
	function getNextTime(){
		 var tempArr = new Array(500);
  		 for (var i = 0; i < tempArr.length; i++){
  			 tempArr[i]=0;
  		}
		var reqmsg="{\"action\":\"QUERY_PHYSIOLOGICAL_PARAMETERS_HISTORY_LIST_REQUEST\",\"content\":{";
 		reqmsg += "\"olderId\":" + olderId + ",";
 		reqmsg += "\"type\":16,";
 		reqmsg += "\"value\":0}}";
 		$.ajax({  
            type: "POST",  
            url: "physiologicalParametersHistory.do?handler",  
            async: true, //表示同步，如果要得到ajax处理完后台数据后的返回值，最好这样设置 
            dataType : "json",
	        data: {
	        	"reqmsg":reqmsg
	        },
            success: function(data){
            	if(data.content != null){
            		nextTime = data.content.physiologicalParametersHistoryList[0].value2;
            		 $.ajax({  
                         type: "POST",  
                         url: "ecgStick.do?getecg",  
                         async: true, //表示同步，如果要得到ajax处理完后台数据后的返回值，最好这样设置 
                         dataType : "json",
             	        data: {
             	             "olderId":olderId,
             	             "nextTime":nextTime
             	        },
                         success: function(data){
                      	   nextTime = data.nextTime;
                      	
                  		   ecgdata = ecgdata.concat(tempArr);
                      	   if(data.ecgdata != null && data.ecgdata != ""){
                      		   var datas = JSON.stringify(data.ecgdata);//获取到的对象转为字符串
                        	   var datas1 =datas.substring(1,datas.length-1).split(",");
                        	   ecgdata = ecgdata.concat(datas1);  
                      	   }/*else{
                    		 var tempArr = new Array(9000);
                    		 for (var i = 0; i < tempArr.length; i++){
                    			 tempArr[i]=0;
                    		}
                    		 ecgdata = ecgdata.concat(tempArr); 
                      	   }*/
                      	  //作最新6s的心电图    
                      	  
                      	   //newEcg = newEcg.concat(datas1);               
                         }  
                     });
            		 //setTimeout(newChart,1500);
            		 //setTimeout(getxinlv,1500);
            		newChart();
        			getxinlv();
        			//chart();
            	}else{
            		alert("当前暂时无人测量");
            	}
            }  
        });
	}
	
	var roleIds = "<%=request.getSession().getAttribute("roleIds")%>"; //登陆者id
	var olderId = "<%=(String) olderId%>" //老人id
	var ecgdata = [];//心电数据
	var nextTime; //下次返回数据的时间
	setInterval(function () {
      	 $.ajax({  
               type: "POST",  
               url: "ecgStick.do?getecg",  
               async: true, //表示同步，如果要得到ajax处理完后台数据后的返回值，最好这样设置 
               dataType : "json",
		       data: {
		    	   "olderId":olderId,
		    	   "nextTime":nextTime
		       },
               success: function(data){
            	   nextTime = data.nextTime;
            	   xinlv = data.xinlv;//更新最新心率值
            	   //作最新6s的心电图    
            	   var datas = JSON.stringify(data.ecgdata);//获取到的对象转为字符串
            	   var datas1 =datas.substring(1,datas.length-1).split(",");
            	   ecgdata = ecgdata.concat(datas1);
            	   //newEcg = newEcg.concat(datas1);               
               }  
           });
      }, 2000);
	 
	function newChart(){
		if($("#ecgwave").length)
		{
			var options = {
				series: { shadowSize: 1 }, // drawing is faster without shadows
				yaxis: { min:-2000, max: 7500 },
				xaxis: { show: false }
			};
			var plot = $.plot($("#ecgwave"), [ getRandomData() ], options);
			
			function update() {
				
				plot.setData([ getRandomData() ]);
				//描点
				plot.draw();
				setTimeout(update,2);
			}
			update();
		}
	}

	var edata = new Array(5020);
	for (var i = 0; i < edata.length; i++){edata[i]=0;}
	var totalPoints = 5000;//一屏显示的点数
	function getRandomData() {
		var num = 27;
		if(xinlv == 0 && ecgdata.length < num && ecgdata.length != 0){
			edata = edata.slice(ecgdata.length);
		} else if (xinlv == 0 && ecgdata.length == 0){
			edata = edata.slice(num);
		} else if (ecgdata.length >num){
			edata = edata.slice(num);
		}
		
		// 让数据点保持totalPoints个
		while (edata.length < totalPoints) {
			if (ecgdata.length > 0) {
				var y = ecgdata.shift();
				edata.push(y);
			}else {
				edata.push(0);
			}
		}

		// 设置固定格式
		var res = [];
		for (var i = 0; i < edata.length; ++i)
			{res.push([i, edata[i]])}
		//console.log("ecgdata: " + ecgdata.length);
		return res;
	}
	
	
/****************************************************************************************************************/
	/*var newEcg = [];
	var edata = new Array(3200);
	for (var i = 0; i < edata.length; i++){edata[i]=0;}
	var totalPoints = 3000;
	function chart(){ //作折线图	
		//var data = "3,154,55,55,14,25,58,5,852,5,2,5,2,5,5,2,55,2";			 
		 var datas = JSON.stringify(data);//获取到的对象转为字符串
		 //console.log(datas);
		datas = datas.substr(1,datas.length-2);//去除前后引号""	
		//console.log(datas);
		var datas1 ="";
		 if(datas.charAt(datas.length - 1) == ","){//最后位有,
			 datas1 = "[" + datas.substr(0,datas1.length-1) + "]";
		 }else{
			 datas1 = "[" + datas + "]";
		 }	
		console.log(datas1);
		
		
		if (edata.length > 0)
			edata = edata.slice(1);

		// 让数据点保持totalPoints个
		while (edata.length < totalPoints) {
			var y = newEcg.shift(1);
			edata.push(y);
		}
		var datas = edata.join(",");
		datas = JSON.stringify(datas);
		var datas1 = datas.join(",");
		
		var datas2 = JSON.parse(datas1);
		//var updateInterval = 1000;
			
		//alert(datas1);
  		$("#ecgwave").highcharts({
			series: [{
	            name: "心电图",
	            data: datas2
	        }],
	        title:[{
	        	text:null
	        }]
	    });	
	}*/
/*************************************************************************************************/	
	var xinlv = 0;
    function getxinlv() {		        
        $('#container').highcharts({
            chart: {
                type: 'spline',
                animation: Highcharts.svg, // don't animate in old IE
                marginRight: 10,
                events: {
                    load: function () {                        
                        var series = this.series[0];
                        setInterval(function () {
                        	       //var x = (new Date()).getTime(), // current time
                                   y = xinlv;
                                   series.addPoint([y], true, true); 
                        }, 1000);
                    }
                }
            },
           // xAxis: {
            //    type: 'datetime',
           // },
            yAxis: {
				labels: {
					enabled: true
				}
			},
            exporting: {
                enabled: false
            },
            series: [{
                name: '心率',
                data: (function () {
                    var data = [],
                       // time = (new Date()).getTime(),
                        i;
                    for (i = -19; i <= 0; i += 1) {
                        data.push({
                          //  x: time + i * 2000,
                            y: 0
                        });
                    }
                    return data;
                }())
            }]
        });
    };
		


</script> 
    <!-- Bootstrap core JavaScript -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="js/behaviour/voice-commands.js"></script>
    <script src="js/bootstrap/dist/js/bootstrap.min.js"></script>
  </body>
  </html>

