package fsk.parse.examinationDataFile;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.examinationDataFile.ExaminationDataFileEntity;



import fsk.entity.examinationData.ExaminationDataEntity;

import com.framework.system.util.JsonUtil;
import com.framework.system.db.query.OrderVO;
 /**   
 * @Title: Parse
 * @Description: 体检数据文件信息表解析器
 * @author feng.gu
 * @date 2016-10-11 15:23:06
 * @version V1.0   
 *
 */
public class ExaminationDataFileParse {
	private static Logger logger = Logger.getLogger(ExaminationDataFileParse.class);
	private static ExaminationDataFileParse examinationDataFileParse;

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static ExaminationDataFileParse getInstance() {
		if (examinationDataFileParse == null) {
			examinationDataFileParse = new ExaminationDataFileParse();
		}
		return examinationDataFileParse;
	}

	public Map<String, Object> parse(int type, String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command,reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command,reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			ExaminationDataFileEntity examinationDataFileReturn = null;
			List<ExaminationDataFileEntity> examinationDataFileListReturn = null;
			Integer idReturn = null;			
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;
			
															Boolean examinationDataShowReturn = false;
			Boolean delExaminationDataReturn = false;
															
			//json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject)reqParams.get("content");
			if ("ADD_EXAMINATION_DATA_FILE_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				examinationDataFileReturn = new ExaminationDataFileEntity();
				if(true){
					if(contentreq!=null){
												    						    Integer id = (Integer)contentreq.get("id");
	                		if(id!=null){
			                	examinationDataFileReturn.setId(id);
			                }
						    												    						    String url = (String)contentreq.get("url");
	                		if(url!=null){
			                	examinationDataFileReturn.setUrl(url);
			                }
						    												    						    String name = (String)contentreq.get("name");
	                		if(name!=null){
			                	examinationDataFileReturn.setName(name);
			                }
						    												    						    String des = (String)contentreq.get("des");
	                		if(des!=null){
			                	examinationDataFileReturn.setDes(des);
			                }
						    												    						    Integer showIndex = (Integer)contentreq.get("showIndex");
	                		if(showIndex!=null){
			                	examinationDataFileReturn.setShowIndex(showIndex);
			                }
						    												    						    Integer examinationDataId = (Integer)contentreq.get("examinationDataId");
	                		if(examinationDataId!=null){
			                	examinationDataFileReturn.setExaminationDataId(examinationDataId);
			                }
						    												    						    String createPerson = (String)contentreq.get("createPerson");
	                		if(createPerson!=null){
			                	examinationDataFileReturn.setCreatePerson(createPerson);
			                }
						    												    						    String createTime = (String)contentreq.get("createTime");
	                		if(createTime!=null){
			                	examinationDataFileReturn.setCreateTime(createTime);
			                }
						    											}					
				}
																				if(true){
					Object examinationData = contentreq.get("examinationData");
					if(examinationData!=null){
						JSONObject obj = (JSONObject)examinationData;
						if(obj!=null){
							ExaminationDataEntity entity = new ExaminationDataEntity();						
																						    Integer id = (Integer)obj.get("id");
		                		if(id!=null){
				                	entity.setId(id);
				                }
							    																						    Integer type1DataDicId = (Integer)obj.get("type1DataDicId");
		                		if(type1DataDicId!=null){
				                	entity.setType1DataDicId(type1DataDicId);
				                }
							    																						    Integer type2DataDicId = (Integer)obj.get("type2DataDicId");
		                		if(type2DataDicId!=null){
				                	entity.setType2DataDicId(type2DataDicId);
				                }
							    																						    String examinationItem = (String)obj.get("examinationItem");
		                		if(examinationItem!=null){
				                	entity.setExaminationItem(examinationItem);
				                }
							    																						    String examinationResult = (String)obj.get("examinationResult");
		                		if(examinationResult!=null){
				                	entity.setExaminationResult(examinationResult);
				                }
							    																						    String unit = (String)obj.get("unit");
		                		if(unit!=null){
				                	entity.setUnit(unit);
				                }
							    																						    String abnormalPrompt = (String)obj.get("abnormalPrompt");
		                		if(abnormalPrompt!=null){
				                	entity.setAbnormalPrompt(abnormalPrompt);
				                }
							    																						    String referenceRange = (String)obj.get("referenceRange");
		                		if(referenceRange!=null){
				                	entity.setReferenceRange(referenceRange);
				                }
							    																						    String conclusion = (String)obj.get("conclusion");
		                		if(conclusion!=null){
				                	entity.setConclusion(conclusion);
				                }
							    																						    String examinationTime = (String)obj.get("examinationTime");
		                		if(examinationTime!=null){
				                	entity.setExaminationTime(examinationTime);
				                }
							    																						    String createTime = (String)obj.get("createTime");
		                		if(createTime!=null){
				                	entity.setCreateTime(createTime);
				                }
							    																						    Integer examinationRecordId = (Integer)obj.get("examinationRecordId");
		                		if(examinationRecordId!=null){
				                	entity.setExaminationRecordId(examinationRecordId);
				                }
							    														examinationDataFileReturn.setExaminationData(entity);
						}						
					}
				}
																			} else if ("QUERY_EXAMINATION_DATA_FILE_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");
					        																												String examinationDataShow = (String)contentreq.get("examinationDataShow");
							if("true".equals(examinationDataShow)){
								examinationDataShowReturn = true;
							}
																																	}	
				}
			} else if ("QUERY_EXAMINATION_DATA_FILE_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																																String url_like = (String)contentreq.get("url_like");
							String url_isNull = (String)contentreq.get("url_isNull");
							String url_isNotNull = (String)contentreq.get("url_isNotNull");
							String url_in = (String)contentreq.get("url_in");
							String url = (String)contentreq.get("url");
							if(url_like!=null){
	                        	queryMapReturn.put("url_like", url_like);
							}
							if(url_isNull!=null){
	                        	queryMapReturn.put("url_isNull", url_isNull);
							}
							if(url_isNotNull!=null){
	                        	queryMapReturn.put("url_isNotNull", url_isNotNull);
							}
							if(url_in!=null){
	                        	queryMapReturn.put("url_in", url_in);
							}
							if(url!=null){
	                        	queryMapReturn.put("url", url);
							}						           
																																							String name_like = (String)contentreq.get("name_like");
							String name_isNull = (String)contentreq.get("name_isNull");
							String name_isNotNull = (String)contentreq.get("name_isNotNull");
							String name_in = (String)contentreq.get("name_in");
							String name = (String)contentreq.get("name");
							if(name_like!=null){
	                        	queryMapReturn.put("name_like", name_like);
							}
							if(name_isNull!=null){
	                        	queryMapReturn.put("name_isNull", name_isNull);
							}
							if(name_isNotNull!=null){
	                        	queryMapReturn.put("name_isNotNull", name_isNotNull);
							}
							if(name_in!=null){
	                        	queryMapReturn.put("name_in", name_in);
							}
							if(name!=null){
	                        	queryMapReturn.put("name", name);
							}						           
																																							String des_like = (String)contentreq.get("des_like");
							String des_isNull = (String)contentreq.get("des_isNull");
							String des_isNotNull = (String)contentreq.get("des_isNotNull");
							String des_in = (String)contentreq.get("des_in");
							String des = (String)contentreq.get("des");
							if(des_like!=null){
	                        	queryMapReturn.put("des_like", des_like);
							}
							if(des_isNull!=null){
	                        	queryMapReturn.put("des_isNull", des_isNull);
							}
							if(des_isNotNull!=null){
	                        	queryMapReturn.put("des_isNotNull", des_isNotNull);
							}
							if(des_in!=null){
	                        	queryMapReturn.put("des_in", des_in);
							}
							if(des!=null){
	                        	queryMapReturn.put("des", des);
							}						           
																															Integer showIndex_gt = (Integer)contentreq.get("showIndex_gt");
						Integer showIndex_ge = (Integer)contentreq.get("showIndex_ge");
						Integer showIndex_lt = (Integer)contentreq.get("showIndex_lt");
						Integer showIndex_le = (Integer)contentreq.get("showIndex_le");
						String showIndex_in = (String)contentreq.get("showIndex_in");
						Integer showIndex = (Integer)contentreq.get("showIndex");
                        if(showIndex_gt!=null){
                        	queryMapReturn.put("showIndex_gt", showIndex_gt);
						}
						if(showIndex_ge!=null){
                        	queryMapReturn.put("showIndex_ge", showIndex_ge);
						}
						if(showIndex_lt!=null){
                        	queryMapReturn.put("showIndex_lt", showIndex_lt);
						}
						if(showIndex_le!=null){
                        	queryMapReturn.put("showIndex_le", showIndex_le);
						}
						if(showIndex_in!=null){
                        	queryMapReturn.put("showIndex_in", showIndex_in);
						}
						if(showIndex!=null){
                        	queryMapReturn.put("showIndex", showIndex);
						}		
																								Integer examinationDataId_gt = (Integer)contentreq.get("examinationDataId_gt");
						Integer examinationDataId_ge = (Integer)contentreq.get("examinationDataId_ge");
						Integer examinationDataId_lt = (Integer)contentreq.get("examinationDataId_lt");
						Integer examinationDataId_le = (Integer)contentreq.get("examinationDataId_le");
						String examinationDataId_in = (String)contentreq.get("examinationDataId_in");
						Integer examinationDataId = (Integer)contentreq.get("examinationDataId");
                        if(examinationDataId_gt!=null){
                        	queryMapReturn.put("examinationDataId_gt", examinationDataId_gt);
						}
						if(examinationDataId_ge!=null){
                        	queryMapReturn.put("examinationDataId_ge", examinationDataId_ge);
						}
						if(examinationDataId_lt!=null){
                        	queryMapReturn.put("examinationDataId_lt", examinationDataId_lt);
						}
						if(examinationDataId_le!=null){
                        	queryMapReturn.put("examinationDataId_le", examinationDataId_le);
						}
						if(examinationDataId_in!=null){
                        	queryMapReturn.put("examinationDataId_in", examinationDataId_in);
						}
						if(examinationDataId!=null){
                        	queryMapReturn.put("examinationDataId", examinationDataId);
						}		
																																String createPerson_like = (String)contentreq.get("createPerson_like");
							String createPerson_isNull = (String)contentreq.get("createPerson_isNull");
							String createPerson_isNotNull = (String)contentreq.get("createPerson_isNotNull");
							String createPerson_in = (String)contentreq.get("createPerson_in");
							String createPerson = (String)contentreq.get("createPerson");
							if(createPerson_like!=null){
	                        	queryMapReturn.put("createPerson_like", createPerson_like);
							}
							if(createPerson_isNull!=null){
	                        	queryMapReturn.put("createPerson_isNull", createPerson_isNull);
							}
							if(createPerson_isNotNull!=null){
	                        	queryMapReturn.put("createPerson_isNotNull", createPerson_isNotNull);
							}
							if(createPerson_in!=null){
	                        	queryMapReturn.put("createPerson_in", createPerson_in);
							}
							if(createPerson!=null){
	                        	queryMapReturn.put("createPerson", createPerson);
							}						           
																																							String createTime_gt = (String)contentreq.get("createTime_gt");
							String createTime_ge = (String)contentreq.get("createTime_ge");
							String createTime_lt = (String)contentreq.get("createTime_lt");
							String createTime_le = (String)contentreq.get("createTime_le");
	                        if(createTime_gt!=null){
	                        	queryMapReturn.put("createTime_gt", createTime_gt);
							}
							if(createTime_ge!=null){
	                        	queryMapReturn.put("createTime_ge", createTime_ge);
							}
							if(createTime_lt!=null){
	                        	queryMapReturn.put("createTime_lt", createTime_lt);
							}
							if(createTime_le!=null){
	                        	queryMapReturn.put("createTime_le", createTime_le);
							} 
																						
						    																												
																																			String examinationDataShow = (String)contentreq.get("examinationDataShow");
							if("true".equals(examinationDataShow)){
								examinationDataShowReturn = true;
							}
																																	}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				    Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray)orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for(int i=0;i<order.size();i++){
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String)obj.get("column"));
							orderVO.setOrderType((String)obj.get("type"));
							orderListReturn.add(orderVO);
						}						
					}
				}
			} else if ("DEL_EXAMINATION_DATA_FILE_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");	
						    																												String delExaminationData = (String)contentreq.get("delExaminationData");
							if("true".equals(delExaminationData)){
								delExaminationDataReturn = true;
							}
																																	}	
				}
			} else if ("DEL_EXAMINATION_DATA_FILE_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																																String url_like = (String)contentreq.get("url_like");
							String url_isNull = (String)contentreq.get("url_isNull");
							String url_isNotNull = (String)contentreq.get("url_isNotNull");
							String url_in = (String)contentreq.get("url_in");
							String url = (String)contentreq.get("url");
							if(url_like!=null){
	                        	queryMapReturn.put("url_like", url_like);
							}
							if(url_isNull!=null){
	                        	queryMapReturn.put("url_isNull", url_isNull);
							}
							if(url_isNotNull!=null){
	                        	queryMapReturn.put("url_isNotNull", url_isNotNull);
							}
							if(url_in!=null){
	                        	queryMapReturn.put("url_in", url_in);
							}
							if(url!=null){
	                        	queryMapReturn.put("url", url);
							}						           
																																							String name_like = (String)contentreq.get("name_like");
							String name_isNull = (String)contentreq.get("name_isNull");
							String name_isNotNull = (String)contentreq.get("name_isNotNull");
							String name_in = (String)contentreq.get("name_in");
							String name = (String)contentreq.get("name");
							if(name_like!=null){
	                        	queryMapReturn.put("name_like", name_like);
							}
							if(name_isNull!=null){
	                        	queryMapReturn.put("name_isNull", name_isNull);
							}
							if(name_isNotNull!=null){
	                        	queryMapReturn.put("name_isNotNull", name_isNotNull);
							}
							if(name_in!=null){
	                        	queryMapReturn.put("name_in", name_in);
							}
							if(name!=null){
	                        	queryMapReturn.put("name", name);
							}						           
																																							String des_like = (String)contentreq.get("des_like");
							String des_isNull = (String)contentreq.get("des_isNull");
							String des_isNotNull = (String)contentreq.get("des_isNotNull");
							String des_in = (String)contentreq.get("des_in");
							String des = (String)contentreq.get("des");
							if(des_like!=null){
	                        	queryMapReturn.put("des_like", des_like);
							}
							if(des_isNull!=null){
	                        	queryMapReturn.put("des_isNull", des_isNull);
							}
							if(des_isNotNull!=null){
	                        	queryMapReturn.put("des_isNotNull", des_isNotNull);
							}
							if(des_in!=null){
	                        	queryMapReturn.put("des_in", des_in);
							}
							if(des!=null){
	                        	queryMapReturn.put("des", des);
							}						           
																															Integer showIndex_gt = (Integer)contentreq.get("showIndex_gt");
						Integer showIndex_ge = (Integer)contentreq.get("showIndex_ge");
						Integer showIndex_lt = (Integer)contentreq.get("showIndex_lt");
						Integer showIndex_le = (Integer)contentreq.get("showIndex_le");
						String showIndex_in = (String)contentreq.get("showIndex_in");
						Integer showIndex = (Integer)contentreq.get("showIndex");
                        if(showIndex_gt!=null){
                        	queryMapReturn.put("showIndex_gt", showIndex_gt);
						}
						if(showIndex_ge!=null){
                        	queryMapReturn.put("showIndex_ge", showIndex_ge);
						}
						if(showIndex_lt!=null){
                        	queryMapReturn.put("showIndex_lt", showIndex_lt);
						}
						if(showIndex_le!=null){
                        	queryMapReturn.put("showIndex_le", showIndex_le);
						}
						if(showIndex_in!=null){
                        	queryMapReturn.put("showIndex_in", showIndex_in);
						}
						if(showIndex!=null){
                        	queryMapReturn.put("showIndex", showIndex);
						}		
																								Integer examinationDataId_gt = (Integer)contentreq.get("examinationDataId_gt");
						Integer examinationDataId_ge = (Integer)contentreq.get("examinationDataId_ge");
						Integer examinationDataId_lt = (Integer)contentreq.get("examinationDataId_lt");
						Integer examinationDataId_le = (Integer)contentreq.get("examinationDataId_le");
						String examinationDataId_in = (String)contentreq.get("examinationDataId_in");
						Integer examinationDataId = (Integer)contentreq.get("examinationDataId");
                        if(examinationDataId_gt!=null){
                        	queryMapReturn.put("examinationDataId_gt", examinationDataId_gt);
						}
						if(examinationDataId_ge!=null){
                        	queryMapReturn.put("examinationDataId_ge", examinationDataId_ge);
						}
						if(examinationDataId_lt!=null){
                        	queryMapReturn.put("examinationDataId_lt", examinationDataId_lt);
						}
						if(examinationDataId_le!=null){
                        	queryMapReturn.put("examinationDataId_le", examinationDataId_le);
						}
						if(examinationDataId_in!=null){
                        	queryMapReturn.put("examinationDataId_in", examinationDataId_in);
						}
						if(examinationDataId!=null){
                        	queryMapReturn.put("examinationDataId", examinationDataId);
						}		
																																String createPerson_like = (String)contentreq.get("createPerson_like");
							String createPerson_isNull = (String)contentreq.get("createPerson_isNull");
							String createPerson_isNotNull = (String)contentreq.get("createPerson_isNotNull");
							String createPerson_in = (String)contentreq.get("createPerson_in");
							String createPerson = (String)contentreq.get("createPerson");
							if(createPerson_like!=null){
	                        	queryMapReturn.put("createPerson_like", createPerson_like);
							}
							if(createPerson_isNull!=null){
	                        	queryMapReturn.put("createPerson_isNull", createPerson_isNull);
							}
							if(createPerson_isNotNull!=null){
	                        	queryMapReturn.put("createPerson_isNotNull", createPerson_isNotNull);
							}
							if(createPerson_in!=null){
	                        	queryMapReturn.put("createPerson_in", createPerson_in);
							}
							if(createPerson!=null){
	                        	queryMapReturn.put("createPerson", createPerson);
							}						           
																																							String createTime_gt = (String)contentreq.get("createTime_gt");
							String createTime_ge = (String)contentreq.get("createTime_ge");
							String createTime_lt = (String)contentreq.get("createTime_lt");
							String createTime_le = (String)contentreq.get("createTime_le");
	                        if(createTime_gt!=null){
	                        	queryMapReturn.put("createTime_gt", createTime_gt);
							}
							if(createTime_ge!=null){
	                        	queryMapReturn.put("createTime_ge", createTime_ge);
							}
							if(createTime_lt!=null){
	                        	queryMapReturn.put("createTime_lt", createTime_lt);
							}
							if(createTime_le!=null){
	                        	queryMapReturn.put("createTime_le", createTime_le);
							} 
																									
																														String delExaminationData = (String)contentreq.get("delExaminationData");
						if("true".equals(delExaminationData)){
							delExaminationDataReturn = true;
						}
																													}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (examinationDataFileReturn != null) {
				parseMap.put("examinationDataFile", examinationDataFileReturn);
			}
			if (examinationDataFileListReturn != null && examinationDataFileListReturn.size() > 0) {
				parseMap.put("examinationDataFileList", examinationDataFileListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}	
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}		
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}
			
			
															if (examinationDataShowReturn != null) {
				parseMap.put("examinationDataShow", examinationDataShowReturn);
			}
			if (delExaminationDataReturn != null) {
				parseMap.put("delExaminationData", delExaminationDataReturn);
			}
															
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command,String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
