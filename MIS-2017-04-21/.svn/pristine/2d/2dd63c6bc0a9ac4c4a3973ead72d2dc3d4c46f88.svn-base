package fsk.service.serviceTaskPhoto;

import java.math.BigDecimal;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import org.apache.log4j.Logger;


import fsk.entity.serviceTask.ServiceTaskEntity;

import fsk.entity.serviceTaskPhoto.ServiceTaskPhotoEntity;
import com.framework.system.db.connect.DbUtils;
import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.PageList;
import com.framework.system.db.query.QueryCondition;
import com.framework.system.db.query.OrderByCondition;
import com.framework.system.db.query.OrderVO;
import com.framework.system.db.transaction.TransactionManager;
import com.framework.system.util.StringUtil;



/**   
 * @Title: Service
 * @Description: 服务照片服务类
 * @author feng.gu
 * @date 2016-07-27 15:35:54
 * @version V1.0   
 *
 */
public class ServiceTaskPhotoService {
	   private static Logger logger = Logger.getLogger(ServiceTaskPhotoService.class);
	   private DBManager dbManager = DBManager.getInstance();
    		
	   private static ServiceTaskPhotoService serviceTaskPhotoService;
	   /**
	    * 获取实例	
	    * @return
	    */
	   public static ServiceTaskPhotoService getInstance(){
		if(serviceTaskPhotoService==null){
			serviceTaskPhotoService = new ServiceTaskPhotoService();
		}
		return serviceTaskPhotoService;
	   }
	                 	                 				     				     				     				     
				     	 
	   /**
		 * 保存记录
		 * 
		 * @param obj
		 */
		public boolean save(ServiceTaskPhotoEntity serviceTaskPhoto) {			
			boolean result =false;
			if(serviceTaskPhoto!=null){
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					 tx.beginTransaction();					 					 
					 					 				     				     					     //关联信息保存
					     ServiceTaskEntity serviceTask = serviceTaskPhoto.getServiceTask();
						 if(serviceTask!=null){						   
							 dbManager.saveNoTransaction(serviceTask);
							 serviceTaskPhoto.setServiceTaskId(serviceTask.getId());
						 }						 
				     				     				     					 					 result=dbManager.saveNoTransaction(serviceTaskPhoto);	
					 tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {				    
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  			
			}	
			return result;
		}
		
		/**
		 * 批量保存记录
		 * 
		 * @param list
		 */
		public boolean saveList(List<ServiceTaskPhotoEntity> serviceTaskPhotoList) {
			boolean result = false;
			if (serviceTaskPhotoList != null && serviceTaskPhotoList.size() > 0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 
					for(ServiceTaskPhotoEntity serviceTaskPhoto:serviceTaskPhotoList){
						if(serviceTaskPhoto!=null){												  								 
								 									 					                 								     								         //关联信息保存
									     ServiceTaskEntity serviceTask = serviceTaskPhoto.getServiceTask();
										 if(serviceTask!=null){						   
											 dbManager.saveNoTransaction(serviceTask);
											 serviceTaskPhoto.setServiceTaskId(serviceTask.getId());
										 }									 
								     								     								     								 								 result=dbManager.saveNoTransaction(serviceTaskPhoto);								 			
						}	
					}
				    tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
				/**
		 * 根据id读取记录
		 * 
		 * @param id
		 *            主键
		 * @param obj
		 */
		public ServiceTaskPhotoEntity getById(Integer id) {
			ServiceTaskPhotoEntity obj = null;
			if (id != null) {
				obj = (ServiceTaskPhotoEntity) dbManager.getById(id, ServiceTaskPhotoEntity.class);			
			}
			return obj;
		}
				
		
		/**
		 * 根据id读取记录
		 * @param id 主键
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息
				     				     				     		 		 * @param obj
		 */
		public ServiceTaskPhotoEntity getById(Integer id,Boolean serviceTaskShow) {
			ServiceTaskPhotoEntity obj = null;
			if (id!=null) {
				obj = (ServiceTaskPhotoEntity)dbManager.getById(id, ServiceTaskPhotoEntity.class);
									 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				   			}
			return obj;
		}
		
		/**
		 * 根据条件查询记录集合（不分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合		
		 * @return
		 */
		public List<ServiceTaskPhotoEntity> getListByCondition(Map<String,Object> queryMap) {
		    List<ServiceTaskPhotoEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
																					Object title=queryMap.get("title");
					Object title_like=queryMap.get("title_like");
					Object title_isNull=queryMap.get("title_isNull");
					Object title_isNotNull=queryMap.get("title_isNotNull");
					Object title_in=queryMap.get("title_in");
																										Object des=queryMap.get("des");
					Object des_like=queryMap.get("des_like");
					Object des_isNull=queryMap.get("des_isNull");
					Object des_isNotNull=queryMap.get("des_isNotNull");
					Object des_in=queryMap.get("des_in");
																										Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
																										Object createPerson=queryMap.get("createPerson");
					Object createPerson_like=queryMap.get("createPerson_like");
					Object createPerson_isNull=queryMap.get("createPerson_isNull");
					Object createPerson_isNotNull=queryMap.get("createPerson_isNotNull");
					Object createPerson_in=queryMap.get("createPerson_in");
																										Object photoUrl=queryMap.get("photoUrl");
					Object photoUrl_like=queryMap.get("photoUrl_like");
					Object photoUrl_isNull=queryMap.get("photoUrl_isNull");
					Object photoUrl_isNotNull=queryMap.get("photoUrl_isNotNull");
					Object photoUrl_in=queryMap.get("photoUrl_in");
																					Object showIndex=queryMap.get("showIndex");
					Object showIndex_gt=queryMap.get("showIndex_gt");
					Object showIndex_ge=queryMap.get("showIndex_ge");
					Object showIndex_lt=queryMap.get("showIndex_lt");
					Object showIndex_le=queryMap.get("showIndex_le");
					Object showIndex_in=queryMap.get("showIndex_in");
							
			

													
			
			QueryCondition qc = new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
															  					if(title!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.eq, title));}
		            if(title_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.like, title_like));}
		            if(title_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNull, title_isNull));}
		            if(title_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNotNull, title_isNotNull));}
				    if(title_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.in, title_in));}
				  															  					if(des!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.eq, des));}
		            if(des_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.like, des_like));}
		            if(des_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNull, des_isNull));}
		            if(des_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNotNull, des_isNotNull));}
				    if(des_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.in, des_in));}
				  															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  															  					if(createPerson!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.eq, createPerson));}
		            if(createPerson_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.like, createPerson_like));}
		            if(createPerson_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNull, createPerson_isNull));}
		            if(createPerson_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNotNull, createPerson_isNotNull));}
				    if(createPerson_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.in, createPerson_in));}
				  															  					if(photoUrl!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.eq, photoUrl));}
		            if(photoUrl_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.like, photoUrl_like));}
		            if(photoUrl_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNull, photoUrl_isNull));}
		            if(photoUrl_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNotNull, photoUrl_isNotNull));}
				    if(photoUrl_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.in, photoUrl_in));}
				  																if(showIndex!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.eq, showIndex));}
					if(showIndex_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.gt, showIndex_gt));}
					if(showIndex_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.ge, showIndex_ge));}
					if(showIndex_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.lt, showIndex_lt));}
					if(showIndex_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.le, showIndex_le));}
					if(showIndex_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.in, showIndex_in));}
										
						  			            list = dbManager.queryByCondition(ServiceTaskPhotoEntity.class,qc);    
            if(list!=null&&list.size()>0){
               returnlist = new ArrayList<ServiceTaskPhotoEntity>();
               for (Object obj:list) {           
                 returnlist.add((ServiceTaskPhotoEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		
		/**
		 * 根据条件查询记录集合（不分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		 * @return
		 */
		public List<ServiceTaskPhotoEntity> getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,Boolean serviceTaskShow) {
			List<ServiceTaskPhotoEntity> returnlist = null;
			List<Object> list = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
																					Object title=queryMap.get("title");
					Object title_like=queryMap.get("title_like");
					Object title_isNull=queryMap.get("title_isNull");
					Object title_isNotNull=queryMap.get("title_isNotNull");
					Object title_in=queryMap.get("title_in");
																										Object des=queryMap.get("des");
					Object des_like=queryMap.get("des_like");
					Object des_isNull=queryMap.get("des_isNull");
					Object des_isNotNull=queryMap.get("des_isNotNull");
					Object des_in=queryMap.get("des_in");
																										Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
																										Object createPerson=queryMap.get("createPerson");
					Object createPerson_like=queryMap.get("createPerson_like");
					Object createPerson_isNull=queryMap.get("createPerson_isNull");
					Object createPerson_isNotNull=queryMap.get("createPerson_isNotNull");
					Object createPerson_in=queryMap.get("createPerson_in");
																										Object photoUrl=queryMap.get("photoUrl");
					Object photoUrl_like=queryMap.get("photoUrl_like");
					Object photoUrl_isNull=queryMap.get("photoUrl_isNull");
					Object photoUrl_isNotNull=queryMap.get("photoUrl_isNotNull");
					Object photoUrl_in=queryMap.get("photoUrl_in");
																					Object showIndex=queryMap.get("showIndex");
					Object showIndex_gt=queryMap.get("showIndex_gt");
					Object showIndex_ge=queryMap.get("showIndex_ge");
					Object showIndex_lt=queryMap.get("showIndex_lt");
					Object showIndex_le=queryMap.get("showIndex_le");
					Object showIndex_in=queryMap.get("showIndex_in");
							
			

													
			
			QueryCondition qc = new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
															  					if(title!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.eq, title));}
		            if(title_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.like, title_like));}
		            if(title_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNull, title_isNull));}
		            if(title_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNotNull, title_isNotNull));}
				    if(title_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.in, title_in));}
				  															  					if(des!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.eq, des));}
		            if(des_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.like, des_like));}
		            if(des_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNull, des_isNull));}
		            if(des_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNotNull, des_isNotNull));}
				    if(des_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.in, des_in));}
				  															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  															  					if(createPerson!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.eq, createPerson));}
		            if(createPerson_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.like, createPerson_like));}
		            if(createPerson_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNull, createPerson_isNull));}
		            if(createPerson_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNotNull, createPerson_isNotNull));}
				    if(createPerson_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.in, createPerson_in));}
				  															  					if(photoUrl!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.eq, photoUrl));}
		            if(photoUrl_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.like, photoUrl_like));}
		            if(photoUrl_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNull, photoUrl_isNull));}
		            if(photoUrl_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNotNull, photoUrl_isNotNull));}
				    if(photoUrl_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.in, photoUrl_in));}
				  																if(showIndex!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.eq, showIndex));}
					if(showIndex_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.gt, showIndex_gt));}
					if(showIndex_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.ge, showIndex_ge));}
					if(showIndex_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.lt, showIndex_lt));}
					if(showIndex_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.le, showIndex_le));}
					if(showIndex_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.in, showIndex_in));}
										
						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}			
            list = dbManager.queryByConditions(ServiceTaskPhotoEntity.class,qc,oc);
                                    int a=0;
            					             	                 				     				     if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()){
						a++;
					 }
				     				     				     		    		                if(a>0&&list!=null&&list.size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<list.size();i++){
					ServiceTaskPhotoEntity obj = (ServiceTaskPhotoEntity)list.get(i);
										 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				    					result.add(obj);					
				}
				list=result;			
		}	
					if(list!=null&&list.size()>0){
               returnlist = new ArrayList<ServiceTaskPhotoEntity>();
               for (Object obj:list) {           
                 returnlist.add((ServiceTaskPhotoEntity)obj);
               }
            }       					
			return returnlist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 不带排序 不级联查询）
		 * @param queryMap 查询条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数		
		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,int pageno,int pagesize) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
															  					Object title=queryMap.get("title");
					Object title_like=queryMap.get("title_like");
					Object title_isNull=queryMap.get("title_isNull");
					Object title_isNotNull=queryMap.get("title_isNotNull");
					Object title_in=queryMap.get("title_in");
				   															  					Object des=queryMap.get("des");
					Object des_like=queryMap.get("des_like");
					Object des_isNull=queryMap.get("des_isNull");
					Object des_isNotNull=queryMap.get("des_isNotNull");
					Object des_in=queryMap.get("des_in");
				   															  					Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
				  															  					Object createPerson=queryMap.get("createPerson");
					Object createPerson_like=queryMap.get("createPerson_like");
					Object createPerson_isNull=queryMap.get("createPerson_isNull");
					Object createPerson_isNotNull=queryMap.get("createPerson_isNotNull");
					Object createPerson_in=queryMap.get("createPerson_in");
				   															  					Object photoUrl=queryMap.get("photoUrl");
					Object photoUrl_like=queryMap.get("photoUrl_like");
					Object photoUrl_isNull=queryMap.get("photoUrl_isNull");
					Object photoUrl_isNotNull=queryMap.get("photoUrl_isNotNull");
					Object photoUrl_in=queryMap.get("photoUrl_in");
				   																Object showIndex=queryMap.get("showIndex");
					Object showIndex_gt=queryMap.get("showIndex_gt");
					Object showIndex_ge=queryMap.get("showIndex_ge");
					Object showIndex_lt=queryMap.get("showIndex_lt");
					Object showIndex_le=queryMap.get("showIndex_le");
					Object showIndex_in=queryMap.get("showIndex_in");
							
			

													
			
			QueryCondition qc = new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
															  					if(title!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.eq, title));}
		            if(title_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.like, title_like));}
		            if(title_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNull, title_isNull));}
		            if(title_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNotNull, title_isNotNull));}
				    if(title_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.in, title_in));}
				  															  					if(des!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.eq, des));}
		            if(des_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.like, des_like));}
		            if(des_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNull, des_isNull));}
		            if(des_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNotNull, des_isNotNull));}
				    if(des_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.in, des_in));}
				  															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  															  					if(createPerson!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.eq, createPerson));}
		            if(createPerson_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.like, createPerson_like));}
		            if(createPerson_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNull, createPerson_isNull));}
		            if(createPerson_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNotNull, createPerson_isNotNull));}
				    if(createPerson_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.in, createPerson_in));}
				  															  					if(photoUrl!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.eq, photoUrl));}
		            if(photoUrl_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.like, photoUrl_like));}
		            if(photoUrl_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNull, photoUrl_isNull));}
		            if(photoUrl_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNotNull, photoUrl_isNotNull));}
				    if(photoUrl_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.in, photoUrl_in));}
				  																if(showIndex!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.eq, showIndex));}
					if(showIndex_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.gt, showIndex_gt));}
					if(showIndex_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.ge, showIndex_ge));}
					if(showIndex_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.lt, showIndex_lt));}
					if(showIndex_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.le, showIndex_le));}
					if(showIndex_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.in, showIndex_in));}
										
						  			            pagelist = dbManager.queryByCondition(ServiceTaskPhotoEntity.class,qc,pageno,pagesize);	                      			
			return pagelist;
		}
		
		/**
		 * 根据条件查询记录集合（带分页 带排序 带级联查询）
		 * @param queryMap 查询条件集合
		 * @param orderList 排序条件集合
		 * @param pageno 查询页码
		 * @param pagesize 查询每页记录条数
		 		             	                 				     		 * @param serviceTaskShow 是否查询关联信息,默认false(当为true时注意效率)
				     				     				     		 		 * @return
		 */
		public PageList getListByCondition(Map<String,Object> queryMap,List<OrderVO> orderList,int pageno,int pagesize,Boolean serviceTaskShow) {
			PageList pagelist = null;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
															  					Object title=queryMap.get("title");
					Object title_like=queryMap.get("title_like");
					Object title_isNull=queryMap.get("title_isNull");
					Object title_isNotNull=queryMap.get("title_isNotNull");
					Object title_in=queryMap.get("title_in");
				   															  					Object des=queryMap.get("des");
					Object des_like=queryMap.get("des_like");
					Object des_isNull=queryMap.get("des_isNull");
					Object des_isNotNull=queryMap.get("des_isNotNull");
					Object des_in=queryMap.get("des_in");
				   															  					Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
				  															  					Object createPerson=queryMap.get("createPerson");
					Object createPerson_like=queryMap.get("createPerson_like");
					Object createPerson_isNull=queryMap.get("createPerson_isNull");
					Object createPerson_isNotNull=queryMap.get("createPerson_isNotNull");
					Object createPerson_in=queryMap.get("createPerson_in");
				   															  					Object photoUrl=queryMap.get("photoUrl");
					Object photoUrl_like=queryMap.get("photoUrl_like");
					Object photoUrl_isNull=queryMap.get("photoUrl_isNull");
					Object photoUrl_isNotNull=queryMap.get("photoUrl_isNotNull");
					Object photoUrl_in=queryMap.get("photoUrl_in");
				   																Object showIndex=queryMap.get("showIndex");
					Object showIndex_gt=queryMap.get("showIndex_gt");
					Object showIndex_ge=queryMap.get("showIndex_ge");
					Object showIndex_lt=queryMap.get("showIndex_lt");
					Object showIndex_le=queryMap.get("showIndex_le");
					Object showIndex_in=queryMap.get("showIndex_in");
							
			

													
			
			QueryCondition qc = new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
															  					if(title!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.eq, title));}
		            if(title_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.like, title_like));}
		            if(title_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNull, title_isNull));}
		            if(title_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNotNull, title_isNotNull));}
				    if(title_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.in, title_in));}
				  															  					if(des!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.eq, des));}
		            if(des_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.like, des_like));}
		            if(des_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNull, des_isNull));}
		            if(des_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNotNull, des_isNotNull));}
				    if(des_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.in, des_in));}
				  															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  															  					if(createPerson!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.eq, createPerson));}
		            if(createPerson_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.like, createPerson_like));}
		            if(createPerson_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNull, createPerson_isNull));}
		            if(createPerson_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNotNull, createPerson_isNotNull));}
				    if(createPerson_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.in, createPerson_in));}
				  															  					if(photoUrl!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.eq, photoUrl));}
		            if(photoUrl_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.like, photoUrl_like));}
		            if(photoUrl_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNull, photoUrl_isNull));}
		            if(photoUrl_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNotNull, photoUrl_isNotNull));}
				    if(photoUrl_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.in, photoUrl_in));}
				  																if(showIndex!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.eq, showIndex));}
					if(showIndex_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.gt, showIndex_gt));}
					if(showIndex_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.ge, showIndex_ge));}
					if(showIndex_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.lt, showIndex_lt));}
					if(showIndex_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.le, showIndex_le));}
					if(showIndex_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.in, showIndex_in));}
										
						  						OrderByCondition oc = null;
			if(orderList!=null&&orderList.size()>0){
				for(int i=0;i<orderList.size();i++){
					OrderVO order = orderList.get(i);
					String orderColumnt =null;
					String orderType=null;
					if(order.getName()!=null&&!"".equals(order.getName())){
						orderColumnt = StringUtil.formatFieldToColumnt(order.getName());
						orderType = order.getOrderType();
						if(orderType==null||"".equals(orderType.trim())){
							orderType=OrderByCondition.desc;
						}
						if(i==0){
							oc = new OrderByCondition(orderColumnt,orderType);
						}else{
							oc.orderByCondition(new OrderByCondition(orderColumnt,orderType));
						}					
					}
					
				}
			}		
            pagelist = dbManager.queryByConditions(ServiceTaskPhotoEntity.class,qc,oc,pageno,pagesize);	           
                                    int a=0;
            					             	                 				     				     if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()){
						a++;
					 }
				     				     				     		    		                if(a>0&&pagelist!=null&&pagelist.getResultList()!=null&&pagelist.getResultList().size()>0){
				List<Object> result = new ArrayList<Object>();
				for(int i=0;i<pagelist.getResultList().size();i++){
					ServiceTaskPhotoEntity obj = (ServiceTaskPhotoEntity)pagelist.getResultList().get(i);
										 	                 				     				        //查询关联内容
						if(serviceTaskShow!=null&&serviceTaskShow.booleanValue()&&obj!=null&&obj.getServiceTaskId()!=null&&obj.getServiceTaskId()>0){
							ServiceTaskEntity serviceTask = (ServiceTaskEntity)dbManager.getById(obj.getServiceTaskId(), ServiceTaskEntity.class);
							obj.setServiceTask(serviceTask);        	  	  
						}
				     				     				     				    					result.add(obj);					
				}
				pagelist.setResultList(result);			
		}	
					return pagelist;
		}
		
		/**
		 * 删除记录
		 * 
		 * @param id 主键
		 * @param obj
		 */
		public boolean del(Integer id,Boolean delServiceTask) {
			boolean result = false;
			if (id !=null&&id>0) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 					
										 	                 				     					    //删除关联信息
						if(delServiceTask!=null&&delServiceTask.booleanValue()){	
							ServiceTaskPhotoEntity serviceTaskPhoto = (ServiceTaskPhotoEntity)dbManager.getById(id, ServiceTaskPhotoEntity.class);
							if(serviceTaskPhoto!=null&&serviceTaskPhoto.getServiceTaskId()!=null){
								dbManager.delNoTransaction(serviceTaskPhoto.getServiceTaskId(), ServiceTaskEntity.class);
							}						
						}
				     				     				     										result = dbManager.delNoTransaction(id, ServiceTaskPhotoEntity.class);
					tx.commitAndClose(); 
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		/**
		 * 批量删除记录
		 * 
		 * @param ids
		 *            主键 英文逗号间隔
		 * @param obj
		 */
		public boolean del(String ids) {
			boolean result = false;
			if (ids != null && !"".equals(ids.trim())) {
				TransactionManager tx = DbUtils.getTranManager();
				try {
					tx.beginTransaction();
					QueryCondition qc = new QueryCondition(ServiceTaskPhotoEntity.ID,QueryCondition.in, ids);
					result = dbManager.delByConditionsNoTransaction(ServiceTaskPhotoEntity.class, qc);
					tx.commitAndClose();
				} catch (Exception e) {
					logger.error("数据库提交失败！");
					logger.error(e);
					result = false;
					try {
						tx.rollbackAndClose();
					} catch (Exception ex) {
						logger.error("数据库回滚失败！");
						logger.error(ex);
					}
				}
			}
			return result;
		}

		/**
		 * 批量条件删除记录
		 * @param queryMap 查询条件集合
		 */
		public boolean delList(Map<String,Object> queryMap,Boolean delServiceTask) {
			boolean result = false;
			if(queryMap==null){
				queryMap = new HashMap<String,Object>();
			}
												Object id=queryMap.get("id");
					Object id_gt=queryMap.get("id_gt");
					Object id_ge=queryMap.get("id_ge");
					Object id_lt=queryMap.get("id_lt");
					Object id_le=queryMap.get("id_le");
					Object id_in=queryMap.get("id_in");
																Object serviceTaskId=queryMap.get("serviceTaskId");
					Object serviceTaskId_gt=queryMap.get("serviceTaskId_gt");
					Object serviceTaskId_ge=queryMap.get("serviceTaskId_ge");
					Object serviceTaskId_lt=queryMap.get("serviceTaskId_lt");
					Object serviceTaskId_le=queryMap.get("serviceTaskId_le");
					Object serviceTaskId_in=queryMap.get("serviceTaskId_in");
															  					Object title=queryMap.get("title");
					Object title_like=queryMap.get("title_like");
					Object title_isNull=queryMap.get("title_isNull");
					Object title_isNotNull=queryMap.get("title_isNotNull");
					Object title_in=queryMap.get("title_in");
				  															  					Object des=queryMap.get("des");
					Object des_like=queryMap.get("des_like");
					Object des_isNull=queryMap.get("des_isNull");
					Object des_isNotNull=queryMap.get("des_isNotNull");
					Object des_in=queryMap.get("des_in");
				  															  					Object createTime_gt=queryMap.get("createTime_gt");
					Object createTime_ge=queryMap.get("createTime_ge");
					Object createTime_lt=queryMap.get("createTime_lt");
					Object createTime_le=queryMap.get("createTime_le");
				  															  					Object createPerson=queryMap.get("createPerson");
					Object createPerson_like=queryMap.get("createPerson_like");
					Object createPerson_isNull=queryMap.get("createPerson_isNull");
					Object createPerson_isNotNull=queryMap.get("createPerson_isNotNull");
					Object createPerson_in=queryMap.get("createPerson_in");
				  															  					Object photoUrl=queryMap.get("photoUrl");
					Object photoUrl_like=queryMap.get("photoUrl_like");
					Object photoUrl_isNull=queryMap.get("photoUrl_isNull");
					Object photoUrl_isNotNull=queryMap.get("photoUrl_isNotNull");
					Object photoUrl_in=queryMap.get("photoUrl_in");
				  																Object showIndex=queryMap.get("showIndex");
					Object showIndex_gt=queryMap.get("showIndex_gt");
					Object showIndex_ge=queryMap.get("showIndex_ge");
					Object showIndex_lt=queryMap.get("showIndex_lt");
					Object showIndex_le=queryMap.get("showIndex_le");
					Object showIndex_in=queryMap.get("showIndex_in");
																				
			QueryCondition qc = new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, "0");				
												if(id!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.eq, id));}
					if(id_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.gt, id_gt));}
					if(id_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.ge, id_ge));}
					if(id_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.lt, id_lt));}
					if(id_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.le, id_le));}
					if(id_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.ID, QueryCondition.in, id_in));}
																if(serviceTaskId!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.eq, serviceTaskId));}
					if(serviceTaskId_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.gt, serviceTaskId_gt));}
					if(serviceTaskId_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.ge, serviceTaskId_ge));}
					if(serviceTaskId_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.lt, serviceTaskId_lt));}
					if(serviceTaskId_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.le, serviceTaskId_le));}
					if(serviceTaskId_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SERVICE_TASK_ID, QueryCondition.in, serviceTaskId_in));}
															  					if(title!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.eq, title));}
		            if(title_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.like, title_like));}
		            if(title_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNull, title_isNull));}
		            if(title_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.isNotNull, title_isNotNull));}
				    if(title_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.TITLE, QueryCondition.in, title_in));}
				  															  					if(des!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.eq, des));}
		            if(des_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.like, des_like));}
		            if(des_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNull, des_isNull));}
		            if(des_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.isNotNull, des_isNotNull));}
				    if(des_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.DES, QueryCondition.in, des_in));}
				  															  					if(createTime_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.gt, createTime_gt));}
					if(createTime_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.ge, createTime_ge));}
					if(createTime_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.lt, createTime_lt));}
					if(createTime_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_TIME, QueryCondition.le, createTime_le));}
				  															  					if(createPerson!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.eq, createPerson));}
		            if(createPerson_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.like, createPerson_like));}
		            if(createPerson_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNull, createPerson_isNull));}
		            if(createPerson_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.isNotNull, createPerson_isNotNull));}
				    if(createPerson_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.CREATE_PERSON, QueryCondition.in, createPerson_in));}
				  															  					if(photoUrl!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.eq, photoUrl));}
		            if(photoUrl_like!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.like, photoUrl_like));}
		            if(photoUrl_isNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNull, photoUrl_isNull));}
		            if(photoUrl_isNotNull!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.isNotNull, photoUrl_isNotNull));}
				    if(photoUrl_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.PHOTO_URL, QueryCondition.in, photoUrl_in));}
				  																if(showIndex!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.eq, showIndex));}
					if(showIndex_gt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.gt, showIndex_gt));}
					if(showIndex_ge!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.ge, showIndex_ge));}
					if(showIndex_lt!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.lt, showIndex_lt));}
					if(showIndex_le!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.le, showIndex_le));}
					if(showIndex_in!=null){qc.andCondition(new QueryCondition(ServiceTaskPhotoEntity.SHOW_INDEX, QueryCondition.in, showIndex_in));}
										
				            						if (qc.getQueryNextCondition()!=null) {
				TransactionManager tx = DbUtils.getTranManager();   
				try{   
					tx.beginTransaction(); 						
										 	                 				     					     //删除关联信息
						if(delServiceTask!=null&&delServiceTask.booleanValue()){
							List<Object> list=dbManager.queryByConditionNoTransaction(ServiceTaskPhotoEntity.class,qc);
							String strIds="";
							if(list!=null&&list.size()>0){
								for(Object obj:list){
									ServiceTaskPhotoEntity entity=(ServiceTaskPhotoEntity)obj;
									strIds += entity.getServiceTaskId()+",";
								}
								strIds = strIds.substring(0, strIds.length()-1);
							}
							if(strIds!=null&&!"".equals(strIds)){
								QueryCondition qc1 = new QueryCondition(ServiceTaskEntity.ID, QueryCondition.in, strIds);
								dbManager.delByConditionsNoTransaction(ServiceTaskEntity.class, qc1);
							}
							
						}
				     				     				     										result = dbManager.delByConditionsNoTransaction(ServiceTaskPhotoEntity.class,qc);				
					tx.commitAndClose();  
				}catch (Exception e) { 
					 logger.error("数据库提交失败！");
					 logger.error(e);
					 result = false;
				     try {
						   tx.rollbackAndClose();
					 } catch (Exception ex) {					   
						   logger.error("数据库回滚失败！");
						   logger.error(ex);
					 }   
				}  
			}
			return result;
		}
		
		
}
