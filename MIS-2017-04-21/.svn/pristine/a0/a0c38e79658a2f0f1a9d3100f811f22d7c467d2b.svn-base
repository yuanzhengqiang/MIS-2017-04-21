package fsk.parse.skinLesions;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.skinLesions.SkinLesionsEntity;



import fsk.entity.recovery.RecoveryEntity;

import com.framework.system.util.JsonUtil;
import com.framework.system.db.query.OrderVO;
 /**   
 * @Title: Parse
 * @Description: 压疮列表解析器
 * @author feng.gu
 * @date 2016-07-11 17:40:05
 * @version V1.0   
 *
 */
public class SkinLesionsParse {
	private static Logger logger = Logger.getLogger(SkinLesionsParse.class);
	private static SkinLesionsParse skinLesionsParse;

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static SkinLesionsParse getInstance() {
		if (skinLesionsParse == null) {
			skinLesionsParse = new SkinLesionsParse();
		}
		return skinLesionsParse;
	}

	public Map<String, Object> parse(int type, String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command,reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command,reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command,String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			SkinLesionsEntity skinLesionsReturn = null;
			List<SkinLesionsEntity> skinLesionsListReturn = null;
			Integer idReturn = null;			
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;
			
															Boolean recoveryShowReturn = false;
			Boolean delRecoveryReturn = false;
															
			//json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject)reqParams.get("content");
			if ("ADD_SKIN_LESIONS_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				skinLesionsReturn = new SkinLesionsEntity();
				if(true){
					if(contentreq!=null){
												    						    Integer id = (Integer)contentreq.get("id");
	                		if(id!=null){
			                	skinLesionsReturn.setId(id);
			                }
						    												    						    Integer recoveryId = (Integer)contentreq.get("recoveryId");
	                		if(recoveryId!=null){
			                	skinLesionsReturn.setRecoveryId(recoveryId);
			                }
						    												    						    String position = (String)contentreq.get("position");
	                		if(position!=null){
			                	skinLesionsReturn.setPosition(position);
			                }
						    												    						     						     Double positionLong = JsonUtil.getJSONDouble(contentreq, "positionLong");
							 if (positionLong != null) {
								skinLesionsReturn.setPositionLong(BigDecimal.valueOf(positionLong));
							 }
						     						     						    												    						     						     Double positionWide = JsonUtil.getJSONDouble(contentreq, "positionWide");
							 if (positionWide != null) {
								skinLesionsReturn.setPositionWide(BigDecimal.valueOf(positionWide));
							 }
						     						     						    												    						     						     Double siteDeep = JsonUtil.getJSONDouble(contentreq, "siteDeep");
							 if (siteDeep != null) {
								skinLesionsReturn.setSiteDeep(BigDecimal.valueOf(siteDeep));
							 }
						     						     						    												    						    String photoUrl = (String)contentreq.get("photoUrl");
	                		if(photoUrl!=null){
			                	skinLesionsReturn.setPhotoUrl(photoUrl);
			                }
						    											}					
				}
																				if(true){
					Object recovery = contentreq.get("recovery");
					if(recovery!=null){
						JSONObject obj = (JSONObject)recovery;
						if(obj!=null){
							RecoveryEntity entity = new RecoveryEntity();						
								                		Integer id = (Integer)obj.get("id");
	                		if(id!=null){
			                	entity.setId(id);
			                }
								                		String recoveryTimeForTheFirstTime = (String)obj.get("recoveryTimeForTheFirstTime");
	                		if(recoveryTimeForTheFirstTime!=null){
			                	entity.setRecoveryTimeForTheFirstTime(recoveryTimeForTheFirstTime);
			                }
								                		BigDecimal bloodPressure1 = (BigDecimal)obj.get("bloodPressure1");
	                		if(bloodPressure1!=null){
			                	entity.setBloodPressure1(bloodPressure1);
			                }
								                		BigDecimal bloodPressure2 = (BigDecimal)obj.get("bloodPressure2");
	                		if(bloodPressure2!=null){
			                	entity.setBloodPressure2(bloodPressure2);
			                }
								                		BigDecimal pulse = (BigDecimal)obj.get("pulse");
	                		if(pulse!=null){
			                	entity.setPulse(pulse);
			                }
								                		BigDecimal heartRate = (BigDecimal)obj.get("heartRate");
	                		if(heartRate!=null){
			                	entity.setHeartRate(heartRate);
			                }
								                		String rhythm = (String)obj.get("rhythm");
	                		if(rhythm!=null){
			                	entity.setRhythm(rhythm);
			                }
								                		BigDecimal breathing = (BigDecimal)obj.get("breathing");
	                		if(breathing!=null){
			                	entity.setBreathing(breathing);
			                }
								                		String skinLesions = (String)obj.get("skinLesions");
	                		if(skinLesions!=null){
			                	entity.setSkinLesions(skinLesions);
			                }
								                		String stateOfConsciousness = (String)obj.get("stateOfConsciousness");
	                		if(stateOfConsciousness!=null){
			                	entity.setStateOfConsciousness(stateOfConsciousness);
			                }
								                		String languageFunction = (String)obj.get("languageFunction");
	                		if(languageFunction!=null){
			                	entity.setLanguageFunction(languageFunction);
			                }
								                		String bilateralNormal = (String)obj.get("bilateralNormal");
	                		if(bilateralNormal!=null){
			                	entity.setBilateralNormal(bilateralNormal);
			                }
								                		String dysfunction = (String)obj.get("dysfunction");
	                		if(dysfunction!=null){
			                	entity.setDysfunction(dysfunction);
			                }
								                		String handedness = (String)obj.get("handedness");
	                		if(handedness!=null){
			                	entity.setHandedness(handedness);
			                }
								                		String limitedJointMovementOrFracture = (String)obj.get("limitedJointMovementOrFracture");
	                		if(limitedJointMovementOrFracture!=null){
			                	entity.setLimitedJointMovementOrFracture(limitedJointMovementOrFracture);
			                }
								                		String muscleToneUpperLimb = (String)obj.get("muscleToneUpperLimb");
	                		if(muscleToneUpperLimb!=null){
			                	entity.setMuscleToneUpperLimb(muscleToneUpperLimb);
			                }
								                		String muscleToneLowerLimb = (String)obj.get("muscleToneLowerLimb");
	                		if(muscleToneLowerLimb!=null){
			                	entity.setMuscleToneLowerLimb(muscleToneLowerLimb);
			                }
								                		String theBalanceFunctionOfTheSeat = (String)obj.get("theBalanceFunctionOfTheSeat");
	                		if(theBalanceFunctionOfTheSeat!=null){
			                	entity.setTheBalanceFunctionOfTheSeat(theBalanceFunctionOfTheSeat);
			                }
								                		String balanceFunction = (String)obj.get("balanceFunction");
	                		if(balanceFunction!=null){
			                	entity.setBalanceFunction(balanceFunction);
			                }
								                		String upperLimbMuscleStrength = (String)obj.get("upperLimbMuscleStrength");
	                		if(upperLimbMuscleStrength!=null){
			                	entity.setUpperLimbMuscleStrength(upperLimbMuscleStrength);
			                }
								                		String muscleStrengthOfLowerLimb = (String)obj.get("muscleStrengthOfLowerLimb");
	                		if(muscleStrengthOfLowerLimb!=null){
			                	entity.setMuscleStrengthOfLowerLimb(muscleStrengthOfLowerLimb);
			                }
								                		String reflectionDeepReflection = (String)obj.get("reflectionDeepReflection");
	                		if(reflectionDeepReflection!=null){
			                	entity.setReflectionDeepReflection(reflectionDeepReflection);
			                }
								                		String reflexShallowReflection = (String)obj.get("reflexShallowReflection");
	                		if(reflexShallowReflection!=null){
			                	entity.setReflexShallowReflection(reflexShallowReflection);
			                }
								                		String reflexPathologicalReflex = (String)obj.get("reflexPathologicalReflex");
	                		if(reflexPathologicalReflex!=null){
			                	entity.setReflexPathologicalReflex(reflexPathologicalReflex);
			                }
								                		String walkingAbilityWalkingAlone = (String)obj.get("walkingAbilityWalkingAlone");
	                		if(walkingAbilityWalkingAlone!=null){
			                	entity.setWalkingAbilityWalkingAlone(walkingAbilityWalkingAlone);
			                }
								                		String withTheSupportOfAssistiveWalking = (String)obj.get("withTheSupportOfAssistiveWalking");
	                		if(withTheSupportOfAssistiveWalking!=null){
			                	entity.setWithTheSupportOfAssistiveWalking(withTheSupportOfAssistiveWalking);
			                }
								                		String canNotWalk = (String)obj.get("canNotWalk");
	                		if(canNotWalk!=null){
			                	entity.setCanNotWalk(canNotWalk);
			                }
								                		String coordinatedFingerNoseTest = (String)obj.get("coordinatedFingerNoseTest");
	                		if(coordinatedFingerNoseTest!=null){
			                	entity.setCoordinatedFingerNoseTest(coordinatedFingerNoseTest);
			                }
								                		String coordinatedStandShaking = (String)obj.get("coordinatedStandShaking");
	                		if(coordinatedStandShaking!=null){
			                	entity.setCoordinatedStandShaking(coordinatedStandShaking);
			                }
								                		String coordinatedTremor = (String)obj.get("coordinatedTremor");
	                		if(coordinatedTremor!=null){
			                	entity.setCoordinatedTremor(coordinatedTremor);
			                }
								                		String coordinationAndKneeTibiaTest = (String)obj.get("coordinationAndKneeTibiaTest");
	                		if(coordinationAndKneeTibiaTest!=null){
			                	entity.setCoordinationAndKneeTibiaTest(coordinationAndKneeTibiaTest);
			                }
								                		BigDecimal barthelIndex = (BigDecimal)obj.get("barthelIndex");
	                		if(barthelIndex!=null){
			                	entity.setBarthelIndex(barthelIndex);
			                }
								                		BigDecimal masEvaluation = (BigDecimal)obj.get("masEvaluation");
	                		if(masEvaluation!=null){
			                	entity.setMasEvaluation(masEvaluation);
			                }
								                		BigDecimal facEvaluation = (BigDecimal)obj.get("facEvaluation");
	                		if(facEvaluation!=null){
			                	entity.setFacEvaluation(facEvaluation);
			                }
								                		String shoulderSubluxation = (String)obj.get("shoulderSubluxation");
	                		if(shoulderSubluxation!=null){
			                	entity.setShoulderSubluxation(shoulderSubluxation);
			                }
								                		String contractureOfAchillesTendon = (String)obj.get("contractureOfAchillesTendon");
	                		if(contractureOfAchillesTendon!=null){
			                	entity.setContractureOfAchillesTendon(contractureOfAchillesTendon);
			                }
								                		String varusFootDrop = (String)obj.get("varusFootDrop");
	                		if(varusFootDrop!=null){
			                	entity.setVarusFootDrop(varusFootDrop);
			                }
								                		String kneeTooDeep = (String)obj.get("kneeTooDeep");
	                		if(kneeTooDeep!=null){
			                	entity.setKneeTooDeep(kneeTooDeep);
			                }
								                		String shallowFeeling = (String)obj.get("shallowFeeling");
	                		if(shallowFeeling!=null){
			                	entity.setShallowFeeling(shallowFeeling);
			                }
								                		String deepFeeling = (String)obj.get("deepFeeling");
	                		if(deepFeeling!=null){
			                	entity.setDeepFeeling(deepFeeling);
			                }
								                		String complexFeeling = (String)obj.get("complexFeeling");
	                		if(complexFeeling!=null){
			                	entity.setComplexFeeling(complexFeeling);
			                }
								                		String pain = (String)obj.get("pain");
	                		if(pain!=null){
			                	entity.setPain(pain);
			                }
								                		String jointMobility = (String)obj.get("jointMobility");
	                		if(jointMobility!=null){
			                	entity.setJointMobility(jointMobility);
			                }
														skinLesionsReturn.setRecovery(entity);
						}						
					}
				}
																			} else if ("QUERY_SKIN_LESIONS_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");
					        																												String recoveryShow = (String)contentreq.get("recoveryShow");
							if("true".equals(recoveryShow)){
								recoveryShowReturn = true;
							}
																																	}	
				}
			} else if ("QUERY_SKIN_LESIONS_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																								Integer recoveryId_gt = (Integer)contentreq.get("recoveryId_gt");
						Integer recoveryId_ge = (Integer)contentreq.get("recoveryId_ge");
						Integer recoveryId_lt = (Integer)contentreq.get("recoveryId_lt");
						Integer recoveryId_le = (Integer)contentreq.get("recoveryId_le");
						String recoveryId_in = (String)contentreq.get("recoveryId_in");
						Integer recoveryId = (Integer)contentreq.get("recoveryId");
                        if(recoveryId_gt!=null){
                        	queryMapReturn.put("recoveryId_gt", recoveryId_gt);
						}
						if(recoveryId_ge!=null){
                        	queryMapReturn.put("recoveryId_ge", recoveryId_ge);
						}
						if(recoveryId_lt!=null){
                        	queryMapReturn.put("recoveryId_lt", recoveryId_lt);
						}
						if(recoveryId_le!=null){
                        	queryMapReturn.put("recoveryId_le", recoveryId_le);
						}
						if(recoveryId_in!=null){
                        	queryMapReturn.put("recoveryId_in", recoveryId_in);
						}
						if(recoveryId!=null){
                        	queryMapReturn.put("recoveryId", recoveryId);
						}		
																																String position_like = (String)contentreq.get("position_like");
							String position_isNull = (String)contentreq.get("position_isNull");
							String position_isNotNull = (String)contentreq.get("position_isNotNull");
							String position_in = (String)contentreq.get("position_in");
							String position = (String)contentreq.get("position");
							if(position_like!=null){
	                        	queryMapReturn.put("position_like", position_like);
							}
							if(position_isNull!=null){
	                        	queryMapReturn.put("position_isNull", position_isNull);
							}
							if(position_isNotNull!=null){
	                        	queryMapReturn.put("position_isNotNull", position_isNotNull);
							}
							if(position_in!=null){
	                        	queryMapReturn.put("position_in", position_in);
							}
							if(position!=null){
	                        	queryMapReturn.put("position", position);
							}						           
																															Integer positionLong_gt = (Integer)contentreq.get("positionLong_gt");
						Integer positionLong_ge = (Integer)contentreq.get("positionLong_ge");
						Integer positionLong_lt = (Integer)contentreq.get("positionLong_lt");
						Integer positionLong_le = (Integer)contentreq.get("positionLong_le");
						String positionLong_in = (String)contentreq.get("positionLong_in");
						Integer positionLong = (Integer)contentreq.get("positionLong");
                        if(positionLong_gt!=null){
                        	queryMapReturn.put("positionLong_gt", positionLong_gt);
						}
						if(positionLong_ge!=null){
                        	queryMapReturn.put("positionLong_ge", positionLong_ge);
						}
						if(positionLong_lt!=null){
                        	queryMapReturn.put("positionLong_lt", positionLong_lt);
						}
						if(positionLong_le!=null){
                        	queryMapReturn.put("positionLong_le", positionLong_le);
						}
						if(positionLong_in!=null){
                        	queryMapReturn.put("positionLong_in", positionLong_in);
						}
						if(positionLong!=null){
                        	queryMapReturn.put("positionLong", positionLong);
						}		
																								Integer positionWide_gt = (Integer)contentreq.get("positionWide_gt");
						Integer positionWide_ge = (Integer)contentreq.get("positionWide_ge");
						Integer positionWide_lt = (Integer)contentreq.get("positionWide_lt");
						Integer positionWide_le = (Integer)contentreq.get("positionWide_le");
						String positionWide_in = (String)contentreq.get("positionWide_in");
						Integer positionWide = (Integer)contentreq.get("positionWide");
                        if(positionWide_gt!=null){
                        	queryMapReturn.put("positionWide_gt", positionWide_gt);
						}
						if(positionWide_ge!=null){
                        	queryMapReturn.put("positionWide_ge", positionWide_ge);
						}
						if(positionWide_lt!=null){
                        	queryMapReturn.put("positionWide_lt", positionWide_lt);
						}
						if(positionWide_le!=null){
                        	queryMapReturn.put("positionWide_le", positionWide_le);
						}
						if(positionWide_in!=null){
                        	queryMapReturn.put("positionWide_in", positionWide_in);
						}
						if(positionWide!=null){
                        	queryMapReturn.put("positionWide", positionWide);
						}		
																								Integer siteDeep_gt = (Integer)contentreq.get("siteDeep_gt");
						Integer siteDeep_ge = (Integer)contentreq.get("siteDeep_ge");
						Integer siteDeep_lt = (Integer)contentreq.get("siteDeep_lt");
						Integer siteDeep_le = (Integer)contentreq.get("siteDeep_le");
						String siteDeep_in = (String)contentreq.get("siteDeep_in");
						Integer siteDeep = (Integer)contentreq.get("siteDeep");
                        if(siteDeep_gt!=null){
                        	queryMapReturn.put("siteDeep_gt", siteDeep_gt);
						}
						if(siteDeep_ge!=null){
                        	queryMapReturn.put("siteDeep_ge", siteDeep_ge);
						}
						if(siteDeep_lt!=null){
                        	queryMapReturn.put("siteDeep_lt", siteDeep_lt);
						}
						if(siteDeep_le!=null){
                        	queryMapReturn.put("siteDeep_le", siteDeep_le);
						}
						if(siteDeep_in!=null){
                        	queryMapReturn.put("siteDeep_in", siteDeep_in);
						}
						if(siteDeep!=null){
                        	queryMapReturn.put("siteDeep", siteDeep);
						}		
																																String photoUrl_like = (String)contentreq.get("photoUrl_like");
							String photoUrl_isNull = (String)contentreq.get("photoUrl_isNull");
							String photoUrl_isNotNull = (String)contentreq.get("photoUrl_isNotNull");
							String photoUrl_in = (String)contentreq.get("photoUrl_in");
							String photoUrl = (String)contentreq.get("photoUrl");
							if(photoUrl_like!=null){
	                        	queryMapReturn.put("photoUrl_like", photoUrl_like);
							}
							if(photoUrl_isNull!=null){
	                        	queryMapReturn.put("photoUrl_isNull", photoUrl_isNull);
							}
							if(photoUrl_isNotNull!=null){
	                        	queryMapReturn.put("photoUrl_isNotNull", photoUrl_isNotNull);
							}
							if(photoUrl_in!=null){
	                        	queryMapReturn.put("photoUrl_in", photoUrl_in);
							}
							if(photoUrl!=null){
	                        	queryMapReturn.put("photoUrl", photoUrl);
							}						           
																						
						    																												
																																			String recoveryShow = (String)contentreq.get("recoveryShow");
							if("true".equals(recoveryShow)){
								recoveryShowReturn = true;
							}
																																	}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				    Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray)orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for(int i=0;i<order.size();i++){
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String)obj.get("column"));
							orderVO.setOrderType((String)obj.get("type"));
							orderListReturn.add(orderVO);
						}						
					}
				}
			} else if ("DEL_SKIN_LESIONS_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if(true){
					if(contentreq!=null){
						idReturn = (Integer)contentreq.get("id");	
						    																												String delRecovery = (String)contentreq.get("delRecovery");
							if("true".equals(delRecovery)){
								delRecoveryReturn = true;
							}
																																	}	
				}
			} else if ("DEL_SKIN_LESIONS_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if(true){
					if(contentreq!=null){
						queryMapReturn = new HashMap<String, Object>();
																		Integer id_gt = (Integer)contentreq.get("id_gt");
						Integer id_ge = (Integer)contentreq.get("id_ge");
						Integer id_lt = (Integer)contentreq.get("id_lt");
						Integer id_le = (Integer)contentreq.get("id_le");
						String id_in = (String)contentreq.get("id_in");
						Integer id = (Integer)contentreq.get("id");
                        if(id_gt!=null){
                        	queryMapReturn.put("id_gt", id_gt);
						}
						if(id_ge!=null){
                        	queryMapReturn.put("id_ge", id_ge);
						}
						if(id_lt!=null){
                        	queryMapReturn.put("id_lt", id_lt);
						}
						if(id_le!=null){
                        	queryMapReturn.put("id_le", id_le);
						}
						if(id_in!=null){
                        	queryMapReturn.put("id_in", id_in);
						}
						if(id!=null){
                        	queryMapReturn.put("id", id);
						}		
																								Integer recoveryId_gt = (Integer)contentreq.get("recoveryId_gt");
						Integer recoveryId_ge = (Integer)contentreq.get("recoveryId_ge");
						Integer recoveryId_lt = (Integer)contentreq.get("recoveryId_lt");
						Integer recoveryId_le = (Integer)contentreq.get("recoveryId_le");
						String recoveryId_in = (String)contentreq.get("recoveryId_in");
						Integer recoveryId = (Integer)contentreq.get("recoveryId");
                        if(recoveryId_gt!=null){
                        	queryMapReturn.put("recoveryId_gt", recoveryId_gt);
						}
						if(recoveryId_ge!=null){
                        	queryMapReturn.put("recoveryId_ge", recoveryId_ge);
						}
						if(recoveryId_lt!=null){
                        	queryMapReturn.put("recoveryId_lt", recoveryId_lt);
						}
						if(recoveryId_le!=null){
                        	queryMapReturn.put("recoveryId_le", recoveryId_le);
						}
						if(recoveryId_in!=null){
                        	queryMapReturn.put("recoveryId_in", recoveryId_in);
						}
						if(recoveryId!=null){
                        	queryMapReturn.put("recoveryId", recoveryId);
						}		
																																String position_like = (String)contentreq.get("position_like");
							String position_isNull = (String)contentreq.get("position_isNull");
							String position_isNotNull = (String)contentreq.get("position_isNotNull");
							String position_in = (String)contentreq.get("position_in");
							String position = (String)contentreq.get("position");
							if(position_like!=null){
	                        	queryMapReturn.put("position_like", position_like);
							}
							if(position_isNull!=null){
	                        	queryMapReturn.put("position_isNull", position_isNull);
							}
							if(position_isNotNull!=null){
	                        	queryMapReturn.put("position_isNotNull", position_isNotNull);
							}
							if(position_in!=null){
	                        	queryMapReturn.put("position_in", position_in);
							}
							if(position!=null){
	                        	queryMapReturn.put("position", position);
							}						           
																															Integer positionLong_gt = (Integer)contentreq.get("positionLong_gt");
						Integer positionLong_ge = (Integer)contentreq.get("positionLong_ge");
						Integer positionLong_lt = (Integer)contentreq.get("positionLong_lt");
						Integer positionLong_le = (Integer)contentreq.get("positionLong_le");
						String positionLong_in = (String)contentreq.get("positionLong_in");
						Integer positionLong = (Integer)contentreq.get("positionLong");
                        if(positionLong_gt!=null){
                        	queryMapReturn.put("positionLong_gt", positionLong_gt);
						}
						if(positionLong_ge!=null){
                        	queryMapReturn.put("positionLong_ge", positionLong_ge);
						}
						if(positionLong_lt!=null){
                        	queryMapReturn.put("positionLong_lt", positionLong_lt);
						}
						if(positionLong_le!=null){
                        	queryMapReturn.put("positionLong_le", positionLong_le);
						}
						if(positionLong_in!=null){
                        	queryMapReturn.put("positionLong_in", positionLong_in);
						}
						if(positionLong!=null){
                        	queryMapReturn.put("positionLong", positionLong);
						}		
																								Integer positionWide_gt = (Integer)contentreq.get("positionWide_gt");
						Integer positionWide_ge = (Integer)contentreq.get("positionWide_ge");
						Integer positionWide_lt = (Integer)contentreq.get("positionWide_lt");
						Integer positionWide_le = (Integer)contentreq.get("positionWide_le");
						String positionWide_in = (String)contentreq.get("positionWide_in");
						Integer positionWide = (Integer)contentreq.get("positionWide");
                        if(positionWide_gt!=null){
                        	queryMapReturn.put("positionWide_gt", positionWide_gt);
						}
						if(positionWide_ge!=null){
                        	queryMapReturn.put("positionWide_ge", positionWide_ge);
						}
						if(positionWide_lt!=null){
                        	queryMapReturn.put("positionWide_lt", positionWide_lt);
						}
						if(positionWide_le!=null){
                        	queryMapReturn.put("positionWide_le", positionWide_le);
						}
						if(positionWide_in!=null){
                        	queryMapReturn.put("positionWide_in", positionWide_in);
						}
						if(positionWide!=null){
                        	queryMapReturn.put("positionWide", positionWide);
						}		
																								Integer siteDeep_gt = (Integer)contentreq.get("siteDeep_gt");
						Integer siteDeep_ge = (Integer)contentreq.get("siteDeep_ge");
						Integer siteDeep_lt = (Integer)contentreq.get("siteDeep_lt");
						Integer siteDeep_le = (Integer)contentreq.get("siteDeep_le");
						String siteDeep_in = (String)contentreq.get("siteDeep_in");
						Integer siteDeep = (Integer)contentreq.get("siteDeep");
                        if(siteDeep_gt!=null){
                        	queryMapReturn.put("siteDeep_gt", siteDeep_gt);
						}
						if(siteDeep_ge!=null){
                        	queryMapReturn.put("siteDeep_ge", siteDeep_ge);
						}
						if(siteDeep_lt!=null){
                        	queryMapReturn.put("siteDeep_lt", siteDeep_lt);
						}
						if(siteDeep_le!=null){
                        	queryMapReturn.put("siteDeep_le", siteDeep_le);
						}
						if(siteDeep_in!=null){
                        	queryMapReturn.put("siteDeep_in", siteDeep_in);
						}
						if(siteDeep!=null){
                        	queryMapReturn.put("siteDeep", siteDeep);
						}		
																																String photoUrl_like = (String)contentreq.get("photoUrl_like");
							String photoUrl_isNull = (String)contentreq.get("photoUrl_isNull");
							String photoUrl_isNotNull = (String)contentreq.get("photoUrl_isNotNull");
							String photoUrl_in = (String)contentreq.get("photoUrl_in");
							String photoUrl = (String)contentreq.get("photoUrl");
							if(photoUrl_like!=null){
	                        	queryMapReturn.put("photoUrl_like", photoUrl_like);
							}
							if(photoUrl_isNull!=null){
	                        	queryMapReturn.put("photoUrl_isNull", photoUrl_isNull);
							}
							if(photoUrl_isNotNull!=null){
	                        	queryMapReturn.put("photoUrl_isNotNull", photoUrl_isNotNull);
							}
							if(photoUrl_in!=null){
	                        	queryMapReturn.put("photoUrl_in", photoUrl_in);
							}
							if(photoUrl!=null){
	                        	queryMapReturn.put("photoUrl", photoUrl);
							}						           
																									
																														String delRecovery = (String)contentreq.get("delRecovery");
						if("true".equals(delRecovery)){
							delRecoveryReturn = true;
						}
																													}
					JSONObject pagereq = (JSONObject)reqParams.get("page");
				    if (pagereq != null) {
				    String pagenotemp = (String)pagereq.get("pageno");
				    String pagesizetemp = (String)pagereq.get("pagesize");
				    if ((pagenotemp != null) && (!"".equals(pagenotemp.trim()))) {
				          pagenoReturn = Integer.valueOf(pagenotemp).intValue();
				    }
				    if ((pagesizetemp != null) && (!"".equals(pagesizetemp.trim()))) {
				          pagesizeReturn = Integer.valueOf(pagesizetemp).intValue();
				        }
				    }
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (skinLesionsReturn != null) {
				parseMap.put("skinLesions", skinLesionsReturn);
			}
			if (skinLesionsListReturn != null && skinLesionsListReturn.size() > 0) {
				parseMap.put("skinLesionsList", skinLesionsListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}	
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}		
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}
			
			
															if (recoveryShowReturn != null) {
				parseMap.put("recoveryShow", recoveryShowReturn);
			}
			if (delRecoveryReturn != null) {
				parseMap.put("delRecovery", delRecoveryReturn);
			}
															
			
			
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command,String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
