package fsk.parse.assessmentLog;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.framework.system.util.JsonUtil;

import javax.servlet.http.HttpServletRequest;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.apache.log4j.Logger;
import fsk.entity.assessmentLog.AssessmentLogEntity;

import fsk.entity.assessmentTask.AssessmentTaskEntity;

import com.framework.system.util.JsonUtil;
import com.framework.system.db.manager.DBManager;
import com.framework.system.db.query.OrderVO;

/**
 * @Title: Parse
 * @Description: 评估操作日志解析器
 * @author feng.gu
 * @date 2016-07-19 11:09:28
 * @version V1.0
 * 
 */
public class AssessmentLogParse {
	private static Logger logger = Logger.getLogger(AssessmentLogParse.class);
	private static AssessmentLogParse assessmentLogParse;
	private DBManager dbManager = DBManager.getInstance();

	/**
	 * 获取实例
	 * 
	 * @return
	 */
	public static AssessmentLogParse getInstance() {
		if (assessmentLogParse == null) {
			assessmentLogParse = new AssessmentLogParse();
		}
		return assessmentLogParse;
	}

	public Map<String, Object> parse(int type, String command, String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		if (type == 1) {
			// json
			parseMap = this.parseByJson(command, reqStr, request);
		} else if (type == 2) {
			// xml
			parseMap = this.parseByXml(command, reqStr, request);
		}
		return parseMap;
	}

	private Map<String, Object> parseByJson(String command, String reqStr,
			HttpServletRequest request) {
		// 定义返回参数
		Map<String, Object> parseMap = new HashMap<String, Object>();
		try {
			String actionReturn = null;
			AssessmentLogEntity assessmentLogReturn = null;
			List<AssessmentLogEntity> assessmentLogListReturn = null;
			Integer idReturn = null;
			Map<String, Object> queryMapReturn = null;
			int pagenoReturn = 1;
			int pagesizeReturn = 10;
			List<OrderVO> orderListReturn = null;

			Boolean assessmentTaskShowReturn = false;
			Boolean delAssessmentTaskReturn = false;

			// json
			Map reqParams = JsonUtil.getMap4Json(reqStr);
			JSONObject contentreq = (JSONObject) reqParams.get("content");
			if ("ADD_ASSESSMENT_LOG_INFO_REQUEST".equals(command)) {
				actionReturn = "save";
				assessmentLogReturn = new AssessmentLogEntity();
				if (true) {
					if (contentreq != null) {
						Integer id = (Integer) contentreq.get("id");
						if (id != null) {
							assessmentLogReturn.setId(id);
							/*分量保存pei*/
							assessmentLogReturn  = (AssessmentLogEntity)dbManager.getById(id, AssessmentLogEntity.class);
						}
						Integer type = (Integer) contentreq.get("type");
						if (type != null) {
							assessmentLogReturn.setType(type);
						}
						String personName = (String) contentreq
								.get("personName");
						if (personName != null) {
							assessmentLogReturn.setPersonName(personName);
						}
						String createTime = (String) contentreq
								.get("createTime");
						if (createTime != null) {
							assessmentLogReturn.setCreateTime(createTime);
						}
						String des = (String) contentreq.get("des");
						if (des != null) {
							assessmentLogReturn.setDes(des);
						}
						Integer assessmentTaskId = (Integer) contentreq
								.get("assessmentTaskId");
						if (assessmentTaskId != null) {
							assessmentLogReturn
									.setAssessmentTaskId(assessmentTaskId);
						}
					}
				}
				if (true) {
					Object assessmentTask = contentreq.get("assessmentTask");
					if (assessmentTask != null) {
						JSONObject obj = (JSONObject) assessmentTask;
						if (obj != null) {
							AssessmentTaskEntity entity = new AssessmentTaskEntity();
							Integer id = (Integer) obj.get("id");
							if (id != null) {
								entity.setId(id);
							}
							Integer olderId = (Integer) obj.get("olderId");
							if (olderId != null) {
								entity.setOlderId(olderId);
							}
							String olderName = (String) obj.get("olderName");
							if (olderName != null) {
								entity.setOlderName(olderName);
							}
							String distributeTime = (String) obj
									.get("distributeTime");
							if (distributeTime != null) {
								entity.setDistributeTime(distributeTime);
							}
							Integer distributeEmployeeId = (Integer) obj
									.get("distributeEmployeeId");
							if (distributeEmployeeId != null) {
								entity.setDistributeEmployeeId(distributeEmployeeId);
							}
							String distributeName = (String) obj
									.get("distributeName");
							if (distributeName != null) {
								entity.setDistributeName(distributeName);
							}
							String expectedCompletionTime = (String) obj
									.get("expectedCompletionTime");
							if (expectedCompletionTime != null) {
								entity.setExpectedCompletionTime(expectedCompletionTime);
							}
							Integer healthAssessmentType = (Integer) obj
									.get("healthAssessmentType");
							if (healthAssessmentType != null) {
								entity.setHealthAssessmentType(healthAssessmentType);
							}
							Integer healthAssessmentId = (Integer) obj
									.get("healthAssessmentId");
							if (healthAssessmentId != null) {
								entity.setHealthAssessmentId(healthAssessmentId);
							}
							Integer healthAssessmentStatus = (Integer) obj
									.get("healthAssessmentStatus");
							if (healthAssessmentStatus != null) {
								entity.setHealthAssessmentStatus(healthAssessmentStatus);
							}
							String des = (String) obj.get("des");
							if (des != null) {
								entity.setDes(des);
							}
							Integer assessmentEmployeeId = (Integer) obj
									.get("assessmentEmployeeId");
							if (assessmentEmployeeId != null) {
								entity.setAssessmentEmployeeId(assessmentEmployeeId);
							}
							String assessmentName = (String) obj
									.get("assessmentName");
							if (assessmentName != null) {
								entity.setAssessmentName(assessmentName);
							}
							Integer taskStatus = (Integer) obj
									.get("taskStatus");
							if (taskStatus != null) {
								entity.setTaskStatus(taskStatus);
							}
							String auditPassTime = (String) obj
									.get("auditPassTime");
							if (auditPassTime != null) {
								entity.setAuditPassTime(auditPassTime);
							}
							assessmentLogReturn.setAssessmentTask(entity);
						}
					}
				}
			} else if ("QUERY_ASSESSMENT_LOG_INFO_REQUEST".equals(command)) {
				actionReturn = "getById";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
						String assessmentTaskShow = (String) contentreq
								.get("assessmentTaskShow");
						if ("true".equals(assessmentTaskShow)) {
							assessmentTaskShowReturn = true;
						}
					}
				}
			} else if ("QUERY_ASSESSMENT_LOG_LIST_REQUEST".equals(command)) {
				actionReturn = "getListByCondition";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer type_gt = (Integer) contentreq.get("type_gt");
						Integer type_ge = (Integer) contentreq.get("type_ge");
						Integer type_lt = (Integer) contentreq.get("type_lt");
						Integer type_le = (Integer) contentreq.get("type_le");
						String type_in = (String) contentreq.get("type_in");
						Integer type = (Integer) contentreq.get("type");
						if (type_gt != null) {
							queryMapReturn.put("type_gt", type_gt);
						}
						if (type_ge != null) {
							queryMapReturn.put("type_ge", type_ge);
						}
						if (type_lt != null) {
							queryMapReturn.put("type_lt", type_lt);
						}
						if (type_le != null) {
							queryMapReturn.put("type_le", type_le);
						}
						if (type_in != null) {
							queryMapReturn.put("type_in", type_in);
						}
						if (type != null) {
							queryMapReturn.put("type", type);
						}
						String personName_like = (String) contentreq
								.get("personName_like");
						String personName_isNull = (String) contentreq
								.get("personName_isNull");
						String personName_isNotNull = (String) contentreq
								.get("personName_isNotNull");
						String personName_in = (String) contentreq
								.get("personName_in");
						String personName = (String) contentreq
								.get("personName");
						if (personName_like != null) {
							queryMapReturn.put("personName_like",
									personName_like);
						}
						if (personName_isNull != null) {
							queryMapReturn.put("personName_isNull",
									personName_isNull);
						}
						if (personName_isNotNull != null) {
							queryMapReturn.put("personName_isNotNull",
									personName_isNotNull);
						}
						if (personName_in != null) {
							queryMapReturn.put("personName_in", personName_in);
						}
						if (personName != null) {
							queryMapReturn.put("personName", personName);
						}
						String createTime_gt = (String) contentreq
								.get("createTime_gt");
						String createTime_ge = (String) contentreq
								.get("createTime_ge");
						String createTime_lt = (String) contentreq
								.get("createTime_lt");
						String createTime_le = (String) contentreq
								.get("createTime_le");
						if (createTime_gt != null) {
							queryMapReturn.put("createTime_gt", createTime_gt);
						}
						if (createTime_ge != null) {
							queryMapReturn.put("createTime_ge", createTime_ge);
						}
						if (createTime_lt != null) {
							queryMapReturn.put("createTime_lt", createTime_lt);
						}
						if (createTime_le != null) {
							queryMapReturn.put("createTime_le", createTime_le);
						}
						String des_like = (String) contentreq.get("des_like");
						String des_isNull = (String) contentreq
								.get("des_isNull");
						String des_isNotNull = (String) contentreq
								.get("des_isNotNull");
						String des_in = (String) contentreq.get("des_in");
						String des = (String) contentreq.get("des");
						if (des_like != null) {
							queryMapReturn.put("des_like", des_like);
						}
						if (des_isNull != null) {
							queryMapReturn.put("des_isNull", des_isNull);
						}
						if (des_isNotNull != null) {
							queryMapReturn.put("des_isNotNull", des_isNotNull);
						}
						if (des_in != null) {
							queryMapReturn.put("des_in", des_in);
						}
						if (des != null) {
							queryMapReturn.put("des", des);
						}
						Integer assessmentTaskId_gt = (Integer) contentreq
								.get("assessmentTaskId_gt");
						Integer assessmentTaskId_ge = (Integer) contentreq
								.get("assessmentTaskId_ge");
						Integer assessmentTaskId_lt = (Integer) contentreq
								.get("assessmentTaskId_lt");
						Integer assessmentTaskId_le = (Integer) contentreq
								.get("assessmentTaskId_le");
						String assessmentTaskId_in = (String) contentreq
								.get("assessmentTaskId_in");
						Integer assessmentTaskId = (Integer) contentreq
								.get("assessmentTaskId");
						if (assessmentTaskId_gt != null) {
							queryMapReturn.put("assessmentTaskId_gt",
									assessmentTaskId_gt);
						}
						if (assessmentTaskId_ge != null) {
							queryMapReturn.put("assessmentTaskId_ge",
									assessmentTaskId_ge);
						}
						if (assessmentTaskId_lt != null) {
							queryMapReturn.put("assessmentTaskId_lt",
									assessmentTaskId_lt);
						}
						if (assessmentTaskId_le != null) {
							queryMapReturn.put("assessmentTaskId_le",
									assessmentTaskId_le);
						}
						if (assessmentTaskId_in != null) {
							queryMapReturn.put("assessmentTaskId_in",
									assessmentTaskId_in);
						}
						if (assessmentTaskId != null) {
							queryMapReturn.put("assessmentTaskId",
									assessmentTaskId);
						}

						String assessmentTaskShow = (String) contentreq
								.get("assessmentTaskShow");
						if ("true".equals(assessmentTaskShow)) {
							assessmentTaskShowReturn = true;
						}
					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null)
								&& (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp)
									.intValue();
						}
						if ((pagesizetemp != null)
								&& (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp)
									.intValue();
						}
					}
					Object orderreq = (Object) reqParams.get("order");
					if (orderreq != null) {
						JSONArray order = (JSONArray) orderreq;
						orderListReturn = new ArrayList<OrderVO>();
						for (int i = 0; i < order.size(); i++) {
							JSONObject obj = order.getJSONObject(i);
							OrderVO orderVO = new OrderVO();
							orderVO.setName((String) obj.get("column"));
							orderVO.setOrderType((String) obj.get("type"));
							orderListReturn.add(orderVO);
						}
					}
				}
			} else if ("DEL_ASSESSMENT_LOG_INFO_REQUEST".equals(command)) {
				actionReturn = "del";
				if (true) {
					if (contentreq != null) {
						idReturn = (Integer) contentreq.get("id");
						String delAssessmentTask = (String) contentreq
								.get("delAssessmentTask");
						if ("true".equals(delAssessmentTask)) {
							delAssessmentTaskReturn = true;
						}
					}
				}
			} else if ("DEL_ASSESSMENT_LOG_LIST_REQUEST".equals(command)) {
				actionReturn = "delList";
				if (true) {
					if (contentreq != null) {
						queryMapReturn = new HashMap<String, Object>();
						Integer id_gt = (Integer) contentreq.get("id_gt");
						Integer id_ge = (Integer) contentreq.get("id_ge");
						Integer id_lt = (Integer) contentreq.get("id_lt");
						Integer id_le = (Integer) contentreq.get("id_le");
						String id_in = (String) contentreq.get("id_in");
						Integer id = (Integer) contentreq.get("id");
						if (id_gt != null) {
							queryMapReturn.put("id_gt", id_gt);
						}
						if (id_ge != null) {
							queryMapReturn.put("id_ge", id_ge);
						}
						if (id_lt != null) {
							queryMapReturn.put("id_lt", id_lt);
						}
						if (id_le != null) {
							queryMapReturn.put("id_le", id_le);
						}
						if (id_in != null) {
							queryMapReturn.put("id_in", id_in);
						}
						if (id != null) {
							queryMapReturn.put("id", id);
						}
						Integer type_gt = (Integer) contentreq.get("type_gt");
						Integer type_ge = (Integer) contentreq.get("type_ge");
						Integer type_lt = (Integer) contentreq.get("type_lt");
						Integer type_le = (Integer) contentreq.get("type_le");
						String type_in = (String) contentreq.get("type_in");
						Integer type = (Integer) contentreq.get("type");
						if (type_gt != null) {
							queryMapReturn.put("type_gt", type_gt);
						}
						if (type_ge != null) {
							queryMapReturn.put("type_ge", type_ge);
						}
						if (type_lt != null) {
							queryMapReturn.put("type_lt", type_lt);
						}
						if (type_le != null) {
							queryMapReturn.put("type_le", type_le);
						}
						if (type_in != null) {
							queryMapReturn.put("type_in", type_in);
						}
						if (type != null) {
							queryMapReturn.put("type", type);
						}
						String personName_like = (String) contentreq
								.get("personName_like");
						String personName_isNull = (String) contentreq
								.get("personName_isNull");
						String personName_isNotNull = (String) contentreq
								.get("personName_isNotNull");
						String personName_in = (String) contentreq
								.get("personName_in");
						String personName = (String) contentreq
								.get("personName");
						if (personName_like != null) {
							queryMapReturn.put("personName_like",
									personName_like);
						}
						if (personName_isNull != null) {
							queryMapReturn.put("personName_isNull",
									personName_isNull);
						}
						if (personName_isNotNull != null) {
							queryMapReturn.put("personName_isNotNull",
									personName_isNotNull);
						}
						if (personName_in != null) {
							queryMapReturn.put("personName_in", personName_in);
						}
						if (personName != null) {
							queryMapReturn.put("personName", personName);
						}
						String createTime_gt = (String) contentreq
								.get("createTime_gt");
						String createTime_ge = (String) contentreq
								.get("createTime_ge");
						String createTime_lt = (String) contentreq
								.get("createTime_lt");
						String createTime_le = (String) contentreq
								.get("createTime_le");
						if (createTime_gt != null) {
							queryMapReturn.put("createTime_gt", createTime_gt);
						}
						if (createTime_ge != null) {
							queryMapReturn.put("createTime_ge", createTime_ge);
						}
						if (createTime_lt != null) {
							queryMapReturn.put("createTime_lt", createTime_lt);
						}
						if (createTime_le != null) {
							queryMapReturn.put("createTime_le", createTime_le);
						}
						String des_like = (String) contentreq.get("des_like");
						String des_isNull = (String) contentreq
								.get("des_isNull");
						String des_isNotNull = (String) contentreq
								.get("des_isNotNull");
						String des_in = (String) contentreq.get("des_in");
						String des = (String) contentreq.get("des");
						if (des_like != null) {
							queryMapReturn.put("des_like", des_like);
						}
						if (des_isNull != null) {
							queryMapReturn.put("des_isNull", des_isNull);
						}
						if (des_isNotNull != null) {
							queryMapReturn.put("des_isNotNull", des_isNotNull);
						}
						if (des_in != null) {
							queryMapReturn.put("des_in", des_in);
						}
						if (des != null) {
							queryMapReturn.put("des", des);
						}
						Integer assessmentTaskId_gt = (Integer) contentreq
								.get("assessmentTaskId_gt");
						Integer assessmentTaskId_ge = (Integer) contentreq
								.get("assessmentTaskId_ge");
						Integer assessmentTaskId_lt = (Integer) contentreq
								.get("assessmentTaskId_lt");
						Integer assessmentTaskId_le = (Integer) contentreq
								.get("assessmentTaskId_le");
						String assessmentTaskId_in = (String) contentreq
								.get("assessmentTaskId_in");
						Integer assessmentTaskId = (Integer) contentreq
								.get("assessmentTaskId");
						if (assessmentTaskId_gt != null) {
							queryMapReturn.put("assessmentTaskId_gt",
									assessmentTaskId_gt);
						}
						if (assessmentTaskId_ge != null) {
							queryMapReturn.put("assessmentTaskId_ge",
									assessmentTaskId_ge);
						}
						if (assessmentTaskId_lt != null) {
							queryMapReturn.put("assessmentTaskId_lt",
									assessmentTaskId_lt);
						}
						if (assessmentTaskId_le != null) {
							queryMapReturn.put("assessmentTaskId_le",
									assessmentTaskId_le);
						}
						if (assessmentTaskId_in != null) {
							queryMapReturn.put("assessmentTaskId_in",
									assessmentTaskId_in);
						}
						if (assessmentTaskId != null) {
							queryMapReturn.put("assessmentTaskId",
									assessmentTaskId);
						}

						String delAssessmentTask = (String) contentreq
								.get("delAssessmentTask");
						if ("true".equals(delAssessmentTask)) {
							delAssessmentTaskReturn = true;
						}
					}
					JSONObject pagereq = (JSONObject) reqParams.get("page");
					if (pagereq != null) {
						String pagenotemp = (String) pagereq.get("pageno");
						String pagesizetemp = (String) pagereq.get("pagesize");
						if ((pagenotemp != null)
								&& (!"".equals(pagenotemp.trim()))) {
							pagenoReturn = Integer.valueOf(pagenotemp)
									.intValue();
						}
						if ((pagesizetemp != null)
								&& (!"".equals(pagesizetemp.trim()))) {
							pagesizeReturn = Integer.valueOf(pagesizetemp)
									.intValue();
						}
					}
				}
			}

			if (actionReturn != null && !"".equals(actionReturn)) {
				parseMap.put("action", actionReturn);
			}
			if (assessmentLogReturn != null) {
				parseMap.put("assessmentLog", assessmentLogReturn);
			}
			if (assessmentLogListReturn != null
					&& assessmentLogListReturn.size() > 0) {
				parseMap.put("assessmentLogList", assessmentLogListReturn);
			}
			if (idReturn != null) {
				parseMap.put("id", idReturn);
			}
			if (orderListReturn != null && orderListReturn.size() > 0) {
				parseMap.put("orderList", orderListReturn);
			}
			if (queryMapReturn != null) {
				parseMap.put("queryMap", queryMapReturn);
			}
			if (pagenoReturn > 0) {
				parseMap.put("pageno", pagenoReturn);
			}
			if (pagesizeReturn > 0) {
				parseMap.put("pagesize", pagesizeReturn);
			}

			if (assessmentTaskShowReturn != null) {
				parseMap.put("assessmentTaskShow", assessmentTaskShowReturn);
			}
			if (delAssessmentTaskReturn != null) {
				parseMap.put("delAssessmentTask", delAssessmentTaskReturn);
			}

		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			logger.error(e);
		}
		return parseMap;
	}

	private Map<String, Object> parseByXml(String command, String reqStr,
			HttpServletRequest request) {
		// TODO Auto-generated method stub
		return null;
	}
}
